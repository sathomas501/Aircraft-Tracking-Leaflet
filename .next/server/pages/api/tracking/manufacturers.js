"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/tracking/manufacturers";
exports.ids = ["pages/api/tracking/manufacturers"];
exports.modules = {

/***/ "(api-node)/./lib/db/DatabaseManager.ts":
/*!***********************************!*\
  !*** ./lib/db/DatabaseManager.ts ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DatabaseManager: () => (/* binding */ DatabaseManager),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var sqlite3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sqlite3 */ \"sqlite3\");\n/* harmony import */ var sqlite3__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(sqlite3__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var sqlite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! sqlite */ \"sqlite\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_3__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([sqlite__WEBPACK_IMPORTED_MODULE_2__]);\nsqlite__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n// SimplifiedDatabaseManager.ts\n\n\n\n\n// The main database manager class\nclass DatabaseManager {\n    static{\n        this.instance = null;\n    }\n    constructor(dbPath){\n        this.db = null;\n        this.isInitialized = false;\n        this.cache = {};\n        this.dbPath = dbPath;\n        console.log(`[DB] Database path: ${this.dbPath}`);\n    }\n    /**\r\n   * Get singleton instance\r\n   */ static getInstance(dbPath) {\n        if (!DatabaseManager.instance) {\n            // First try to use the provided dbPath parameter\n            if (dbPath) {\n                DatabaseManager.instance = new DatabaseManager(dbPath);\n            } else {\n                // Otherwise, try to use the environment variable\n                const envPath = process.env.STATIC_DB_PATH;\n                if (!envPath) {\n                    throw new Error('STATIC_DB_PATH not defined in .env');\n                }\n                DatabaseManager.instance = new DatabaseManager(envPath);\n            }\n        }\n        return DatabaseManager.instance;\n    }\n    /**\r\n   * Initialize the database connection and create tables if needed\r\n   */ async initialize() {\n        if (this.isInitialized) return;\n        try {\n            // Ensure directory exists\n            const dbDir = path__WEBPACK_IMPORTED_MODULE_0___default().dirname(this.dbPath);\n            if (!fs__WEBPACK_IMPORTED_MODULE_3___default().existsSync(dbDir)) {\n                fs__WEBPACK_IMPORTED_MODULE_3___default().mkdirSync(dbDir, {\n                    recursive: true\n                });\n            }\n            // Open database connection\n            this.db = await (0,sqlite__WEBPACK_IMPORTED_MODULE_2__.open)({\n                filename: this.dbPath,\n                driver: (sqlite3__WEBPACK_IMPORTED_MODULE_1___default().Database)\n            });\n            // Set pragmas for better performance\n            await this.db.run('PRAGMA journal_mode = WAL;');\n            await this.db.run('PRAGMA busy_timeout = 5000;');\n            this.isInitialized = true;\n            console.log('[DB] Database initialized successfully');\n        } catch (error) {\n            console.error('[DB] Failed to initialize database:', error);\n            throw error;\n        }\n    }\n    /**\r\n   * Get data with caching\r\n   */ async query(cacheKey, sqlQuery, params = [], ttl = 300 // 5 minutes default TTL\n    ) {\n        // Check if we need to initialize first\n        if (!this.isInitialized) {\n            await this.initialize();\n        }\n        // Try to get from cache first\n        const cachedData = this.getFromCache(cacheKey);\n        if (cachedData) {\n            console.log(`[DB] Cache hit for: ${cacheKey}`);\n            return cachedData;\n        }\n        // Cache miss, execute query\n        console.log(`[DB] Cache miss for: ${cacheKey}, executing query`);\n        try {\n            const results = await this.db.all(sqlQuery, params);\n            // Store in cache\n            this.setInCache(cacheKey, results, ttl);\n            return results;\n        } catch (error) {\n            console.error(`[DB] Query error for ${cacheKey}:`, error);\n            throw error;\n        }\n    }\n    /**\r\n   * Get single item with caching\r\n   */ async getSingle(cacheKey, sqlQuery, params = [], ttl = 300) {\n        // Check if we need to initialize first\n        if (!this.isInitialized) {\n            await this.initialize();\n        }\n        // Try to get from cache first\n        const cachedData = this.getFromCache(cacheKey);\n        if (cachedData !== undefined) {\n            console.log(`[DB] Cache hit for: ${cacheKey}`);\n            return cachedData;\n        }\n        // Cache miss, execute query\n        console.log(`[DB] Cache miss for: ${cacheKey}, executing query`);\n        try {\n            const result = await this.db.get(sqlQuery, params);\n            // Store in cache (even if null)\n            this.setInCache(cacheKey, result || null, ttl);\n            return result || null;\n        } catch (error) {\n            console.error(`[DB] Query error for ${cacheKey}:`, error);\n            throw error;\n        }\n    }\n    /**\r\n   * Get manufacturers with aircraft count\r\n   */ async getManufacturersWithCount(limit = 75) {\n        const cacheKey = `manufacturers-count-${limit}`;\n        // Query with exact column case matching your schema\n        return this.query(cacheKey, `SELECT \n      MANUFACTURER AS name,  \n      COUNT(*) AS count \n    FROM aircraft \n    WHERE MANUFACTURER IS NOT NULL AND trim(MANUFACTURER) != '' \n    GROUP BY MANUFACTURER \n    HAVING count > 0 \n    ORDER BY count DESC \n    LIMIT ?`, [\n            limit\n        ], 600 // 10 minute cache\n        );\n    }\n    async getIcao24sForManufacturer(manufacturer, region) {\n        if (!this.isInitialized) {\n            console.log('[DB] Not initialized, calling initialize()');\n            await this.initialize();\n        }\n        const cacheKey = region ? `ICAO24s-${manufacturer.toUpperCase()}-${region}` : `ICAO24s-${manufacturer.toUpperCase()}`;\n        const cachedData = this.getFromCache(cacheKey);\n        if (cachedData) {\n            console.log(`[DB] Cache hit for: ${cacheKey}`);\n            return cachedData;\n        }\n        console.log(`[DB] Cache miss for: ${cacheKey}, executing query`);\n        try {\n            const queryParts = [\n                `SELECT DISTINCT ICAO24 FROM aircraft`,\n                `WHERE LOWER(MANUFACTURER) = LOWER(?)`,\n                `AND ICAO24 IS NOT NULL`\n            ];\n            const queryParams = [\n                manufacturer\n            ];\n            // Add region filtering if region is specified\n            if (region !== undefined) {\n                // Check if region is a number or string\n                if (typeof region === 'string' && !isNaN(parseInt(region, 10))) {\n                    // If it's a numeric string, convert to number\n                    queryParts.push(`AND REGION = ?`);\n                    queryParams.push(parseInt(region, 10));\n                } else if (typeof region === 'number') {\n                    // If it's already a number\n                    queryParts.push(`AND REGION = ?`);\n                    queryParams.push(region);\n                } else {\n                    // Assume it's a state string\n                    queryParts.push(`AND LOWER(STATE) = LOWER(?)`);\n                    queryParams.push(region);\n                }\n            }\n            const query = queryParts.join(' ');\n            const result = await this.db.all(query, queryParams);\n            const ICAO24s = result.map((row)=>row.ICAO24.toLowerCase());\n            console.log(`[DB] Retrieved ${ICAO24s.length} ICAO24s for ${manufacturer}${region ? ` in region/state ${region}` : ''}`);\n            this.setInCache(cacheKey, ICAO24s, 300);\n            return ICAO24s;\n        } catch (error) {\n            console.error(`[DB] Error retrieving ICAO24s for manufacturer ${manufacturer}${region ? ` in region/state ${region}` : ''}:`, error);\n            return [];\n        }\n    }\n    /**\r\n   * Get aircraft by ICAO24 codes\r\n   */ async getAircraftByIcao24s(ICAO24s) {\n        if (!Array.isArray(ICAO24s) || ICAO24s.length === 0) {\n            return [];\n        }\n        // Get individual aircraft from cache if possible\n        const result = [];\n        const missingIcao24s = [];\n        for (const icao of ICAO24s){\n            const cachedAircraft = this.getFromCache(`aircraft-${icao}`);\n            if (cachedAircraft) {\n                result.push(cachedAircraft);\n            } else {\n                missingIcao24s.push(icao);\n            }\n        }\n        // Fetch any missing aircraft\n        if (missingIcao24s.length > 0) {\n            const placeholders = missingIcao24s.map(()=>'?').join(',');\n            const query = `\n        SELECT *\n        FROM aircraft\n        WHERE ICAO24 IN (${placeholders})\n      `;\n            const fetchedAircraft = await this.query(`aircraft-batch-${Date.now()}`, query, missingIcao24s, 0 // Don't cache the batch query result\n            );\n            // Cache individual results\n            for (const aircraft of fetchedAircraft){\n                this.setInCache(`aircraft-${aircraft.ICAO24}`, aircraft, 300);\n                result.push(aircraft);\n            }\n        }\n        return result;\n    }\n    /**\r\n   * Get models by MANUFACTURER\r\n   */ async getModelsByManufacturer(MANUFACTURER) {\n        const cacheKey = `models-${MANUFACTURER}`;\n        return this.query(cacheKey, `SELECT \n        MODEL,\n        MANUFACTURER,\n        COUNT(DISTINCT ICAO24) as total_count,\n        MAX(NAME) as NAME,\n        MAX(CITY) as CITY,\n        MAX(STATE) as STATE,\n        MAX(TYPE_REGISTRANT) as TYPE_REGISTRANT\n      FROM aircraft\n      WHERE MANUFACTURER = ?\n      GROUP BY MODEL, MANUFACTURER\n      ORDER BY total_count DESC`, [\n            MANUFACTURER\n        ], 300 // 5 minute cache\n        );\n    }\n    /**\r\n   * Store data in cache\r\n   */ setInCache(key, data, ttl) {\n        this.cache[key] = {\n            data,\n            timestamp: Date.now(),\n            ttl: ttl * 1000\n        };\n    }\n    /**\r\n   * Get data from cache if valid\r\n   */ getFromCache(key) {\n        const entry = this.cache[key];\n        if (!entry) return undefined;\n        // Check if cache entry is still valid\n        const age = Date.now() - entry.timestamp;\n        if (age > entry.ttl) {\n            // Cache expired\n            delete this.cache[key];\n            return undefined;\n        }\n        return entry.data;\n    }\n    /**\r\n   * Clear entire cache or specific keys\r\n   */ clearCache(key) {\n        if (key) {\n            delete this.cache[key];\n            console.log(`[DB] Cleared cache for: ${key}`);\n        } else {\n            this.cache = {};\n            console.log('[DB] Cleared entire cache');\n        }\n    }\n    /**\r\n   * Close database connection\r\n   */ async close() {\n        if (this.db) {\n            await this.db.close();\n            this.db = null;\n            this.isInitialized = false;\n            console.log('[DB] Database connection closed');\n        }\n    }\n}\n// Export a singleton instance\nconst dbManager = DatabaseManager.getInstance();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (dbManager);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./lib/db/DatabaseManager.ts\n");

/***/ }),

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftracking%2Fmanufacturers&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Ctracking%5Cmanufacturers.ts&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftracking%2Fmanufacturers&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Ctracking%5Cmanufacturers.ts&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_tracking_manufacturers_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\tracking\\manufacturers.ts */ \"(api-node)/./pages/api/tracking/manufacturers.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_tracking_manufacturers_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_tracking_manufacturers_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_tracking_manufacturers_ts__WEBPACK_IMPORTED_MODULE_3__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_tracking_manufacturers_ts__WEBPACK_IMPORTED_MODULE_3__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/tracking/manufacturers\",\n        pathname: \"/api/tracking/manufacturers\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_tracking_manufacturers_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtcm91dGUtbG9hZGVyL2luZGV4LmpzP2tpbmQ9UEFHRVNfQVBJJnBhZ2U9JTJGYXBpJTJGdHJhY2tpbmclMkZtYW51ZmFjdHVyZXJzJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGcGFnZXMlNUNhcGklNUN0cmFja2luZyU1Q21hbnVmYWN0dXJlcnMudHMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ0U7QUFDMUQ7QUFDcUU7QUFDckU7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLGlFQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyxpRUFBUTtBQUNwQztBQUNPLHdCQUF3Qix5R0FBbUI7QUFDbEQ7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQscUMiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzXFxcXGFwaVxcXFx0cmFja2luZ1xcXFxtYW51ZmFjdHVyZXJzLnRzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsICdkZWZhdWx0Jyk7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCAnY29uZmlnJyk7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS90cmFja2luZy9tYW51ZmFjdHVyZXJzXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvdHJhY2tpbmcvbWFudWZhY3R1cmVyc1wiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6ICcnLFxuICAgICAgICBmaWxlbmFtZTogJydcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftracking%2Fmanufacturers&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Ctracking%5Cmanufacturers.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/tracking/manufacturers.ts":
/*!*********************************************!*\
  !*** ./pages/api/tracking/manufacturers.ts ***!
  \*********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_db_DatabaseManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../lib/db/DatabaseManager */ \"(api-node)/./lib/db/DatabaseManager.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_db_DatabaseManager__WEBPACK_IMPORTED_MODULE_0__]);\n_lib_db_DatabaseManager__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n// pages/api/aircraft/tracking/manufacturers.ts\n\nasync function handler(req, res) {\n    console.log('[API] Manufacturers endpoint called with method:', req.method);\n    try {\n        // Check database connection first\n        console.log('[API] Checking database connection...');\n        await _lib_db_DatabaseManager__WEBPACK_IMPORTED_MODULE_0__[\"default\"].initialize();\n        console.log('[API] Database initialized successfully');\n        // Get top 75 manufacturers by aircraft count\n        console.log('[API] Fetching manufacturers...');\n        // Use a simpler query with explicit column name targeting\n        const query = `\n      SELECT \n        MANUFACTURER AS name, \n        COUNT(*) AS count \n      FROM aircraft \n      WHERE MANUFACTURER IS NOT NULL \n      GROUP BY MANUFACTURER \n      HAVING count > 0 \n      ORDER BY count DESC \n      LIMIT 75\n    `;\n        console.log('[API] Executing query:', query);\n        // 1. First check for empty table\n        const countQuery = await _lib_db_DatabaseManager__WEBPACK_IMPORTED_MODULE_0__[\"default\"].query('aircraft-count', 'SELECT COUNT(*) as count FROM aircraft', [], 0);\n        const tableCount = countQuery.length > 0 ? countQuery[0].count || 0 : 0;\n        console.log('[API] Aircraft table has', tableCount, 'records');\n        if (tableCount === 0) {\n            console.log('[API] Aircraft table is empty, returning empty result');\n            return res.status(200).json([]);\n        }\n        // 2. Execute the manufacturers query\n        const manufacturers = await _lib_db_DatabaseManager__WEBPACK_IMPORTED_MODULE_0__[\"default\"].query('manufacturers-direct', query, [], 0);\n        console.log('[API] Query returned', manufacturers.length, 'results');\n        // Log a sample of the results\n        if (manufacturers.length > 0) {\n            console.log('[API] Sample results:', manufacturers.slice(0, 3));\n        }\n        // Format for the UI\n        const formattedManufacturers = manufacturers.map((m)=>({\n                value: m.name,\n                label: `${m.name} (${m.count} aircraft)`\n            }));\n        return res.status(200).json(formattedManufacturers);\n    } catch (error) {\n        console.error('[API] Error fetching manufacturers:', error);\n        // Check database tables\n        try {\n            console.log('[API] Checking database tables...');\n            const tables = await _lib_db_DatabaseManager__WEBPACK_IMPORTED_MODULE_0__[\"default\"].query('db-tables', \"SELECT name FROM sqlite_master WHERE type='table'\", [], 0);\n            console.log('[API] Database tables:', tables);\n            // If aircraft table exists, check schema\n            if (tables.some((t)=>t.name === 'aircraft')) {\n                const schemaResult = await _lib_db_DatabaseManager__WEBPACK_IMPORTED_MODULE_0__[\"default\"].query('aircraft-schema', 'PRAGMA table_info(aircraft)', [], 0);\n                console.log('[API] Aircraft table schema:', schemaResult);\n            }\n        } catch (tableError) {\n            console.error('[API] Error checking tables:', tableError);\n        }\n        return res.status(500).json({\n            error: 'Failed to fetch manufacturers',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3BhZ2VzL2FwaS90cmFja2luZy9tYW51ZmFjdHVyZXJzLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsK0NBQStDO0FBR1M7QUFFekMsZUFBZUMsUUFDNUJDLEdBQW1CLEVBQ25CQyxHQUFvQjtJQUVwQkMsUUFBUUMsR0FBRyxDQUFDLG9EQUFvREgsSUFBSUksTUFBTTtJQUUxRSxJQUFJO1FBQ0Ysa0NBQWtDO1FBQ2xDRixRQUFRQyxHQUFHLENBQUM7UUFDWixNQUFNTCwwRUFBb0I7UUFDMUJJLFFBQVFDLEdBQUcsQ0FBQztRQUVaLDZDQUE2QztRQUM3Q0QsUUFBUUMsR0FBRyxDQUFDO1FBRVosMERBQTBEO1FBQzFELE1BQU1HLFFBQVEsQ0FBQzs7Ozs7Ozs7OztJQVVmLENBQUM7UUFFREosUUFBUUMsR0FBRyxDQUFDLDBCQUEwQkc7UUFFdEMsaUNBQWlDO1FBQ2pDLE1BQU1DLGFBQWEsTUFBTVQscUVBQWUsQ0FDdEMsa0JBQ0EsMENBQ0EsRUFBRSxFQUNGO1FBRUYsTUFBTVUsYUFDSkQsV0FBV0UsTUFBTSxHQUFHLElBQUksVUFBVyxDQUFDLEVBQUUsQ0FBU0MsS0FBSyxJQUFJLElBQUk7UUFFOURSLFFBQVFDLEdBQUcsQ0FBQyw0QkFBNEJLLFlBQVk7UUFFcEQsSUFBSUEsZUFBZSxHQUFHO1lBQ3BCTixRQUFRQyxHQUFHLENBQUM7WUFDWixPQUFPRixJQUFJVSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDLEVBQUU7UUFDaEM7UUFFQSxxQ0FBcUM7UUFDckMsTUFBTUMsZ0JBQWdCLE1BQU1mLHFFQUFlLENBQ3pDLHdCQUNBUSxPQUNBLEVBQUUsRUFDRjtRQUVGSixRQUFRQyxHQUFHLENBQUMsd0JBQXdCVSxjQUFjSixNQUFNLEVBQUU7UUFFMUQsOEJBQThCO1FBQzlCLElBQUlJLGNBQWNKLE1BQU0sR0FBRyxHQUFHO1lBQzVCUCxRQUFRQyxHQUFHLENBQUMseUJBQXlCVSxjQUFjQyxLQUFLLENBQUMsR0FBRztRQUM5RDtRQUVBLG9CQUFvQjtRQUNwQixNQUFNQyx5QkFBeUNGLGNBQWNHLEdBQUcsQ0FDOUQsQ0FBQ0MsSUFBWTtnQkFDWEMsT0FBT0QsRUFBRUUsSUFBSTtnQkFDYkMsT0FBTyxHQUFHSCxFQUFFRSxJQUFJLENBQVcsRUFBRSxFQUFFRixFQUFFUCxLQUFLLENBQVcsVUFBVSxDQUFDO1lBQzlEO1FBR0YsT0FBT1QsSUFBSVUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQ0c7SUFDOUIsRUFBRSxPQUFPTSxPQUFPO1FBQ2RuQixRQUFRbUIsS0FBSyxDQUFDLHVDQUF1Q0E7UUFFckQsd0JBQXdCO1FBQ3hCLElBQUk7WUFDRm5CLFFBQVFDLEdBQUcsQ0FBQztZQUNaLE1BQU1tQixTQUFTLE1BQU14QixxRUFBZSxDQUNsQyxhQUNBLHFEQUNBLEVBQUUsRUFDRjtZQUVGSSxRQUFRQyxHQUFHLENBQUMsMEJBQTBCbUI7WUFFdEMseUNBQXlDO1lBQ3pDLElBQUlBLE9BQU9DLElBQUksQ0FBQyxDQUFDQyxJQUFXQSxFQUFFTCxJQUFJLEtBQUssYUFBYTtnQkFDbEQsTUFBTU0sZUFBZSxNQUFNM0IscUVBQWUsQ0FDeEMsbUJBQ0EsK0JBQ0EsRUFBRSxFQUNGO2dCQUVGSSxRQUFRQyxHQUFHLENBQUMsZ0NBQWdDc0I7WUFDOUM7UUFDRixFQUFFLE9BQU9DLFlBQVk7WUFDbkJ4QixRQUFRbUIsS0FBSyxDQUFDLGdDQUFnQ0s7UUFDaEQ7UUFFQSxPQUFPekIsSUFBSVUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUMxQlMsT0FBTztZQUNQTSxTQUFTTixpQkFBaUJPLFFBQVFQLE1BQU1NLE9BQU8sR0FBRztRQUNwRDtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcc2F0aG9cXERvY3VtZW50c1xcUHJvamVjdHNcXGFpcmNyYWZ0LXRyYWNraW5nXFxwYWdlc1xcYXBpXFx0cmFja2luZ1xcbWFudWZhY3R1cmVycy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBwYWdlcy9hcGkvYWlyY3JhZnQvdHJhY2tpbmcvbWFudWZhY3R1cmVycy50c1xyXG5pbXBvcnQgdHlwZSB7IE5leHRBcGlSZXF1ZXN0LCBOZXh0QXBpUmVzcG9uc2UgfSBmcm9tICduZXh0JztcclxuaW1wb3J0IHsgU2VsZWN0T3B0aW9uIH0gZnJvbSAnQC90eXBlcy9iYXNlJztcclxuaW1wb3J0IGRiTWFuYWdlciBmcm9tICcuLi8uLi8uLi9saWIvZGIvRGF0YWJhc2VNYW5hZ2VyJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIoXHJcbiAgcmVxOiBOZXh0QXBpUmVxdWVzdCxcclxuICByZXM6IE5leHRBcGlSZXNwb25zZVxyXG4pIHtcclxuICBjb25zb2xlLmxvZygnW0FQSV0gTWFudWZhY3R1cmVycyBlbmRwb2ludCBjYWxsZWQgd2l0aCBtZXRob2Q6JywgcmVxLm1ldGhvZCk7XHJcblxyXG4gIHRyeSB7XHJcbiAgICAvLyBDaGVjayBkYXRhYmFzZSBjb25uZWN0aW9uIGZpcnN0XHJcbiAgICBjb25zb2xlLmxvZygnW0FQSV0gQ2hlY2tpbmcgZGF0YWJhc2UgY29ubmVjdGlvbi4uLicpO1xyXG4gICAgYXdhaXQgZGJNYW5hZ2VyLmluaXRpYWxpemUoKTtcclxuICAgIGNvbnNvbGUubG9nKCdbQVBJXSBEYXRhYmFzZSBpbml0aWFsaXplZCBzdWNjZXNzZnVsbHknKTtcclxuXHJcbiAgICAvLyBHZXQgdG9wIDc1IG1hbnVmYWN0dXJlcnMgYnkgYWlyY3JhZnQgY291bnRcclxuICAgIGNvbnNvbGUubG9nKCdbQVBJXSBGZXRjaGluZyBtYW51ZmFjdHVyZXJzLi4uJyk7XHJcblxyXG4gICAgLy8gVXNlIGEgc2ltcGxlciBxdWVyeSB3aXRoIGV4cGxpY2l0IGNvbHVtbiBuYW1lIHRhcmdldGluZ1xyXG4gICAgY29uc3QgcXVlcnkgPSBgXHJcbiAgICAgIFNFTEVDVCBcclxuICAgICAgICBNQU5VRkFDVFVSRVIgQVMgbmFtZSwgXHJcbiAgICAgICAgQ09VTlQoKikgQVMgY291bnQgXHJcbiAgICAgIEZST00gYWlyY3JhZnQgXHJcbiAgICAgIFdIRVJFIE1BTlVGQUNUVVJFUiBJUyBOT1QgTlVMTCBcclxuICAgICAgR1JPVVAgQlkgTUFOVUZBQ1RVUkVSIFxyXG4gICAgICBIQVZJTkcgY291bnQgPiAwIFxyXG4gICAgICBPUkRFUiBCWSBjb3VudCBERVNDIFxyXG4gICAgICBMSU1JVCA3NVxyXG4gICAgYDtcclxuXHJcbiAgICBjb25zb2xlLmxvZygnW0FQSV0gRXhlY3V0aW5nIHF1ZXJ5OicsIHF1ZXJ5KTtcclxuXHJcbiAgICAvLyAxLiBGaXJzdCBjaGVjayBmb3IgZW1wdHkgdGFibGVcclxuICAgIGNvbnN0IGNvdW50UXVlcnkgPSBhd2FpdCBkYk1hbmFnZXIucXVlcnkoXHJcbiAgICAgICdhaXJjcmFmdC1jb3VudCcsXHJcbiAgICAgICdTRUxFQ1QgQ09VTlQoKikgYXMgY291bnQgRlJPTSBhaXJjcmFmdCcsXHJcbiAgICAgIFtdLFxyXG4gICAgICAwXHJcbiAgICApO1xyXG4gICAgY29uc3QgdGFibGVDb3VudCA9XHJcbiAgICAgIGNvdW50UXVlcnkubGVuZ3RoID4gMCA/IChjb3VudFF1ZXJ5WzBdIGFzIGFueSkuY291bnQgfHwgMCA6IDA7XHJcblxyXG4gICAgY29uc29sZS5sb2coJ1tBUEldIEFpcmNyYWZ0IHRhYmxlIGhhcycsIHRhYmxlQ291bnQsICdyZWNvcmRzJyk7XHJcblxyXG4gICAgaWYgKHRhYmxlQ291bnQgPT09IDApIHtcclxuICAgICAgY29uc29sZS5sb2coJ1tBUEldIEFpcmNyYWZ0IHRhYmxlIGlzIGVtcHR5LCByZXR1cm5pbmcgZW1wdHkgcmVzdWx0Jyk7XHJcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbihbXSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gMi4gRXhlY3V0ZSB0aGUgbWFudWZhY3R1cmVycyBxdWVyeVxyXG4gICAgY29uc3QgbWFudWZhY3R1cmVycyA9IGF3YWl0IGRiTWFuYWdlci5xdWVyeShcclxuICAgICAgJ21hbnVmYWN0dXJlcnMtZGlyZWN0JyxcclxuICAgICAgcXVlcnksXHJcbiAgICAgIFtdLFxyXG4gICAgICAwXHJcbiAgICApO1xyXG4gICAgY29uc29sZS5sb2coJ1tBUEldIFF1ZXJ5IHJldHVybmVkJywgbWFudWZhY3R1cmVycy5sZW5ndGgsICdyZXN1bHRzJyk7XHJcblxyXG4gICAgLy8gTG9nIGEgc2FtcGxlIG9mIHRoZSByZXN1bHRzXHJcbiAgICBpZiAobWFudWZhY3R1cmVycy5sZW5ndGggPiAwKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdbQVBJXSBTYW1wbGUgcmVzdWx0czonLCBtYW51ZmFjdHVyZXJzLnNsaWNlKDAsIDMpKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBGb3JtYXQgZm9yIHRoZSBVSVxyXG4gICAgY29uc3QgZm9ybWF0dGVkTWFudWZhY3R1cmVyczogU2VsZWN0T3B0aW9uW10gPSBtYW51ZmFjdHVyZXJzLm1hcChcclxuICAgICAgKG06IGFueSkgPT4gKHtcclxuICAgICAgICB2YWx1ZTogbS5uYW1lIGFzIHN0cmluZyxcclxuICAgICAgICBsYWJlbDogYCR7bS5uYW1lIGFzIHN0cmluZ30gKCR7bS5jb3VudCBhcyBudW1iZXJ9IGFpcmNyYWZ0KWAsXHJcbiAgICAgIH0pXHJcbiAgICApO1xyXG5cclxuICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbihmb3JtYXR0ZWRNYW51ZmFjdHVyZXJzKTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignW0FQSV0gRXJyb3IgZmV0Y2hpbmcgbWFudWZhY3R1cmVyczonLCBlcnJvcik7XHJcblxyXG4gICAgLy8gQ2hlY2sgZGF0YWJhc2UgdGFibGVzXHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zb2xlLmxvZygnW0FQSV0gQ2hlY2tpbmcgZGF0YWJhc2UgdGFibGVzLi4uJyk7XHJcbiAgICAgIGNvbnN0IHRhYmxlcyA9IGF3YWl0IGRiTWFuYWdlci5xdWVyeShcclxuICAgICAgICAnZGItdGFibGVzJyxcclxuICAgICAgICBcIlNFTEVDVCBuYW1lIEZST00gc3FsaXRlX21hc3RlciBXSEVSRSB0eXBlPSd0YWJsZSdcIixcclxuICAgICAgICBbXSxcclxuICAgICAgICAwXHJcbiAgICAgICk7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdbQVBJXSBEYXRhYmFzZSB0YWJsZXM6JywgdGFibGVzKTtcclxuXHJcbiAgICAgIC8vIElmIGFpcmNyYWZ0IHRhYmxlIGV4aXN0cywgY2hlY2sgc2NoZW1hXHJcbiAgICAgIGlmICh0YWJsZXMuc29tZSgodDogYW55KSA9PiB0Lm5hbWUgPT09ICdhaXJjcmFmdCcpKSB7XHJcbiAgICAgICAgY29uc3Qgc2NoZW1hUmVzdWx0ID0gYXdhaXQgZGJNYW5hZ2VyLnF1ZXJ5KFxyXG4gICAgICAgICAgJ2FpcmNyYWZ0LXNjaGVtYScsXHJcbiAgICAgICAgICAnUFJBR01BIHRhYmxlX2luZm8oYWlyY3JhZnQpJyxcclxuICAgICAgICAgIFtdLFxyXG4gICAgICAgICAgMFxyXG4gICAgICAgICk7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ1tBUEldIEFpcmNyYWZ0IHRhYmxlIHNjaGVtYTonLCBzY2hlbWFSZXN1bHQpO1xyXG4gICAgICB9XHJcbiAgICB9IGNhdGNoICh0YWJsZUVycm9yKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ1tBUEldIEVycm9yIGNoZWNraW5nIHRhYmxlczonLCB0YWJsZUVycm9yKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oe1xyXG4gICAgICBlcnJvcjogJ0ZhaWxlZCB0byBmZXRjaCBtYW51ZmFjdHVyZXJzJyxcclxuICAgICAgbWVzc2FnZTogZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiAnVW5rbm93biBlcnJvcicsXHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbImRiTWFuYWdlciIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJjb25zb2xlIiwibG9nIiwibWV0aG9kIiwiaW5pdGlhbGl6ZSIsInF1ZXJ5IiwiY291bnRRdWVyeSIsInRhYmxlQ291bnQiLCJsZW5ndGgiLCJjb3VudCIsInN0YXR1cyIsImpzb24iLCJtYW51ZmFjdHVyZXJzIiwic2xpY2UiLCJmb3JtYXR0ZWRNYW51ZmFjdHVyZXJzIiwibWFwIiwibSIsInZhbHVlIiwibmFtZSIsImxhYmVsIiwiZXJyb3IiLCJ0YWJsZXMiLCJzb21lIiwidCIsInNjaGVtYVJlc3VsdCIsInRhYmxlRXJyb3IiLCJtZXNzYWdlIiwiRXJyb3IiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/tracking/manufacturers.ts\n");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "sqlite":
/*!*************************!*\
  !*** external "sqlite" ***!
  \*************************/
/***/ ((module) => {

module.exports = import("sqlite");;

/***/ }),

/***/ "sqlite3":
/*!**************************!*\
  !*** external "sqlite3" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("sqlite3");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftracking%2Fmanufacturers&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Ctracking%5Cmanufacturers.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();