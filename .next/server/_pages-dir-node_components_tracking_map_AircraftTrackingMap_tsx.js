/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_pages-dir-node_components_tracking_map_AircraftTrackingMap_tsx";
exports.ids = ["_pages-dir-node_components_tracking_map_AircraftTrackingMap_tsx"];
exports.modules = {

/***/ "(pages-dir-node)/./components/tracking/Ribbon.tsx":
/*!****************************************!*\
  !*** ./components/tracking/Ribbon.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _hooks_useFilterLogic__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hooks/useFilterLogic */ \"(pages-dir-node)/./components/tracking/hooks/useFilterLogic.ts\");\n/* harmony import */ var _filters_FilterDropdown__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./filters/FilterDropdown */ \"(pages-dir-node)/./components/tracking/filters/FilterDropdown.tsx\");\n/* harmony import */ var _filters_ManufacturerFilter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./filters/ManufacturerFilter */ \"(pages-dir-node)/./components/tracking/filters/ManufacturerFilter.tsx\");\n/* harmony import */ var _filters_ModelFilter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./filters/ModelFilter */ \"(pages-dir-node)/./components/tracking/filters/ModelFilter.tsx\");\n/* harmony import */ var _filters_GeofenceFilter__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./filters/GeofenceFilter */ \"(pages-dir-node)/./components/tracking/filters/GeofenceFilter.tsx\");\n/* harmony import */ var _filters_OwnerFilter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./filters/OwnerFilter */ \"(pages-dir-node)/./components/tracking/filters/OwnerFilter.tsx\");\n/* harmony import */ var _filters_RegionFilter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./filters/RegionFilter */ \"(pages-dir-node)/./components/tracking/filters/RegionFilter.tsx\");\n/* harmony import */ var _map_components_SearchRibbonSpinner__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./map/components/SearchRibbonSpinner */ \"(pages-dir-node)/./components/tracking/map/components/SearchRibbonSpinner.tsx\");\n/* harmony import */ var _map_components_ribbon_clear__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./map/components/ribbon-clear */ \"(pages-dir-node)/./components/tracking/map/components/ribbon-clear.tsx\");\n/* harmony import */ var _context_EnhancedMapContext__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./context/EnhancedMapContext */ \"(pages-dir-node)/./components/tracking/context/EnhancedMapContext.tsx\");\n/* harmony import */ var _map_components_ManualRefreshButton__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./map/components/ManualRefreshButton */ \"(pages-dir-node)/./components/tracking/map/components/ManualRefreshButton.tsx\");\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst RibbonAircraftSelector = ({ manufacturers })=>{\n    // Get the aircraft state from context\n    const { totalActive, activeModels, displayedAircraft } = (0,_context_EnhancedMapContext__WEBPACK_IMPORTED_MODULE_11__.useEnhancedMapContext)();\n    // Use our custom hook for filter logic\n    const filterLogic = (0,_hooks_useFilterLogic__WEBPACK_IMPORTED_MODULE_2__.useFilterLogic)();\n    const { filterMode, activeDropdown, selectedManufacturer, selectedModel, geofenceLocation, geofenceRadius, isGeofenceActive, geofenceCoordinates, activeRegion, ownerFilters, allOwnerTypes, manufacturerSearchTerm, combinedLoading, isGettingLocation, dropdownRefs, isRefreshing, localLoading, // Methods\n    toggleDropdown, toggleFilterMode, selectManufacturerAndClose, handleModelSelect, getUserLocation, processGeofenceSearch, handleOwnerFilterChange, handleRegionSelect, setManufacturerSearchTerm, setGeofenceLocation, setGeofenceRadius, setGeofenceCoordinates, setGeofenceCenter, updateGeofenceAircraft, toggleGeofenceState, clearAllFilters } = filterLogic;\n    // Determine loading state and loading message\n    const isLoading = combinedLoading || isRefreshing || localLoading;\n    const getLoadingMessage = ()=>{\n        if (filterMode === 'manufacturer') {\n            return `Finding ${selectedManufacturer || ''} aircraft...`;\n        } else if (filterMode === 'geofence') {\n            return 'Searching for aircraft in this location...';\n        } else if (filterMode === 'both') {\n            return `Finding ${selectedManufacturer || ''} aircraft near this location...`;\n        } else if (filterMode === 'owner') {\n            return 'Filtering aircraft by owner type...';\n        } else if (filterMode === 'region') {\n            return 'Searching for aircraft in this region...';\n        }\n        return 'Searching for aircraft...';\n    };\n    const renderActionButtons = ()=>{\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex items-center gap-2 px-3\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_map_components_ManualRefreshButton__WEBPACK_IMPORTED_MODULE_12__[\"default\"], {\n                    onRefresh: async ()=>filterLogic.refreshWithFilters(),\n                    disabled: combinedLoading || localLoading || isRefreshing\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\Ribbon.tsx\",\n                    lineNumber: 82,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_map_components_ribbon_clear__WEBPACK_IMPORTED_MODULE_10__.RibbonClearFiltersButton, {\n                    onClear: clearAllFilters\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\Ribbon.tsx\",\n                    lineNumber: 86,\n                    columnNumber: 9\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\Ribbon.tsx\",\n            lineNumber: 81,\n            columnNumber: 7\n        }, undefined);\n    };\n    // Render Aircraft Stats\n    const renderAircraftStats = ()=>{\n        let displayCount = 0;\n        let displayStatusText = '';\n        if (filterMode === 'geofence' || filterMode === 'both') {\n            displayCount = filterLogic.isGeofenceActive ? displayedAircraft?.length || 0 : 0;\n            displayStatusText = 'Aircraft in location';\n        } else if (filterMode === 'owner' || filterMode === 'region') {\n            displayCount = displayedAircraft?.length || 0;\n            displayStatusText = filterMode === 'owner' ? 'Aircraft by owner' : 'Aircraft in region';\n        } else {\n            displayCount = totalActive;\n            displayStatusText = 'Active aircraft';\n        }\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex items-center gap-1 px-4 py-2 bg-gray-100 text-gray-700 text-sm border-l\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    className: \"h-4 w-4 text-indigo-600\",\n                    fill: \"none\",\n                    viewBox: \"0 0 24 24\",\n                    stroke: \"currentColor\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        strokeLinecap: \"round\",\n                        strokeLinejoin: \"round\",\n                        strokeWidth: 2,\n                        d: \"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\Ribbon.tsx\",\n                        lineNumber: 119,\n                        columnNumber: 11\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\Ribbon.tsx\",\n                    lineNumber: 112,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"font-medium text-indigo-600\",\n                            children: displayCount\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\Ribbon.tsx\",\n                            lineNumber: 127,\n                            columnNumber: 11\n                        }, undefined),\n                        ' ',\n                        displayStatusText\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\Ribbon.tsx\",\n                    lineNumber: 126,\n                    columnNumber: 9\n                }, undefined),\n                combinedLoading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                    className: \"animate-spin ml-2 h-4 w-4 text-indigo-600\",\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    fill: \"none\",\n                    viewBox: \"0 0 24 24\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                            className: \"opacity-25\",\n                            cx: \"12\",\n                            cy: \"12\",\n                            r: \"10\",\n                            stroke: \"currentColor\",\n                            strokeWidth: \"4\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\Ribbon.tsx\",\n                            lineNumber: 138,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            className: \"opacity-75\",\n                            fill: \"currentColor\",\n                            d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\Ribbon.tsx\",\n                            lineNumber: 146,\n                            columnNumber: 13\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\Ribbon.tsx\",\n                    lineNumber: 132,\n                    columnNumber: 11\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\Ribbon.tsx\",\n            lineNumber: 111,\n            columnNumber: 7\n        }, undefined);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"w-full sticky top-0 z-[100] bg-white overflow-visible\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex items-center h-12\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"bg-indigo-600 text-white h-full flex items-center px-4 font-semibold\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                    xmlns: \"http://www.w3.org/2000/svg\",\n                                    className: \"h-5 w-5 mr-2\",\n                                    viewBox: \"0 0 20 20\",\n                                    fill: \"currentColor\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                        d: \"M10.894 2.553a1 1 0 00-1.788 0l-7 14a1 1 0 001.169 1.409l5-1.429A1 1 0 009 15.571V11a1 1 0 112 0v4.571a1 1 0 00.725.962l5 1.428a1 1 0 001.17-1.408l-7-14z\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\Ribbon.tsx\",\n                                        lineNumber: 170,\n                                        columnNumber: 15\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\Ribbon.tsx\",\n                                    lineNumber: 164,\n                                    columnNumber: 13\n                                }, undefined),\n                                \"Aircraft Finder\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\Ribbon.tsx\",\n                            lineNumber: 163,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_filters_FilterDropdown__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                            toggleFilterMode: toggleFilterMode,\n                            selectedManufacturer: selectedManufacturer,\n                            isGeofenceActive: isGeofenceActive,\n                            filterMode: filterMode,\n                            activeDropdown: activeDropdown,\n                            toggleDropdown: toggleDropdown\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\Ribbon.tsx\",\n                            lineNumber: 176,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"h-6 w-px bg-gray-300 mx-1\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\Ribbon.tsx\",\n                            lineNumber: 186,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_filters_RegionFilter__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                            activeRegion: activeRegion,\n                            handleRegionSelect: handleRegionSelect,\n                            activeDropdown: activeDropdown,\n                            toggleDropdown: toggleDropdown,\n                            dropdownRef: dropdownRefs.region,\n                            selectedRegion: filterLogic.selectedRegion\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\Ribbon.tsx\",\n                            lineNumber: 189,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_filters_ManufacturerFilter__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                            manufacturers: manufacturers,\n                            selectedManufacturer: selectedManufacturer,\n                            manufacturerSearchTerm: manufacturerSearchTerm,\n                            setManufacturerSearchTerm: setManufacturerSearchTerm,\n                            selectManufacturerAndClose: selectManufacturerAndClose,\n                            combinedLoading: combinedLoading,\n                            activeDropdown: activeDropdown,\n                            dropdownRef: dropdownRefs.manufacturer,\n                            toggleDropdown: toggleDropdown\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\Ribbon.tsx\",\n                            lineNumber: 199,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_filters_ModelFilter__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                            selectedManufacturer: selectedManufacturer,\n                            selectedModel: selectedModel,\n                            activeDropdown: activeDropdown,\n                            handleModelSelect: handleModelSelect,\n                            toggleDropdown: toggleDropdown,\n                            dropdownRef: dropdownRefs.model,\n                            totalActive: totalActive,\n                            activeModels: activeModels\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\Ribbon.tsx\",\n                            lineNumber: 212,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"h-6 w-px bg-gray-300 mx-1\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\Ribbon.tsx\",\n                            lineNumber: 224,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_filters_GeofenceFilter__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                            geofenceLocation: geofenceLocation,\n                            geofenceRadius: geofenceRadius,\n                            isGettingLocation: isGettingLocation,\n                            isGeofenceActive: isGeofenceActive,\n                            geofenceCoordinates: geofenceCoordinates,\n                            getUserLocation: getUserLocation,\n                            processGeofenceSearch: processGeofenceSearch,\n                            toggleGeofenceState: toggleGeofenceState,\n                            setGeofenceLocation: setGeofenceLocation,\n                            setGeofenceRadius: setGeofenceRadius,\n                            setGeofenceCoordinates: setGeofenceCoordinates,\n                            setGeofenceCenter: setGeofenceCenter,\n                            updateGeofenceAircraft: updateGeofenceAircraft,\n                            combinedLoading: combinedLoading,\n                            activeDropdown: activeDropdown,\n                            setActiveDropdown: filterLogic.setActiveDropdown,\n                            toggleDropdown: toggleDropdown,\n                            dropdownRef: dropdownRefs.location,\n                            isGeofencePlacementMode: filterLogic.isGeofencePlacementMode\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\Ribbon.tsx\",\n                            lineNumber: 227,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_filters_OwnerFilter__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                            activeFilters: ownerFilters,\n                            onFilterChange: handleOwnerFilterChange,\n                            allOwnerTypes: allOwnerTypes,\n                            activeDropdown: activeDropdown,\n                            toggleFilterMode: toggleFilterMode,\n                            dropdownRef: dropdownRefs.owner,\n                            toggleDropdown: toggleDropdown\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\Ribbon.tsx\",\n                            lineNumber: 250,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex-grow\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\Ribbon.tsx\",\n                            lineNumber: 261,\n                            columnNumber: 11\n                        }, undefined),\n                        renderAircraftStats(),\n                        renderActionButtons()\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\Ribbon.tsx\",\n                    lineNumber: 161,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\Ribbon.tsx\",\n                lineNumber: 159,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_map_components_SearchRibbonSpinner__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                isLoading: isLoading,\n                loadingText: getLoadingMessage()\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\Ribbon.tsx\",\n                lineNumber: 272,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (RibbonAircraftSelector);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/tracking/Ribbon.tsx\n");

/***/ }),

/***/ "(pages-dir-node)/./components/tracking/filters/FilterDropdown.tsx":
/*!********************************************************!*\
  !*** ./components/tracking/filters/FilterDropdown.tsx ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_Filter_Globe_Layers_MapPin_Users_lucide_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! __barrel_optimize__?names=Filter,Globe,Layers,MapPin,Users!=!lucide-react */ \"(pages-dir-node)/__barrel_optimize__?names=Filter,Globe,Layers,MapPin,Users!=!./node_modules/lucide-react/dist/esm/lucide-react.js\");\n\n\n\nconst FilterDropdown = ({ toggleFilterMode, selectedManufacturer, isGeofenceActive, filterMode, activeDropdown, toggleDropdown })=>{\n    // Helper function to get icon based on filter mode\n    const getFilterIcon = (mode)=>{\n        switch(mode){\n            case 'manufacturer':\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Filter_Globe_Layers_MapPin_Users_lucide_react__WEBPACK_IMPORTED_MODULE_2__.Filter, {\n                    size: 16\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FilterDropdown.tsx\",\n                    lineNumber: 26,\n                    columnNumber: 16\n                }, undefined);\n            case 'geofence':\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Filter_Globe_Layers_MapPin_Users_lucide_react__WEBPACK_IMPORTED_MODULE_2__.MapPin, {\n                    size: 16\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FilterDropdown.tsx\",\n                    lineNumber: 28,\n                    columnNumber: 16\n                }, undefined);\n            case 'both':\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Filter_Globe_Layers_MapPin_Users_lucide_react__WEBPACK_IMPORTED_MODULE_2__.Layers, {\n                    size: 16\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FilterDropdown.tsx\",\n                    lineNumber: 30,\n                    columnNumber: 16\n                }, undefined);\n            case 'owner':\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Filter_Globe_Layers_MapPin_Users_lucide_react__WEBPACK_IMPORTED_MODULE_2__.Users, {\n                    size: 16\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FilterDropdown.tsx\",\n                    lineNumber: 32,\n                    columnNumber: 16\n                }, undefined);\n            case 'region':\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Filter_Globe_Layers_MapPin_Users_lucide_react__WEBPACK_IMPORTED_MODULE_2__.Globe, {\n                    size: 16\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FilterDropdown.tsx\",\n                    lineNumber: 34,\n                    columnNumber: 16\n                }, undefined);\n            default:\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Filter_Globe_Layers_MapPin_Users_lucide_react__WEBPACK_IMPORTED_MODULE_2__.Filter, {\n                    size: 16\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FilterDropdown.tsx\",\n                    lineNumber: 36,\n                    columnNumber: 16\n                }, undefined);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"relative\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                className: `px-4 py-2 flex items-center justify-between gap-2 rounded-lg border ${activeDropdown === 'filter' ? 'bg-indigo-100 text-indigo-700 border-indigo-300 shadow-sm' : 'bg-gray-50/30 hover:bg-gray-50 border-gray-200 text-gray-700 hover:border-gray-300'} transition-all duration-200`,\n                onClick: (event)=>toggleDropdown('filter', event),\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"flex items-center gap-2 font-medium\",\n                        children: [\n                            getFilterIcon(filterMode),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: filterMode ? 'text-indigo-700' : '',\n                                children: filterMode ? filterMode.charAt(0).toUpperCase() + filterMode.slice(1) : 'Filter Selection'\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FilterDropdown.tsx\",\n                                lineNumber: 52,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FilterDropdown.tsx\",\n                        lineNumber: 50,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: `flex items-center justify-center h-5 w-5 rounded-full ${activeDropdown === 'filter' ? 'bg-indigo-500' : 'bg-gray-200'} transition-colors duration-200`,\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                            xmlns: \"http://www.w3.org/2000/svg\",\n                            className: `h-3 w-3 transition-transform text-white ${activeDropdown === 'filter' ? 'transform rotate-180' : ''}`,\n                            fill: \"none\",\n                            viewBox: \"0 0 24 24\",\n                            stroke: \"currentColor\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                strokeLinecap: \"round\",\n                                strokeLinejoin: \"round\",\n                                strokeWidth: 2,\n                                d: \"M19 9l-7 7-7-7\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FilterDropdown.tsx\",\n                                lineNumber: 68,\n                                columnNumber: 13\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FilterDropdown.tsx\",\n                            lineNumber: 61,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FilterDropdown.tsx\",\n                        lineNumber: 58,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FilterDropdown.tsx\",\n                lineNumber: 42,\n                columnNumber: 7\n            }, undefined),\n            activeDropdown === 'filter' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute left-0 top-full mt-1 w-48 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-50\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"py-1\",\n                    children: [\n                        'manufacturer',\n                        'geofence',\n                        'both',\n                        'owner',\n                        'region'\n                    ].map((mode)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            className: `w-full text-left px-4 py-2 text-sm ${filterMode === mode ? 'bg-indigo-50 text-indigo-700' : 'text-gray-700 hover:bg-gray-50'} flex items-center gap-2`,\n                            onClick: ()=>toggleFilterMode(mode),\n                            disabled: mode === 'both' && (!selectedManufacturer || !isGeofenceActive),\n                            children: [\n                                getFilterIcon(mode),\n                                mode.charAt(0).toUpperCase() + mode.slice(1)\n                            ]\n                        }, mode, true, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FilterDropdown.tsx\",\n                            lineNumber: 83,\n                            columnNumber: 17\n                        }, undefined))\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FilterDropdown.tsx\",\n                    lineNumber: 80,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FilterDropdown.tsx\",\n                lineNumber: 79,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FilterDropdown.tsx\",\n        lineNumber: 41,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FilterDropdown);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/tracking/filters/FilterDropdown.tsx\n");

/***/ }),

/***/ "(pages-dir-node)/./components/tracking/filters/FloatingGeofencePanel.tsx":
/*!***************************************************************!*\
  !*** ./components/tracking/filters/FloatingGeofencePanel.tsx ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_Search_X_lucide_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! __barrel_optimize__?names=Search,X!=!lucide-react */ \"(pages-dir-node)/__barrel_optimize__?names=Search,X!=!./node_modules/lucide-react/dist/esm/lucide-react.js\");\n/* harmony import */ var react_draggable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-draggable */ \"react-draggable\");\n/* harmony import */ var react_draggable__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_draggable__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _lib_services_MapboxService__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../lib/services/MapboxService */ \"(pages-dir-node)/./lib/services/MapboxService.ts\");\n// FloatingGeofencePanel.tsx - Simplified to be purely presentational\n\n\n\n\n\nconst FloatingGeofencePanel = ({ isOpen, onClose, geofenceRadius, setGeofenceRadius, processGeofenceSearch, isSearching, coordinates, setCoordinates, locationName, isLoadingLocation, panelPosition, setPanelPosition, setShowPanel, onSearch, onReset })=>{\n    // Only maintain UI-specific state in the component\n    const [position, setPosition] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        x: 0,\n        y: 0\n    });\n    const nodeRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Simple handler for search button\n    const handleSearch = (event)=>{\n        event.preventDefault();\n        event.stopPropagation();\n        if (!coordinates || isSearching) return;\n        // Use onSearch instead of processGeofenceSearch\n        // This will call handlePanelSearch in useGeofencePanel\n        if (coordinates) {\n            onSearch(coordinates.lat, coordinates.lng);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((react_draggable__WEBPACK_IMPORTED_MODULE_2___default()), {\n        nodeRef: nodeRef,\n        handle: \".handle\",\n        position: panelPosition || undefined,\n        onStop: (e, data)=>setPanelPosition({\n                x: data.x,\n                y: data.y\n            }),\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            ref: nodeRef,\n            className: \"absolute z-50 bg-white rounded-lg shadow-lg border border-gray-200 w-80 geofence-floating-panel\",\n            style: {\n                top: 0,\n                left: 0\n            },\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"handle px-4 py-3 bg-indigo-600 text-white rounded-t-lg flex items-center justify-between cursor-move\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: onClose,\n                            className: \"text-white hover:bg-indigo-700 rounded-full p-1\",\n                            title: \"Close\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Search_X_lucide_react__WEBPACK_IMPORTED_MODULE_4__.X, {\n                                size: 16\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                lineNumber: 86,\n                                columnNumber: 13\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                            lineNumber: 81,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center justify-center flex-grow mx-auto\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"font-medium text-center\",\n                                children: \"Search Pin Placement\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                lineNumber: 89,\n                                columnNumber: 13\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                            lineNumber: 88,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"w-4\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                            lineNumber: 93,\n                            columnNumber: 11\n                        }, undefined),\n                        \" \"\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                    lineNumber: 80,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"p-4\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"mb-4\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"text-center text-sm font-medium text-gray-700 mb-1\",\n                                    children: \"Selected Location:\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                    lineNumber: 100,\n                                    columnNumber: 13\n                                }, undefined),\n                                coordinates && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"p-2 bg-gray-50 rounded border border-gray-200 text-center\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"text-gray-700 font-bold\",\n                                            children: isLoadingLocation ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                children: \"Loading location name...\"\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                                lineNumber: 107,\n                                                columnNumber: 21\n                                            }, undefined) : locationName ? _lib_services_MapboxService__WEBPACK_IMPORTED_MODULE_3__.MapboxService.formatCityCountry(locationName, true) : `${coordinates.lat.toFixed(6)}, ${coordinates.lng.toFixed(6)}`\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                            lineNumber: 105,\n                                            columnNumber: 17\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"text-xs text-gray-500 mt-1\",\n                                            children: [\n                                                coordinates.lat.toFixed(6),\n                                                \", \",\n                                                coordinates.lng.toFixed(6)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                            lineNumber: 114,\n                                            columnNumber: 17\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                    lineNumber: 104,\n                                    columnNumber: 15\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                            lineNumber: 99,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"mb-6\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                    className: \"text-sm font-medium text-gray-700 block mb-1\",\n                                    children: [\n                                        \"Radius: \",\n                                        geofenceRadius,\n                                        \" km\"\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                    lineNumber: 123,\n                                    columnNumber: 13\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    type: \"range\",\n                                    min: \"5\",\n                                    max: \"100\",\n                                    step: \"5\",\n                                    value: geofenceRadius,\n                                    onChange: (e)=>setGeofenceRadius(parseInt(e.target.value)),\n                                    className: \"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                    lineNumber: 126,\n                                    columnNumber: 13\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex justify-between text-xs text-gray-500 mt-1\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            children: \"5 km\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                            lineNumber: 136,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            children: \"50 km\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                            lineNumber: 137,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            children: \"100 km\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                            lineNumber: 138,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                    lineNumber: 135,\n                                    columnNumber: 13\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                            lineNumber: 122,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"mb-3 text-sm text-gray-600 text-center\",\n                            children: \"Click anywhere on the map to place a search pin\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                            lineNumber: 143,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex gap-2 w-full\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    type: \"button\",\n                                    onClick: (e)=>{\n                                        e.preventDefault();\n                                        e.stopPropagation();\n                                        if (!coordinates || isSearching) return;\n                                        // Use onSearch for the search functionality\n                                        if (coordinates) {\n                                            onSearch(coordinates.lat, coordinates.lng);\n                                        }\n                                    },\n                                    disabled: !coordinates || isSearching,\n                                    className: `flex-1 py-2 px-4 flex items-center justify-center gap-2 rounded-md ${!coordinates || isSearching ? 'bg-gray-300 text-gray-500 cursor-not-allowed' : 'bg-indigo-600 text-white hover:bg-indigo-700'} transition-colors`,\n                                    children: isSearching ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                className: \"animate-spin h-5 w-5\",\n                                                viewBox: \"0 0 24 24\",\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                                                        className: \"opacity-25\",\n                                                        cx: \"12\",\n                                                        cy: \"12\",\n                                                        r: \"10\",\n                                                        stroke: \"currentColor\",\n                                                        strokeWidth: \"4\"\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                                        lineNumber: 171,\n                                                        columnNumber: 21\n                                                    }, undefined),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                        className: \"opacity-75\",\n                                                        fill: \"currentColor\",\n                                                        d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                                        lineNumber: 179,\n                                                        columnNumber: 21\n                                                    }, undefined)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                                lineNumber: 170,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            \"Searching...\"\n                                        ]\n                                    }, void 0, true) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Search_X_lucide_react__WEBPACK_IMPORTED_MODULE_4__.Search, {\n                                                size: 16\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                                lineNumber: 189,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            \"Search Aircraft\"\n                                        ]\n                                    }, void 0, true)\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                    lineNumber: 150,\n                                    columnNumber: 13\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    type: \"button\",\n                                    onClick: onReset,\n                                    className: \"flex-1 py-2 px-4 flex items-center justify-center gap-2 rounded-md bg-red-500 text-white hover:bg-red-600 transition-colors\",\n                                    children: \"Reset\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                    lineNumber: 196,\n                                    columnNumber: 13\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                            lineNumber: 148,\n                            columnNumber: 11\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                    lineNumber: 97,\n                    columnNumber: 9\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n            lineNumber: 74,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n        lineNumber: 68,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FloatingGeofencePanel);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/tracking/filters/FloatingGeofencePanel.tsx\n");

/***/ }),

/***/ "(pages-dir-node)/./components/tracking/filters/GeofenceFilter.tsx":
/*!********************************************************!*\
  !*** ./components/tracking/filters/GeofenceFilter.tsx ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_MapPin_lucide_react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! __barrel_optimize__?names=MapPin!=!lucide-react */ \"(pages-dir-node)/__barrel_optimize__?names=MapPin!=!./node_modules/lucide-react/dist/esm/lucide-react.js\");\n/* harmony import */ var _context_EnhancedMapContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../context/EnhancedMapContext */ \"(pages-dir-node)/./components/tracking/context/EnhancedMapContext.tsx\");\n/* harmony import */ var _FloatingGeofencePanel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./FloatingGeofencePanel */ \"(pages-dir-node)/./components/tracking/filters/FloatingGeofencePanel.tsx\");\n/* harmony import */ var _hooks_useFilterLogic__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../hooks/useFilterLogic */ \"(pages-dir-node)/./components/tracking/hooks/useFilterLogic.ts\");\n/* harmony import */ var _hooks_useGeofencePanel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../hooks/useGeofencePanel */ \"(pages-dir-node)/./components/tracking/hooks/useGeofencePanel.ts\");\n/* harmony import */ var _hooks_useGeolocationServices__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../hooks/useGeolocationServices */ \"(pages-dir-node)/./components/tracking/hooks/useGeolocationServices.ts\");\n/* harmony import */ var _lib_services_MapboxService__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../lib/services/MapboxService */ \"(pages-dir-node)/./lib/services/MapboxService.ts\");\n/* harmony import */ var _utils_getFlagImage__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../utils/getFlagImage */ \"(pages-dir-node)/./utils/getFlagImage.ts\");\n// components/GeofenceFilter.tsx\n\n\n\n\n\n\n\n\n\n\n\nconst GeofenceFilter = ({ activeDropdown, setActiveDropdown, toggleDropdown, dropdownRef })=>{\n    // Get map context\n    const { mapInstance } = (0,_context_EnhancedMapContext__WEBPACK_IMPORTED_MODULE_2__.useEnhancedMapContext)();\n    // Get filter logic from the main hook\n    const { geofenceLocation, geofenceRadius, isGettingLocation, isGeofenceActive, geofenceCoordinates, combinedLoading, processGeofenceSearch, toggleGeofenceState, setGeofenceLocation, setGeofenceRadius, setGeofenceCoordinates, setGeofenceCenter, updateGeofenceAircraft, setIsGettingLocation } = (0,_hooks_useFilterLogic__WEBPACK_IMPORTED_MODULE_4__.useFilterLogic)();\n    // Use the geolocation services hook for browser geolocation\n    const geolocationServices = (0,_hooks_useGeolocationServices__WEBPACK_IMPORTED_MODULE_6__.useGeolocationServices)();\n    // Use the panel hook for managing the floating panel\n    const panelLogic = (0,_hooks_useGeofencePanel__WEBPACK_IMPORTED_MODULE_5__.useGeofencePanel)({\n        geofenceRadius,\n        setGeofenceLocation,\n        setGeofenceCoordinates,\n        processGeofenceSearch,\n        setGeofenceCenter,\n        updateGeofenceAircraft,\n        isGeofenceActive,\n        toggleGeofenceState,\n        setActiveDropdown,\n        mapInstance\n    });\n    const { showPanel, panelPosition, tempCoordinates, isSearching, locationName, isLoadingLocation, openPanel, closePanel, resetPanel, setShowPanel, setPanelPosition, handlePanelSearch } = panelLogic;\n    // Implement getUserLocation using geolocationServices\n    const getUserLocation = async ()=>{\n        if (combinedLoading) return;\n        setGeofenceLocation('Getting your location...');\n        setIsGettingLocation(true);\n        try {\n            const position = await geolocationServices.getCurrentPosition();\n            const lat = position.coords.latitude;\n            const lng = position.coords.longitude;\n            // Update coordinates\n            setGeofenceCoordinates({\n                lat,\n                lng\n            });\n            setGeofenceCenter({\n                lat,\n                lng\n            });\n            // Update location text\n            setGeofenceLocation(`${lat.toFixed(6)}, ${lng.toFixed(6)}`);\n            // Automatically start a search with these coordinates\n            handlePanelSearch(lat, lng);\n        } catch (error) {\n            console.error('Error getting location:', error);\n            alert('Could not get your location. Please make sure location services are enabled.');\n        } finally{\n            setIsGettingLocation(false);\n        }\n    };\n    // Helper function to render flag with location name\n    const renderFlagAndName = (countryName)=>{\n        const flagUrl = (0,_utils_getFlagImage__WEBPACK_IMPORTED_MODULE_8__.getFlagImageUrl)(countryName);\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n            className: \"flex items-center gap-2\",\n            children: [\n                flagUrl && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                    src: flagUrl,\n                    alt: `${countryName} flag`,\n                    className: \"w-5 h-3 rounded-sm\"\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                    lineNumber: 118,\n                    columnNumber: 11\n                }, undefined),\n                countryName\n            ]\n        }, void 0, true, {\n            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n            lineNumber: 116,\n            columnNumber: 7\n        }, undefined);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"GeofenceFilter.useEffect\": ()=>{\n            if (showPanel) {\n                // Keep dropdown closed while panel is open\n                setActiveDropdown(null);\n            }\n        }\n    }[\"GeofenceFilter.useEffect\"], [\n        showPanel,\n        setActiveDropdown\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"GeofenceFilter.useEffect\": ()=>{\n            if (isSearching) {\n                // Ensure the panel stays open during search\n                panelLogic.setShowPanel(true);\n            }\n        }\n    }[\"GeofenceFilter.useEffect\"], [\n        isSearching\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: dropdownRef,\n        className: \"relative\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                className: `px-4 py-2 flex items-center justify-between gap-2 rounded-lg border ${showPanel ? 'bg-gray-100 text-gray-400 border-gray-300 cursor-not-allowed' // Always grayed out when panel is open\n                 : activeDropdown === 'location' ? 'bg-indigo-100 text-indigo-700 border-indigo-300 shadow-sm' : isGeofenceActive ? 'bg-indigo-50/70 text-indigo-600 border-indigo-200' : 'bg-gray-50/30 hover:bg-gray-50 border-gray-200 text-gray-700 hover:border-gray-300'} transition-all duration-200`,\n                // Add a onClick handler that does nothing when panel is open\n                onClick: (event)=>showPanel ? event.preventDefault() : toggleDropdown('location', event),\n                disabled: combinedLoading || showPanel,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"flex items-center gap-2 font-medium\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_MapPin_lucide_react__WEBPACK_IMPORTED_MODULE_9__.MapPin, {\n                                size: 16,\n                                className: showPanel ? 'text-gray-400' // Gray out icon when panel is open\n                                 : isGeofenceActive ? 'text-indigo-500' : 'text-gray-500'\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                lineNumber: 163,\n                                columnNumber: 11\n                            }, undefined),\n                            isGeofenceActive && geofenceLocation ? renderFlagAndName(_lib_services_MapboxService__WEBPACK_IMPORTED_MODULE_7__.MapboxService.formatCityCountry(geofenceLocation, true)) : showPanel ? 'Placing pin...' // Update text to indicate panel state\n                             : isLoadingLocation ? 'Loading location...' : locationName ? renderFlagAndName(_lib_services_MapboxService__WEBPACK_IMPORTED_MODULE_7__.MapboxService.formatCityCountry(locationName, true)) : 'Location'\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                        lineNumber: 162,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        className: `h-4 w-4 transition-transform ${activeDropdown === 'location' ? 'transform rotate-180' : ''}`,\n                        fill: \"none\",\n                        viewBox: \"0 0 24 24\",\n                        stroke: \"currentColor\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            strokeLinecap: \"round\",\n                            strokeLinejoin: \"round\",\n                            strokeWidth: 2,\n                            d: \"M19 9l-7 7-7-7\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                            lineNumber: 195,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                        lineNumber: 188,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                lineNumber: 146,\n                columnNumber: 7\n            }, undefined),\n            activeDropdown === 'location' && !showPanel && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute left-0 top-full mt-1 w-72 bg-white shadow-lg rounded-md border border-gray-200 z-50\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"p-3 border-b\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex gap-2 mb-3\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                        type: \"text\",\n                                        className: \"flex-1 px-3 py-2 border border-gray-300 rounded-md\",\n                                        placeholder: \"ZIP code or coordinates...\",\n                                        value: geofenceLocation,\n                                        onChange: (e)=>setGeofenceLocation(e.target.value),\n                                        onKeyDown: (e)=>{\n                                            if (e.key === 'Enter' && !combinedLoading && geofenceLocation) {\n                                                processGeofenceSearch();\n                                            }\n                                        },\n                                        autoFocus: true\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                        lineNumber: 210,\n                                        columnNumber: 15\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        className: `px-3 py-2 rounded-md text-white ${combinedLoading || !geofenceLocation && !isGettingLocation ? 'bg-gray-400 cursor-not-allowed' : 'bg-indigo-600 hover:bg-indigo-700'}`,\n                                        onClick: (e)=>{\n                                            e.preventDefault();\n                                            processGeofenceSearch();\n                                        },\n                                        disabled: combinedLoading || !geofenceLocation && !isGettingLocation,\n                                        title: \"Search\",\n                                        children: combinedLoading ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                            className: \"animate-spin h-5 w-5\",\n                                            viewBox: \"0 0 24 24\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                                                    className: \"opacity-25\",\n                                                    cx: \"12\",\n                                                    cy: \"12\",\n                                                    r: \"10\",\n                                                    stroke: \"currentColor\",\n                                                    strokeWidth: \"4\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                                    lineNumber: 244,\n                                                    columnNumber: 21\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                    className: \"opacity-75\",\n                                                    fill: \"currentColor\",\n                                                    d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                                    lineNumber: 252,\n                                                    columnNumber: 21\n                                                }, undefined)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                            lineNumber: 243,\n                                            columnNumber: 19\n                                        }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                            xmlns: \"http://www.w3.org/2000/svg\",\n                                            className: \"h-5 w-5\",\n                                            fill: \"none\",\n                                            viewBox: \"0 0 24 24\",\n                                            stroke: \"currentColor\",\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                strokeLinecap: \"round\",\n                                                strokeLinejoin: \"round\",\n                                                strokeWidth: 2,\n                                                d: \"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                                lineNumber: 266,\n                                                columnNumber: 21\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                            lineNumber: 259,\n                                            columnNumber: 19\n                                        }, undefined)\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                        lineNumber: 227,\n                                        columnNumber: 15\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                lineNumber: 209,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: openPanel,\n                                className: \"w-full flex items-center justify-center py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_MapPin_lucide_react__WEBPACK_IMPORTED_MODULE_9__.MapPin, {\n                                        size: 16,\n                                        className: \"mr-2\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                        lineNumber: 282,\n                                        columnNumber: 15\n                                    }, undefined),\n                                    \"Click on Map to Set Location\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                lineNumber: 278,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"my-2\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                lineNumber: 287,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                className: `w-full flex items-center justify-center py-2 border border-indigo-300 rounded-md text-indigo-700 bg-indigo-50 hover:bg-indigo-100 transition-colors ${isGettingLocation ? 'opacity-75 cursor-not-allowed' : ''}`,\n                                onClick: getUserLocation,\n                                disabled: isGettingLocation || combinedLoading,\n                                children: isGettingLocation ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                            className: \"animate-spin h-4 w-4 mr-2\",\n                                            viewBox: \"0 0 24 24\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                                                    className: \"opacity-25\",\n                                                    cx: \"12\",\n                                                    cy: \"12\",\n                                                    r: \"10\",\n                                                    stroke: \"currentColor\",\n                                                    strokeWidth: \"4\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                                    lineNumber: 303,\n                                                    columnNumber: 21\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                    className: \"opacity-75\",\n                                                    fill: \"currentColor\",\n                                                    d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                                    lineNumber: 311,\n                                                    columnNumber: 21\n                                                }, undefined)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                            lineNumber: 299,\n                                            columnNumber: 19\n                                        }, undefined),\n                                        \"Getting location...\"\n                                    ]\n                                }, void 0, true) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_MapPin_lucide_react__WEBPACK_IMPORTED_MODULE_9__.MapPin, {\n                                            size: 16,\n                                            className: \"mr-2\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                            lineNumber: 321,\n                                            columnNumber: 19\n                                        }, undefined),\n                                        \"Use My Current Location\"\n                                    ]\n                                }, void 0, true)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                lineNumber: 290,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                        lineNumber: 208,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"p-3 border-b\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                className: \"text-sm font-medium text-gray-700 block mb-1\",\n                                children: [\n                                    \"Radius: \",\n                                    geofenceRadius,\n                                    \" km\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                lineNumber: 330,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                type: \"range\",\n                                min: \"5\",\n                                max: \"100\",\n                                step: \"5\",\n                                value: geofenceRadius,\n                                onChange: (e)=>setGeofenceRadius(parseInt(e.target.value)),\n                                className: \"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                lineNumber: 333,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex justify-between text-xs text-gray-500 mt-1\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        children: \"5 km\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                        lineNumber: 343,\n                                        columnNumber: 15\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        children: \"50 km\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                        lineNumber: 344,\n                                        columnNumber: 15\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        children: \"100 km\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                        lineNumber: 345,\n                                        columnNumber: 15\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                lineNumber: 342,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                        lineNumber: 329,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                lineNumber: 206,\n                columnNumber: 9\n            }, undefined),\n            showPanel && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_FloatingGeofencePanel__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                isOpen: showPanel,\n                onClose: closePanel,\n                geofenceRadius: geofenceRadius,\n                setGeofenceRadius: setGeofenceRadius,\n                onSearch: handlePanelSearch,\n                processGeofenceSearch: processGeofenceSearch,\n                isSearching: isSearching,\n                coordinates: tempCoordinates,\n                setCoordinates: panelLogic.setTempCoordinates,\n                locationName: locationName,\n                isLoadingLocation: isLoadingLocation,\n                onReset: resetPanel,\n                panelPosition: panelPosition ?? null,\n                setPanelPosition: setPanelPosition,\n                setShowPanel: setShowPanel\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                lineNumber: 353,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n        lineNumber: 144,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (GeofenceFilter);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/tracking/filters/GeofenceFilter.tsx\n");

/***/ }),

/***/ "(pages-dir-node)/./components/tracking/filters/ManufacturerFilter.tsx":
/*!************************************************************!*\
  !*** ./components/tracking/filters/ManufacturerFilter.tsx ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst ManufacturerFilter = ({ manufacturers, selectedManufacturer, manufacturerSearchTerm, setManufacturerSearchTerm, selectManufacturerAndClose, combinedLoading, activeDropdown, dropdownRef, toggleDropdown })=>{\n    // Filter manufacturers by search term\n    const filteredManufacturers = manufacturers.filter((manufacturer)=>manufacturer.label.toLowerCase().includes(manufacturerSearchTerm.toLowerCase()));\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: dropdownRef,\n        className: \"relative\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                className: `px-4 py-2 flex items-center justify-between gap-2 rounded-lg border ${activeDropdown === 'manufacturer' ? 'bg-indigo-100 text-indigo-700 border-indigo-300 shadow-sm' : selectedManufacturer ? 'bg-indigo-50/70 text-indigo-600 border-indigo-200' : 'bg-gray-50/30 hover:bg-gray-50 border-gray-200 text-gray-700 hover:border-gray-300'} transition-all duration-200`,\n                onClick: (event)=>toggleDropdown('manufacturer', event),\n                disabled: combinedLoading,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"flex items-center gap-2 font-medium\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                xmlns: \"http://www.w3.org/2000/svg\",\n                                className: \"h-4 w-4\",\n                                fill: \"none\",\n                                viewBox: \"0 0 24 24\",\n                                stroke: \"currentColor\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                    strokeLinecap: \"round\",\n                                    strokeLinejoin: \"round\",\n                                    strokeWidth: 2,\n                                    d: \"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ManufacturerFilter.tsx\",\n                                    lineNumber: 43,\n                                    columnNumber: 13\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ManufacturerFilter.tsx\",\n                                lineNumber: 36,\n                                columnNumber: 11\n                            }, undefined),\n                            selectedManufacturer ? manufacturers.find((m)=>m.value === selectedManufacturer)?.label || selectedManufacturer : 'Manufacturer'\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ManufacturerFilter.tsx\",\n                        lineNumber: 35,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        className: `h-4 w-4 transition-transform ${activeDropdown === 'manufacturer' ? 'transform rotate-180' : ''}`,\n                        fill: \"none\",\n                        viewBox: \"0 0 24 24\",\n                        stroke: \"currentColor\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            strokeLinecap: \"round\",\n                            strokeLinejoin: \"round\",\n                            strokeWidth: 2,\n                            d: \"M19 9l-7 7-7-7\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ManufacturerFilter.tsx\",\n                            lineNumber: 62,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ManufacturerFilter.tsx\",\n                        lineNumber: 55,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ManufacturerFilter.tsx\",\n                lineNumber: 24,\n                columnNumber: 7\n            }, undefined),\n            activeDropdown === 'manufacturer' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute left-0 top-full mt-1 w-64 bg-white shadow-lg rounded-md border border-gray-200 z-50\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"sticky top-0 bg-white p-2 border-b\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                type: \"text\",\n                                className: \"w-full px-3 py-2 border border-gray-300 rounded-md\",\n                                placeholder: \"Search manufacturers...\",\n                                value: manufacturerSearchTerm,\n                                onChange: (e)=>setManufacturerSearchTerm(e.target.value),\n                                autoFocus: true\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ManufacturerFilter.tsx\",\n                                lineNumber: 74,\n                                columnNumber: 13\n                            }, undefined),\n                            selectedManufacturer && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>selectManufacturerAndClose(''),\n                                className: \"absolute right-4 top-4 text-gray-400 hover:text-gray-600\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                    xmlns: \"http://www.w3.org/2000/svg\",\n                                    className: \"h-5 w-5\",\n                                    fill: \"none\",\n                                    viewBox: \"0 0 24 24\",\n                                    stroke: \"currentColor\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                        strokeLinecap: \"round\",\n                                        strokeLinejoin: \"round\",\n                                        strokeWidth: 2,\n                                        d: \"M6 18L18 6M6 6l12 12\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ManufacturerFilter.tsx\",\n                                        lineNumber: 95,\n                                        columnNumber: 19\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ManufacturerFilter.tsx\",\n                                    lineNumber: 88,\n                                    columnNumber: 17\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ManufacturerFilter.tsx\",\n                                lineNumber: 84,\n                                columnNumber: 15\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ManufacturerFilter.tsx\",\n                        lineNumber: 73,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"max-h-72 overflow-y-auto\",\n                        children: filteredManufacturers.length === 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"p-3 text-center text-gray-500\",\n                            children: \"No results found\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ManufacturerFilter.tsx\",\n                            lineNumber: 108,\n                            columnNumber: 15\n                        }, undefined) : filteredManufacturers.map((manufacturer)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: `px-3 py-2 hover:bg-indigo-50 cursor-pointer ${selectedManufacturer === manufacturer.value ? 'bg-indigo-50 font-medium text-indigo-700' : 'text-gray-700'}`,\n                                onClick: ()=>selectManufacturerAndClose(manufacturer.value),\n                                children: manufacturer.label\n                            }, manufacturer.value, false, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ManufacturerFilter.tsx\",\n                                lineNumber: 113,\n                                columnNumber: 17\n                            }, undefined))\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ManufacturerFilter.tsx\",\n                        lineNumber: 106,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ManufacturerFilter.tsx\",\n                lineNumber: 72,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ManufacturerFilter.tsx\",\n        lineNumber: 23,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ManufacturerFilter);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/tracking/filters/ManufacturerFilter.tsx\n");

/***/ }),

/***/ "(pages-dir-node)/./components/tracking/filters/ModelFilter.tsx":
/*!*****************************************************!*\
  !*** ./components/tracking/filters/ModelFilter.tsx ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst ModelFilter = ({ selectedManufacturer, selectedModel, totalActive, activeDropdown, handleModelSelect, toggleDropdown, dropdownRef, activeModels })=>{\n    const isEnabled = !!selectedManufacturer;\n    // Group models by their first letter for the dropdown\n    const groupModelsByLetter = ()=>{\n        const groups = {};\n        activeModels.forEach((model)=>{\n            const firstChar = model.MODEL.charAt(0).toUpperCase();\n            if (!groups[firstChar]) {\n                groups[firstChar] = [];\n            }\n            groups[firstChar].push(model);\n        });\n        // Sort each group alphabetically\n        Object.keys(groups).forEach((key)=>{\n            groups[key].sort((a, b)=>a.MODEL.localeCompare(b.MODEL));\n        });\n        return groups;\n    };\n    // Get most popular models for quick selection\n    const getPopularModels = ()=>{\n        return [\n            ...activeModels\n        ].sort((a, b)=>b.count - a.count).slice(0, 8);\n    };\n    const groupedModels = isEnabled ? groupModelsByLetter() : {};\n    const popularModels = isEnabled ? getPopularModels() : [];\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: dropdownRef,\n        className: \"relative\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                className: `px-4 py-2 flex items-center justify-between gap-2 rounded-lg border ${!isEnabled ? 'opacity-50 cursor-not-allowed bg-gray-50/30 border-gray-200 text-gray-500' : activeDropdown === 'model' ? 'bg-indigo-100 text-indigo-700 border-indigo-300 shadow-sm' : selectedModel ? 'bg-indigo-50/70 text-indigo-600 border-indigo-200' : 'bg-gray-50/30 hover:bg-gray-50 border-gray-200 text-gray-700 hover:border-gray-300'} transition-all duration-200`,\n                onClick: (event)=>isEnabled && toggleDropdown('model', event),\n                disabled: !isEnabled,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"flex items-center gap-2 font-medium\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                xmlns: \"http://www.w3.org/2000/svg\",\n                                className: \"h-4 w-4\",\n                                fill: \"none\",\n                                viewBox: \"0 0 24 24\",\n                                stroke: \"currentColor\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                    strokeLinecap: \"round\",\n                                    strokeLinejoin: \"round\",\n                                    strokeWidth: 2,\n                                    d: \"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ModelFilter.tsx\",\n                                    lineNumber: 67,\n                                    columnNumber: 13\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ModelFilter.tsx\",\n                                lineNumber: 60,\n                                columnNumber: 11\n                            }, undefined),\n                            selectedModel || `Model ${isEnabled ? `(${totalActive})` : ''}`\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ModelFilter.tsx\",\n                        lineNumber: 59,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        className: `h-4 w-4 transition-transform ${activeDropdown === 'model' ? 'transform rotate-180' : ''}`,\n                        fill: \"none\",\n                        viewBox: \"0 0 24 24\",\n                        stroke: \"currentColor\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            strokeLinecap: \"round\",\n                            strokeLinejoin: \"round\",\n                            strokeWidth: 2,\n                            d: \"M19 9l-7 7-7-7\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ModelFilter.tsx\",\n                            lineNumber: 83,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ModelFilter.tsx\",\n                        lineNumber: 76,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ModelFilter.tsx\",\n                lineNumber: 46,\n                columnNumber: 7\n            }, undefined),\n            isEnabled && activeDropdown === 'model' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute left-0 top-full mt-1 w-64 bg-white shadow-lg rounded-md border border-gray-200 z-50\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"sticky top-0 bg-white border-b\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"px-3 py-2 hover:bg-indigo-50 cursor-pointer font-medium\",\n                            onClick: ()=>handleModelSelect(''),\n                            children: [\n                                \"All Models (\",\n                                totalActive,\n                                \")\",\n                                selectedModel && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    onClick: (e)=>{\n                                        e.stopPropagation();\n                                        handleModelSelect('');\n                                    },\n                                    className: \"float-right text-gray-400 hover:text-gray-600\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                        xmlns: \"http://www.w3.org/2000/svg\",\n                                        className: \"h-5 w-5\",\n                                        fill: \"none\",\n                                        viewBox: \"0 0 24 24\",\n                                        stroke: \"currentColor\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                            strokeLinecap: \"round\",\n                                            strokeLinejoin: \"round\",\n                                            strokeWidth: 2,\n                                            d: \"M6 18L18 6M6 6l12 12\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ModelFilter.tsx\",\n                                            lineNumber: 115,\n                                            columnNumber: 21\n                                        }, undefined)\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ModelFilter.tsx\",\n                                        lineNumber: 108,\n                                        columnNumber: 19\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ModelFilter.tsx\",\n                                    lineNumber: 101,\n                                    columnNumber: 17\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ModelFilter.tsx\",\n                            lineNumber: 95,\n                            columnNumber: 13\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ModelFilter.tsx\",\n                        lineNumber: 94,\n                        columnNumber: 11\n                    }, undefined),\n                    popularModels.length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"px-3 py-1 text-xs text-gray-500 bg-gray-50\",\n                                children: \"Popular Models\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ModelFilter.tsx\",\n                                lineNumber: 130,\n                                columnNumber: 15\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"p-2 flex flex-wrap gap-1\",\n                                children: popularModels.map((model)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: `px-2 py-1 rounded-full text-xs cursor-pointer ${selectedModel === model.MODEL ? 'bg-indigo-100 text-indigo-800 border border-indigo-300' : 'bg-gray-100 text-gray-700 border border-gray-200 hover:bg-gray-200'}`,\n                                        onClick: ()=>handleModelSelect(model.MODEL),\n                                        children: [\n                                            model.MODEL,\n                                            \" (\",\n                                            model.count,\n                                            \")\"\n                                        ]\n                                    }, model.MODEL, true, {\n                                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ModelFilter.tsx\",\n                                        lineNumber: 135,\n                                        columnNumber: 19\n                                    }, undefined))\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ModelFilter.tsx\",\n                                lineNumber: 133,\n                                columnNumber: 15\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ModelFilter.tsx\",\n                        lineNumber: 129,\n                        columnNumber: 13\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"max-h-72 overflow-y-auto\",\n                        children: Object.keys(groupedModels).sort().map((letter)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"px-3 py-1 text-xs text-gray-500 bg-gray-50 sticky top-0 z-10\",\n                                        children: letter\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ModelFilter.tsx\",\n                                        lineNumber: 157,\n                                        columnNumber: 19\n                                    }, undefined),\n                                    groupedModels[letter].map((model)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: `px-3 py-2 hover:bg-indigo-50 cursor-pointer flex justify-between ${selectedModel === model.MODEL ? 'bg-indigo-50 font-medium text-indigo-700' : 'text-gray-700'}`,\n                                            onClick: ()=>handleModelSelect(model.MODEL),\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    children: model.MODEL\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ModelFilter.tsx\",\n                                                    lineNumber: 170,\n                                                    columnNumber: 23\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    className: \"text-gray-500 text-sm\",\n                                                    children: model.count\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ModelFilter.tsx\",\n                                                    lineNumber: 171,\n                                                    columnNumber: 23\n                                                }, undefined)\n                                            ]\n                                        }, model.MODEL, true, {\n                                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ModelFilter.tsx\",\n                                            lineNumber: 161,\n                                            columnNumber: 21\n                                        }, undefined))\n                                ]\n                            }, letter, true, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ModelFilter.tsx\",\n                                lineNumber: 156,\n                                columnNumber: 17\n                            }, undefined))\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ModelFilter.tsx\",\n                        lineNumber: 152,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ModelFilter.tsx\",\n                lineNumber: 93,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\ModelFilter.tsx\",\n        lineNumber: 45,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ModelFilter);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/tracking/filters/ModelFilter.tsx\n");

/***/ }),

/***/ "(pages-dir-node)/./components/tracking/filters/OwnerFilter.tsx":
/*!*****************************************************!*\
  !*** ./components/tracking/filters/OwnerFilter.tsx ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_Users_lucide_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! __barrel_optimize__?names=Users!=!lucide-react */ \"(pages-dir-node)/__barrel_optimize__?names=Users!=!./node_modules/lucide-react/dist/esm/lucide-react.js\");\n/* harmony import */ var _map_components_OwnershipTypeFilter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../map/components/OwnershipTypeFilter */ \"(pages-dir-node)/./components/tracking/map/components/OwnershipTypeFilter.jsx\");\n\n\n\n\nconst OwnerFilter = ({ activeFilters, onFilterChange, allOwnerTypes, activeDropdown, toggleFilterMode, dropdownRef, toggleDropdown })=>{\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: dropdownRef,\n        className: \"relative\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                className: `px-4 py-2 flex items-center justify-between gap-2 rounded-lg border ${activeDropdown === 'owner' ? 'bg-indigo-100 text-indigo-700 border-indigo-300 shadow-sm' : activeFilters.length < allOwnerTypes.length ? 'bg-indigo-50/70 text-indigo-600 border-indigo-200' : 'bg-gray-50/30 hover:bg-gray-50 border-gray-200 text-gray-700 hover:border-gray-300'} transition-all duration-200`,\n                onClick: (event)=>toggleDropdown('owner', event),\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"flex items-center gap-2 font-medium\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Users_lucide_react__WEBPACK_IMPORTED_MODULE_3__.Users, {\n                                size: 16,\n                                className: activeFilters.length < allOwnerTypes.length ? 'text-indigo-500' : 'text-gray-500'\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\OwnerFilter.tsx\",\n                                lineNumber: 28,\n                                columnNumber: 11\n                            }, undefined),\n                            activeFilters.length === allOwnerTypes.length ? 'Owner Types' : `Owner Types (${activeFilters.length})`\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\OwnerFilter.tsx\",\n                        lineNumber: 27,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        className: `h-4 w-4 transition-transform ${activeDropdown === 'owner' ? 'transform rotate-180' : ''}`,\n                        fill: \"none\",\n                        viewBox: \"0 0 24 24\",\n                        stroke: \"currentColor\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            strokeLinecap: \"round\",\n                            strokeLinejoin: \"round\",\n                            strokeWidth: 2,\n                            d: \"M19 9l-7 7-7-7\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\OwnerFilter.tsx\",\n                            lineNumber: 47,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\OwnerFilter.tsx\",\n                        lineNumber: 40,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\OwnerFilter.tsx\",\n                lineNumber: 17,\n                columnNumber: 7\n            }, undefined),\n            activeDropdown === 'owner' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute left-0 top-full mt-1 w-64 bg-white shadow-lg rounded-md border border-gray-200 z-50\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"p-3 border-b flex justify-between items-center\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"text-sm font-medium text-gray-700\",\n                                children: \"Owner Type Filters\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\OwnerFilter.tsx\",\n                                lineNumber: 59,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"space-x-2\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        onClick: ()=>onFilterChange([\n                                                ...allOwnerTypes\n                                            ]),\n                                        className: \"text-xs text-indigo-600 hover:text-indigo-800\",\n                                        children: \"Select All\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\OwnerFilter.tsx\",\n                                        lineNumber: 63,\n                                        columnNumber: 15\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        onClick: ()=>onFilterChange([]),\n                                        className: \"text-xs text-indigo-600 hover:text-indigo-800\",\n                                        children: \"Clear All\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\OwnerFilter.tsx\",\n                                        lineNumber: 69,\n                                        columnNumber: 15\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\OwnerFilter.tsx\",\n                                lineNumber: 62,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\OwnerFilter.tsx\",\n                        lineNumber: 58,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"max-h-64 overflow-y-auto p-3\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_map_components_OwnershipTypeFilter__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                            onFilterChange: onFilterChange,\n                            activeFilters: activeFilters\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\OwnerFilter.tsx\",\n                            lineNumber: 79,\n                            columnNumber: 13\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\OwnerFilter.tsx\",\n                        lineNumber: 78,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"p-3 border-t flex justify-between items-center\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"text-xs text-gray-500\",\n                                children: [\n                                    activeFilters.length,\n                                    \" of \",\n                                    allOwnerTypes.length,\n                                    \" selected\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\OwnerFilter.tsx\",\n                                lineNumber: 86,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>{\n                                    toggleFilterMode('owner');\n                                    toggleDropdown('owner', new MouseEvent('click'));\n                                },\n                                className: \"px-3 py-1 bg-indigo-600 text-white rounded-md text-sm hover:bg-indigo-700\",\n                                children: \"Apply Filters\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\OwnerFilter.tsx\",\n                                lineNumber: 89,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\OwnerFilter.tsx\",\n                        lineNumber: 85,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\OwnerFilter.tsx\",\n                lineNumber: 57,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\OwnerFilter.tsx\",\n        lineNumber: 16,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (OwnerFilter);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/tracking/filters/OwnerFilter.tsx\n");

/***/ }),

/***/ "(pages-dir-node)/./components/tracking/filters/RegionFilter.tsx":
/*!******************************************************!*\
  !*** ./components/tracking/filters/RegionFilter.tsx ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_Globe_lucide_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! __barrel_optimize__?names=Globe!=!lucide-react */ \"(pages-dir-node)/__barrel_optimize__?names=Globe!=!./node_modules/lucide-react/dist/esm/lucide-react.js\");\n/* harmony import */ var _config_map__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/config/map */ \"(pages-dir-node)/./config/map.ts\");\n\n\n\n\nconst RegionFilter = ({ activeRegion, handleRegionSelect, activeDropdown, toggleDropdown, dropdownRef, selectedRegion })=>{\n    // Helper function to get region name from code\n    const getRegionName = (regionCode)=>{\n        const entry = Object.entries(_config_map__WEBPACK_IMPORTED_MODULE_2__.MAP_CONFIG.REGIONS).find(([_, code])=>code === regionCode);\n        return entry ? entry[0] : 'Unknown Region';\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: dropdownRef,\n        className: \"relative\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                className: `px-4 py-2 flex items-center justify-between gap-2 rounded-lg border ${activeDropdown === 'region' ? 'bg-indigo-100 text-indigo-700 border-indigo-300 shadow-sm' : activeRegion !== null ? 'bg-indigo-50/70 text-indigo-600 border-indigo-200' : 'bg-gray-50/30 hover:bg-gray-50 border-gray-200 text-gray-700 hover:border-gray-300'} transition-all duration-200`,\n                onClick: (event)=>toggleDropdown('region', event),\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"flex items-center gap-2 font-medium\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Globe_lucide_react__WEBPACK_IMPORTED_MODULE_3__.Globe, {\n                                size: 16,\n                                className: activeRegion !== null ? 'text-indigo-500' : 'text-gray-500'\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\RegionFilter.tsx\",\n                                lineNumber: 36,\n                                columnNumber: 11\n                            }, undefined),\n                            activeRegion !== null && typeof activeRegion !== 'string' ? getRegionName(activeRegion) : 'Region'\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\RegionFilter.tsx\",\n                        lineNumber: 35,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        className: `h-4 w-4 transition-transform ${activeDropdown === 'region' ? 'transform rotate-180' : ''}`,\n                        fill: \"none\",\n                        viewBox: \"0 0 24 24\",\n                        stroke: \"currentColor\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            strokeLinecap: \"round\",\n                            strokeLinejoin: \"round\",\n                            strokeWidth: 2,\n                            d: \"M19 9l-7 7-7-7\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\RegionFilter.tsx\",\n                            lineNumber: 53,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\RegionFilter.tsx\",\n                        lineNumber: 46,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\RegionFilter.tsx\",\n                lineNumber: 25,\n                columnNumber: 7\n            }, undefined),\n            activeDropdown === 'region' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute left-0 top-full mt-1 w-52 bg-white shadow-lg rounded-md border border-gray-200 z-50\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"p-3 grid grid-cols-1 gap-2\",\n                    children: Object.entries(_config_map__WEBPACK_IMPORTED_MODULE_2__.MAP_CONFIG.REGIONS).map(([name, code])=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: ()=>handleRegionSelect(code),\n                            className: `px-3 py-2 text-sm rounded-md ${selectedRegion === code ? 'bg-indigo-100 text-indigo-700 border border-indigo-300' : 'bg-gray-50 text-gray-700 border border-gray-200 hover:bg-gray-100'}`,\n                            children: name\n                        }, name, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\RegionFilter.tsx\",\n                            lineNumber: 66,\n                            columnNumber: 15\n                        }, undefined))\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\RegionFilter.tsx\",\n                    lineNumber: 64,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\RegionFilter.tsx\",\n                lineNumber: 63,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\RegionFilter.tsx\",\n        lineNumber: 24,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (RegionFilter);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL2NvbXBvbmVudHMvdHJhY2tpbmcvZmlsdGVycy9SZWdpb25GaWx0ZXIudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQTBCO0FBQ1c7QUFFSztBQUcxQyxNQUFNRyxlQUE0QyxDQUFDLEVBQ2pEQyxZQUFZLEVBQ1pDLGtCQUFrQixFQUNsQkMsY0FBYyxFQUNkQyxjQUFjLEVBQ2RDLFdBQVcsRUFDWEMsY0FBYyxFQUNmO0lBQ0MsK0NBQStDO0lBQy9DLE1BQU1DLGdCQUFnQixDQUFDQztRQUNyQixNQUFNQyxRQUFRQyxPQUFPQyxPQUFPLENBQUNaLG1EQUFVQSxDQUFDYSxPQUFPLEVBQUVDLElBQUksQ0FDbkQsQ0FBQyxDQUFDQyxHQUFHQyxLQUFLLEdBQUtBLFNBQVNQO1FBRTFCLE9BQU9DLFFBQVFBLEtBQUssQ0FBQyxFQUFFLEdBQUc7SUFDNUI7SUFFQSxxQkFDRSw4REFBQ087UUFBSUMsS0FBS1o7UUFBYWEsV0FBVTs7MEJBQy9CLDhEQUFDQztnQkFDQ0QsV0FBVyxDQUFDLG9FQUFvRSxFQUM5RWYsbUJBQW1CLFdBQ2YsOERBQ0FGLGlCQUFpQixPQUNmLHNEQUNBLHFGQUNQLDRCQUE0QixDQUFDO2dCQUM5Qm1CLFNBQVMsQ0FBQ0MsUUFBVWpCLGVBQWUsVUFBVWlCOztrQ0FFN0MsOERBQUNDO3dCQUFLSixXQUFVOzswQ0FDZCw4REFBQ3BCLDRFQUFLQTtnQ0FDSnlCLE1BQU07Z0NBQ05MLFdBQ0VqQixpQkFBaUIsT0FBTyxvQkFBb0I7Ozs7Ozs0QkFHL0NBLGlCQUFpQixRQUFRLE9BQU9BLGlCQUFpQixXQUM5Q00sY0FBY04sZ0JBQ2Q7Ozs7Ozs7a0NBRU4sOERBQUN1Qjt3QkFDQ0MsT0FBTTt3QkFDTlAsV0FBVyxDQUFDLDZCQUE2QixFQUFFZixtQkFBbUIsV0FBVyx5QkFBeUIsSUFBSTt3QkFDdEd1QixNQUFLO3dCQUNMQyxTQUFRO3dCQUNSQyxRQUFPO2tDQUVQLDRFQUFDQzs0QkFDQ0MsZUFBYzs0QkFDZEMsZ0JBQWU7NEJBQ2ZDLGFBQWE7NEJBQ2JDLEdBQUU7Ozs7Ozs7Ozs7Ozs7Ozs7O1lBS1A5QixtQkFBbUIsMEJBQ2xCLDhEQUFDYTtnQkFBSUUsV0FBVTswQkFDYiw0RUFBQ0Y7b0JBQUlFLFdBQVU7OEJBQ1pSLE9BQU9DLE9BQU8sQ0FBQ1osbURBQVVBLENBQUNhLE9BQU8sRUFBRXNCLEdBQUcsQ0FBQyxDQUFDLENBQUNDLE1BQU1wQixLQUFLLGlCQUNuRCw4REFBQ0k7NEJBRUNDLFNBQVMsSUFBTWxCLG1CQUFtQmE7NEJBQ2xDRyxXQUFXLENBQUMsNkJBQTZCLEVBQ3ZDWixtQkFBbUJTLE9BQ2YsMkRBQ0EscUVBQ0o7c0NBRURvQjsyQkFSSUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWdCckI7QUFFQSxpRUFBZW5DLFlBQVlBLEVBQUMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcc2F0aG9cXERvY3VtZW50c1xcUHJvamVjdHNcXGFpcmNyYWZ0LXRyYWNraW5nXFxjb21wb25lbnRzXFx0cmFja2luZ1xcZmlsdGVyc1xcUmVnaW9uRmlsdGVyLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyBHbG9iZSB9IGZyb20gJ2x1Y2lkZS1yZWFjdCc7XHJcbmltcG9ydCB7IFJlZ2lvbkNvZGUgfSBmcm9tICdAL3R5cGVzL2Jhc2UnO1xyXG5pbXBvcnQgeyBNQVBfQ09ORklHIH0gZnJvbSAnQC9jb25maWcvbWFwJztcclxuaW1wb3J0IHR5cGUgeyBSZWdpb25GaWx0ZXJQcm9wcyB9IGZyb20gJy4uL3R5cGVzL2ZpbHRlcnMnO1xyXG5cclxuY29uc3QgUmVnaW9uRmlsdGVyOiBSZWFjdC5GQzxSZWdpb25GaWx0ZXJQcm9wcz4gPSAoe1xyXG4gIGFjdGl2ZVJlZ2lvbixcclxuICBoYW5kbGVSZWdpb25TZWxlY3QsXHJcbiAgYWN0aXZlRHJvcGRvd24sXHJcbiAgdG9nZ2xlRHJvcGRvd24sXHJcbiAgZHJvcGRvd25SZWYsXHJcbiAgc2VsZWN0ZWRSZWdpb24sXHJcbn0pID0+IHtcclxuICAvLyBIZWxwZXIgZnVuY3Rpb24gdG8gZ2V0IHJlZ2lvbiBuYW1lIGZyb20gY29kZVxyXG4gIGNvbnN0IGdldFJlZ2lvbk5hbWUgPSAocmVnaW9uQ29kZTogUmVnaW9uQ29kZSk6IHN0cmluZyA9PiB7XHJcbiAgICBjb25zdCBlbnRyeSA9IE9iamVjdC5lbnRyaWVzKE1BUF9DT05GSUcuUkVHSU9OUykuZmluZChcclxuICAgICAgKFtfLCBjb2RlXSkgPT4gY29kZSA9PT0gcmVnaW9uQ29kZVxyXG4gICAgKTtcclxuICAgIHJldHVybiBlbnRyeSA/IGVudHJ5WzBdIDogJ1Vua25vd24gUmVnaW9uJztcclxuICB9O1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPGRpdiByZWY9e2Ryb3Bkb3duUmVmfSBjbGFzc05hbWU9XCJyZWxhdGl2ZVwiPlxyXG4gICAgICA8YnV0dG9uXHJcbiAgICAgICAgY2xhc3NOYW1lPXtgcHgtNCBweS0yIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiBnYXAtMiByb3VuZGVkLWxnIGJvcmRlciAke1xyXG4gICAgICAgICAgYWN0aXZlRHJvcGRvd24gPT09ICdyZWdpb24nXHJcbiAgICAgICAgICAgID8gJ2JnLWluZGlnby0xMDAgdGV4dC1pbmRpZ28tNzAwIGJvcmRlci1pbmRpZ28tMzAwIHNoYWRvdy1zbSdcclxuICAgICAgICAgICAgOiBhY3RpdmVSZWdpb24gIT09IG51bGxcclxuICAgICAgICAgICAgICA/ICdiZy1pbmRpZ28tNTAvNzAgdGV4dC1pbmRpZ28tNjAwIGJvcmRlci1pbmRpZ28tMjAwJ1xyXG4gICAgICAgICAgICAgIDogJ2JnLWdyYXktNTAvMzAgaG92ZXI6YmctZ3JheS01MCBib3JkZXItZ3JheS0yMDAgdGV4dC1ncmF5LTcwMCBob3Zlcjpib3JkZXItZ3JheS0zMDAnXHJcbiAgICAgICAgfSB0cmFuc2l0aW9uLWFsbCBkdXJhdGlvbi0yMDBgfVxyXG4gICAgICAgIG9uQ2xpY2s9eyhldmVudCkgPT4gdG9nZ2xlRHJvcGRvd24oJ3JlZ2lvbicsIGV2ZW50KX1cclxuICAgICAgPlxyXG4gICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGdhcC0yIGZvbnQtbWVkaXVtXCI+XHJcbiAgICAgICAgICA8R2xvYmVcclxuICAgICAgICAgICAgc2l6ZT17MTZ9XHJcbiAgICAgICAgICAgIGNsYXNzTmFtZT17XHJcbiAgICAgICAgICAgICAgYWN0aXZlUmVnaW9uICE9PSBudWxsID8gJ3RleHQtaW5kaWdvLTUwMCcgOiAndGV4dC1ncmF5LTUwMCdcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgLz5cclxuICAgICAgICAgIHthY3RpdmVSZWdpb24gIT09IG51bGwgJiYgdHlwZW9mIGFjdGl2ZVJlZ2lvbiAhPT0gJ3N0cmluZydcclxuICAgICAgICAgICAgPyBnZXRSZWdpb25OYW1lKGFjdGl2ZVJlZ2lvbilcclxuICAgICAgICAgICAgOiAnUmVnaW9uJ31cclxuICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgPHN2Z1xyXG4gICAgICAgICAgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXHJcbiAgICAgICAgICBjbGFzc05hbWU9e2BoLTQgdy00IHRyYW5zaXRpb24tdHJhbnNmb3JtICR7YWN0aXZlRHJvcGRvd24gPT09ICdyZWdpb24nID8gJ3RyYW5zZm9ybSByb3RhdGUtMTgwJyA6ICcnfWB9XHJcbiAgICAgICAgICBmaWxsPVwibm9uZVwiXHJcbiAgICAgICAgICB2aWV3Qm94PVwiMCAwIDI0IDI0XCJcclxuICAgICAgICAgIHN0cm9rZT1cImN1cnJlbnRDb2xvclwiXHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPHBhdGhcclxuICAgICAgICAgICAgc3Ryb2tlTGluZWNhcD1cInJvdW5kXCJcclxuICAgICAgICAgICAgc3Ryb2tlTGluZWpvaW49XCJyb3VuZFwiXHJcbiAgICAgICAgICAgIHN0cm9rZVdpZHRoPXsyfVxyXG4gICAgICAgICAgICBkPVwiTTE5IDlsLTcgNy03LTdcIlxyXG4gICAgICAgICAgLz5cclxuICAgICAgICA8L3N2Zz5cclxuICAgICAgPC9idXR0b24+XHJcblxyXG4gICAgICB7YWN0aXZlRHJvcGRvd24gPT09ICdyZWdpb24nICYmIChcclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImFic29sdXRlIGxlZnQtMCB0b3AtZnVsbCBtdC0xIHctNTIgYmctd2hpdGUgc2hhZG93LWxnIHJvdW5kZWQtbWQgYm9yZGVyIGJvcmRlci1ncmF5LTIwMCB6LTUwXCI+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInAtMyBncmlkIGdyaWQtY29scy0xIGdhcC0yXCI+XHJcbiAgICAgICAgICAgIHtPYmplY3QuZW50cmllcyhNQVBfQ09ORklHLlJFR0lPTlMpLm1hcCgoW25hbWUsIGNvZGVdKSA9PiAoXHJcbiAgICAgICAgICAgICAgPGJ1dHRvblxyXG4gICAgICAgICAgICAgICAga2V5PXtuYW1lfVxyXG4gICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gaGFuZGxlUmVnaW9uU2VsZWN0KGNvZGUgYXMgUmVnaW9uQ29kZSl9XHJcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2BweC0zIHB5LTIgdGV4dC1zbSByb3VuZGVkLW1kICR7XHJcbiAgICAgICAgICAgICAgICAgIHNlbGVjdGVkUmVnaW9uID09PSBjb2RlXHJcbiAgICAgICAgICAgICAgICAgICAgPyAnYmctaW5kaWdvLTEwMCB0ZXh0LWluZGlnby03MDAgYm9yZGVyIGJvcmRlci1pbmRpZ28tMzAwJ1xyXG4gICAgICAgICAgICAgICAgICAgIDogJ2JnLWdyYXktNTAgdGV4dC1ncmF5LTcwMCBib3JkZXIgYm9yZGVyLWdyYXktMjAwIGhvdmVyOmJnLWdyYXktMTAwJ1xyXG4gICAgICAgICAgICAgICAgfWB9XHJcbiAgICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgICAge25hbWV9XHJcbiAgICAgICAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgICAgICkpfVxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICl9XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgUmVnaW9uRmlsdGVyO1xyXG4iXSwibmFtZXMiOlsiUmVhY3QiLCJHbG9iZSIsIk1BUF9DT05GSUciLCJSZWdpb25GaWx0ZXIiLCJhY3RpdmVSZWdpb24iLCJoYW5kbGVSZWdpb25TZWxlY3QiLCJhY3RpdmVEcm9wZG93biIsInRvZ2dsZURyb3Bkb3duIiwiZHJvcGRvd25SZWYiLCJzZWxlY3RlZFJlZ2lvbiIsImdldFJlZ2lvbk5hbWUiLCJyZWdpb25Db2RlIiwiZW50cnkiLCJPYmplY3QiLCJlbnRyaWVzIiwiUkVHSU9OUyIsImZpbmQiLCJfIiwiY29kZSIsImRpdiIsInJlZiIsImNsYXNzTmFtZSIsImJ1dHRvbiIsIm9uQ2xpY2siLCJldmVudCIsInNwYW4iLCJzaXplIiwic3ZnIiwieG1sbnMiLCJmaWxsIiwidmlld0JveCIsInN0cm9rZSIsInBhdGgiLCJzdHJva2VMaW5lY2FwIiwic3Ryb2tlTGluZWpvaW4iLCJzdHJva2VXaWR0aCIsImQiLCJtYXAiLCJuYW1lIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/tracking/filters/RegionFilter.tsx\n");

/***/ }),

/***/ "(pages-dir-node)/./components/tracking/hooks/useFilterLogic.ts":
/*!*****************************************************!*\
  !*** ./components/tracking/hooks/useFilterLogic.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useFilterLogic: () => (/* binding */ useFilterLogic)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _types_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/types/base */ \"(pages-dir-node)/./types/base.ts\");\n/* harmony import */ var _context_EnhancedMapContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../context/EnhancedMapContext */ \"(pages-dir-node)/./components/tracking/context/EnhancedMapContext.tsx\");\n/* harmony import */ var _lib_services_openSkyTrackingService__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/services/openSkyTrackingService */ \"(pages-dir-node)/./lib/services/openSkyTrackingService.ts\");\n/* harmony import */ var _lib_services_MapboxService__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../lib/services/MapboxService */ \"(pages-dir-node)/./lib/services/MapboxService.ts\");\n/* harmony import */ var _lib_utils_geofenceAdapter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/utils/geofenceAdapter */ \"(pages-dir-node)/./lib/utils/geofenceAdapter.ts\");\n/* harmony import */ var _lib_utils_geofenceEnricher__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/lib/utils/geofenceEnricher */ \"(pages-dir-node)/./lib/utils/geofenceEnricher.ts\");\n/* harmony import */ var _hooks_useGeolocationServices__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../hooks/useGeolocationServices */ \"(pages-dir-node)/./components/tracking/hooks/useGeolocationServices.ts\");\n/* harmony import */ var _lib_services_geofencing__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../lib/services/geofencing */ \"(pages-dir-node)/./lib/services/geofencing.ts\");\n/* harmony import */ var _hooks_useGeolocation__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../hooks/useGeolocation */ \"(pages-dir-node)/./components/tracking/hooks/useGeolocation.ts\");\n/* harmony import */ var _config_map__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../config/map */ \"(pages-dir-node)/./config/map.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\nfunction useFilterLogic() {\n    // Get context state and functions\n    const { selectedManufacturer, selectedModel, totalActive, selectManufacturer, selectModel, reset, fullRefresh, refreshPositions, mapInstance, updateAircraftData, clearGeofenceData, updateGeofenceAircraft, blockManufacturerApiCalls, setBlockManufacturerApiCalls, isManufacturerApiBlocked, setIsManufacturerApiBlocked, geofenceCenter, setGeofenceCenter, toggleGeofence, clearGeofence, displayedAircraft } = (0,_context_EnhancedMapContext__WEBPACK_IMPORTED_MODULE_2__.useEnhancedMapContext)();\n    // Use our combined geolocation services hook\n    const geolocationServices = (0,_hooks_useGeolocationServices__WEBPACK_IMPORTED_MODULE_7__.useGeolocationServices)();\n    // Local state\n    const [localLoading, setLocalLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [filterMode, setFilterMode] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [activeDropdown, setActiveDropdown] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [manufacturerSearchTerm, setManufacturerSearchTerm] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');\n    const [isRefreshing, setIsRefreshing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [isRateLimited, setIsRateLimited] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [rateLimitTimer, setRateLimitTimer] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    // Geofence state\n    const [isGettingLocation, setIsGettingLocation] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [geofenceLocation, setGeofenceLocation] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');\n    const [geofenceRadius, setGeofenceRadius] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(25);\n    const [geofenceCoordinates, setGeofenceCoordinates] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [geofenceAircraft, setGeofenceAircraft] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [geofenceEnabled, setGeofenceEnabled] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [isGeofenceActive, setIsGeofenceActive] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [isSearchReady, setIsSearchReady] = react__WEBPACK_IMPORTED_MODULE_0___default().useState(false);\n    // Region state\n    const [activeRegion, setActiveRegion] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [regionOutline, setRegionOutline] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [selectedRegion, setSelectedRegion] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_types_base__WEBPACK_IMPORTED_MODULE_1__.RegionCode.GLOBAL);\n    // Combined mode state\n    const [combinedModeReady, setCombinedModeReady] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    // Owner filter state\n    const allOwnerTypes = [\n        'individual',\n        'partnership',\n        'corp-owner',\n        'co-owned',\n        'llc',\n        'non-citizen-corp',\n        'airline',\n        'freight',\n        'medical',\n        'media',\n        'historical',\n        'flying-club',\n        'emergency',\n        'local-govt',\n        'education',\n        'federal-govt',\n        'flight-school',\n        'leasing-corp',\n        'military',\n        'unknown'\n    ];\n    const [ownerFilters, setOwnerFilters] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([\n        ...allOwnerTypes\n    ]);\n    // Refs for dropdown handling\n    const dropdownRefs = {\n        filter: (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),\n        manufacturer: (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),\n        model: (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),\n        location: (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),\n        region: (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),\n        owner: (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),\n        actions: (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null)\n    };\n    // Get geolocation hook - use the entire hook instance\n    const geolocation = (0,_hooks_useGeolocation__WEBPACK_IMPORTED_MODULE_9__.useGeolocation)(null);\n    // Geofence methods\n    // Fixed getUserLocation function to use the geolocation hook\n    const getUserLocation = async ()=>{\n        if (isRateLimited) {\n            alert(`Rate limited. Please wait ${rateLimitTimer || 30} seconds before trying to get location.`);\n            return;\n        }\n        setIsGettingLocation(true);\n        try {\n            // Use the getCurrentPosition from our combined hook\n            const position = await geolocationServices.getCurrentPosition();\n            if (position) {\n                const { latitude, longitude } = position.coords;\n                // Update state with coordinates\n                setGeofenceCoordinates({\n                    lat: latitude,\n                    lng: longitude\n                });\n                setGeofenceCenter({\n                    lat: latitude,\n                    lng: longitude\n                });\n                // Update the location display with coordinates\n                setGeofenceLocation(`${latitude.toFixed(6)}, ${longitude.toFixed(6)}`);\n                // Automatically trigger the geofence search\n                try {\n                    const fetchedAircraft = await (0,_lib_services_geofencing__WEBPACK_IMPORTED_MODULE_8__.getAircraftNearLocation)(latitude, longitude, geofenceRadius);\n                    if (fetchedAircraft.length === 0) {\n                        alert(`No aircraft found near your current location. Try increasing the radius.`);\n                        setIsGettingLocation(false);\n                        return;\n                    }\n                    // Process the aircraft data\n                    const adaptedAircraft = (0,_lib_utils_geofenceAdapter__WEBPACK_IMPORTED_MODULE_5__.adaptGeofenceAircraft)(fetchedAircraft);\n                    const enrichedAircraft = await (0,_lib_utils_geofenceEnricher__WEBPACK_IMPORTED_MODULE_6__.enrichGeofenceAircraft)(adaptedAircraft);\n                    // Save to local state\n                    setGeofenceAircraft(enrichedAircraft);\n                    // Clear existing aircraft data\n                    if (clearGeofenceData) {\n                        clearGeofenceData();\n                    }\n                    // Update the map with new aircraft\n                    updateGeofenceAircraft(enrichedAircraft);\n                    setIsGeofenceActive(true);\n                    // Center the map on user's location - SIMPLIFIED ZOOM LOGIC\n                    if (mapInstance) {\n                        // Don't modify zoom if it's already at an appropriate level\n                        const currentZoom = mapInstance.getZoom();\n                        const targetZoom = currentZoom <= 7 ? 9 : currentZoom;\n                        // Set the view directly to the user's location\n                        mapInstance.setView([\n                            latitude,\n                            longitude\n                        ], targetZoom);\n                        // Make sure the map reflects changes\n                        mapInstance.invalidateSize();\n                    }\n                    // If in geofence mode, ensure the filter mode is set correctly\n                    if (filterMode !== 'geofence' && filterMode !== 'both') {\n                        setFilterMode('geofence');\n                    }\n                } catch (error) {\n                    if (error.message?.includes('rate limit') || error.status === 429) {\n                        handleRateLimit(30);\n                        // Still update the location even if we couldn't get aircraft\n                        if (mapInstance) {\n                            mapInstance.setView([\n                                latitude,\n                                longitude\n                            ], 9);\n                            mapInstance.invalidateSize();\n                        }\n                    } else {\n                        throw error;\n                    }\n                }\n                // Close the dropdown after selection\n                setActiveDropdown(null);\n            }\n        } catch (error) {\n            console.error('Error getting user location:', error);\n            alert('Unable to access your location. Please make sure location services are enabled in your browser.');\n        } finally{\n            setIsGettingLocation(false);\n        }\n    };\n    const processGeofenceSearch = async (fromPanel = false)=>{\n        if (!geofenceLocation) return;\n        // Check if rate limited\n        if (isRateLimited) {\n            alert(`Rate limited. Please wait ${rateLimitTimer || 30} seconds before searching again.`);\n            return;\n        }\n        // Block API calls while doing geofence search in combined mode\n        if (filterMode === 'both') {\n            _lib_services_openSkyTrackingService__WEBPACK_IMPORTED_MODULE_3__[\"default\"].setBlockAllApiCalls(true);\n            setBlockManufacturerApiCalls(true);\n        }\n        // Set loading state\n        setLocalLoading(true);\n        try {\n            console.log(`Searching for aircraft near location: \"${geofenceLocation}\"`);\n            // This will handle Postal codes, place names, addresses, POIs, etc.\n            let fetchedAircraft;\n            try {\n                fetchedAircraft = await (0,_lib_services_geofencing__WEBPACK_IMPORTED_MODULE_8__.getAircraftNearSearchedLocation)(geofenceLocation, geofenceRadius);\n            } catch (error) {\n                if (error.message?.includes('rate limit') || error.status === 429) {\n                    const retryAfter = 30; // Default to 30 seconds if not specified\n                    handleRateLimit(retryAfter);\n                    setLocalLoading(false);\n                    return;\n                }\n                throw error;\n            }\n            // Get coordinates for the map\n            let locations;\n            try {\n                locations = await _lib_services_MapboxService__WEBPACK_IMPORTED_MODULE_4__.MapboxService.searchLocationWithMapbox(geofenceLocation, 1);\n            } catch (error) {\n                console.error('Error searching location with Mapbox:', error);\n                // Continue with aircraft data if available\n                locations = [];\n            }\n            let coordinates = null;\n            if (locations.length > 0) {\n                coordinates = {\n                    lat: locations[0].lat,\n                    lng: locations[0].lng\n                };\n                // Save the formatted location name\n                setGeofenceLocation(locations[0].name);\n            } else if (fetchedAircraft.length > 0 && fetchedAircraft[0].latitude && fetchedAircraft[0].longitude) {\n                // Fallback to first aircraft position\n                coordinates = {\n                    lat: fetchedAircraft[0].latitude,\n                    lng: fetchedAircraft[0].longitude\n                };\n            }\n            if (fetchedAircraft.length === 0) {\n                alert(`No aircraft found near ${geofenceLocation}. Try increasing the radius or searching in a different area.`);\n                setLocalLoading(false);\n                return;\n            }\n            // Update state with the coordinates\n            if (coordinates) {\n                setGeofenceCoordinates(coordinates);\n                setGeofenceCenter(coordinates);\n                setGeofenceRadius(geofenceRadius);\n            }\n            if (!isGeofenceActive) {\n                toggleGeofence();\n            } else if (!coordinates) {\n                throw new Error('Could not determine coordinates for the location');\n            }\n            console.log(`Found ${fetchedAircraft.length} aircraft in the area, preparing for display...`);\n            // Ensure the data is in the right format\n            const adaptedAircraft = fetchedAircraft[0].MANUFACTURER !== undefined ? fetchedAircraft // Already in the right format\n             : (0,_lib_utils_geofenceAdapter__WEBPACK_IMPORTED_MODULE_5__.adaptGeofenceAircraft)(fetchedAircraft); // Needs adaptation\n            // Enrich with static data\n            console.log('Enriching geofence aircraft with static data...');\n            const enrichedAircraft = await (0,_lib_utils_geofenceEnricher__WEBPACK_IMPORTED_MODULE_6__.enrichGeofenceAircraft)(adaptedAircraft);\n            // Save the FULL set to local state\n            setGeofenceAircraft(enrichedAircraft);\n            setIsGeofenceActive(true);\n            // Clear existing aircraft data\n            if (clearGeofenceData) {\n                clearGeofenceData();\n            }\n            // If we're in combined mode and have a manufacturer, apply the combined filter\n            if (filterMode === 'both' && selectedManufacturer) {\n                // Make sure API calls remain blocked\n                _lib_services_openSkyTrackingService__WEBPACK_IMPORTED_MODULE_3__[\"default\"].setBlockAllApiCalls(true);\n                setBlockManufacturerApiCalls(true);\n                setTimeout(()=>{\n                    applyCombinedFilters();\n                }, 100);\n            } else {\n                // Just show all aircraft in the geofence\n                updateGeofenceAircraft(enrichedAircraft);\n                // Center the map - SIMPLIFIED ZOOM LOGIC\n                if (mapInstance && coordinates) {\n                    // Get current zoom level\n                    const currentZoom = mapInstance.getZoom();\n                    // Use appropriate zoom level based on current view\n                    const targetZoom = currentZoom <= 7 ? 9 : currentZoom;\n                    // Set view to the coordinates\n                    mapInstance.setView([\n                        coordinates.lat,\n                        coordinates.lng\n                    ], targetZoom);\n                    // Ensure map is updated\n                    mapInstance.invalidateSize();\n                }\n            }\n            // Close dropdown after search\n            if (!fromPanel) {\n                setActiveDropdown(null);\n            }\n        } catch (error) {\n            console.error('Error in geofence search:', error);\n            if (error.message?.includes('rate limit') || error.status === 429) {\n                handleRateLimit(30);\n            } else {\n                alert(`Error: ${error instanceof Error ? error.message : 'Unknown error occurred'}`);\n            }\n        } finally{\n            setLocalLoading(false);\n        }\n    };\n    /**\r\n   * STEP 3: Fix toggleGeofenceState to better handle manually clicking the button\r\n   */ const toggleGeofenceState = (enabled)=>{\n        console.log('toggleGeofenceState called with:', enabled);\n        console.log('Current geofenceCoordinates:', geofenceCoordinates);\n        if (enabled) {\n            // Check if we have valid coordinates\n            if (geofenceCoordinates && typeof geofenceCoordinates.lat === 'number' && typeof geofenceCoordinates.lng === 'number' && !isNaN(geofenceCoordinates.lat) && !isNaN(geofenceCoordinates.lng)) {\n                console.log('Valid coordinates found, enabling geofence');\n                // Set flags first\n                setGeofenceEnabled(true);\n                setIsGeofenceActive(true);\n                // Call context toggle function if available\n                if (typeof toggleGeofence === 'function') {\n                    toggleGeofence();\n                }\n                // Display aircraft if we have them\n                if (geofenceAircraft && geofenceAircraft.length > 0) {\n                    console.log(`Showing ${geofenceAircraft.length} aircraft in geofence`);\n                    updateGeofenceAircraft(geofenceAircraft);\n                } else {\n                    // No aircraft data yet, trigger a search\n                    console.log('No aircraft data yet, triggering search');\n                    setTimeout(()=>{\n                        processGeofenceSearch();\n                    }, 100);\n                }\n            } else {\n                // No valid coordinates\n                console.warn('No valid coordinates, showing alert');\n                alert('Please set a location before enabling geofence.\\n\\nClick anywhere on the map to set a location.');\n                setGeofenceEnabled(false);\n                setIsGeofenceActive(false);\n            }\n        } else {\n            // Disabling geofence\n            console.log('Disabling geofence');\n            setGeofenceEnabled(false);\n            setIsGeofenceActive(false);\n            // Clear geofence data if function available\n            if (typeof clearGeofenceData === 'function') {\n                clearGeofenceData();\n            }\n        }\n    };\n    // Effects\n    react__WEBPACK_IMPORTED_MODULE_0___default().useEffect({\n        \"useFilterLogic.useEffect\": ()=>{\n            if (geofenceCoordinates) {\n                setIsSearchReady(true);\n            }\n        }\n    }[\"useFilterLogic.useEffect\"], [\n        geofenceCoordinates\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useFilterLogic.useEffect\": ()=>{\n            if (isRateLimited && rateLimitTimer) {\n                const timer = setTimeout({\n                    \"useFilterLogic.useEffect.timer\": ()=>{\n                        setIsRateLimited(false);\n                        setRateLimitTimer(null);\n                        console.log('Rate limit timer expired, resuming API calls');\n                    }\n                }[\"useFilterLogic.useEffect.timer\"], rateLimitTimer * 1000);\n                return ({\n                    \"useFilterLogic.useEffect\": ()=>clearTimeout(timer)\n                })[\"useFilterLogic.useEffect\"];\n            }\n        }\n    }[\"useFilterLogic.useEffect\"], [\n        isRateLimited,\n        rateLimitTimer\n    ]);\n    // Effect to sync geofence state\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useFilterLogic.useEffect\": ()=>{\n            // Update internal state when geofence is toggled externally\n            if (isGeofenceActive !== geofenceEnabled) {\n                setGeofenceEnabled(isGeofenceActive);\n            }\n        }\n    }[\"useFilterLogic.useEffect\"], [\n        isGeofenceActive\n    ]);\n    // Close dropdown when clicking outside\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useFilterLogic.useEffect\": ()=>{\n            const handleClickOutside = {\n                \"useFilterLogic.useEffect.handleClickOutside\": (event)=>{\n                    // Check if click is outside of all dropdowns\n                    const isOutsideAll = Object.values(dropdownRefs).every({\n                        \"useFilterLogic.useEffect.handleClickOutside.isOutsideAll\": (ref)=>!ref.current || !ref.current.contains(event.target)\n                    }[\"useFilterLogic.useEffect.handleClickOutside.isOutsideAll\"]);\n                    if (isOutsideAll) {\n                        setActiveDropdown(null);\n                    }\n                }\n            }[\"useFilterLogic.useEffect.handleClickOutside\"];\n            document.addEventListener('mousedown', handleClickOutside);\n            return ({\n                \"useFilterLogic.useEffect\": ()=>{\n                    document.removeEventListener('mousedown', handleClickOutside);\n                }\n            })[\"useFilterLogic.useEffect\"];\n        }\n    }[\"useFilterLogic.useEffect\"], []);\n    // Clean up region outline when component unmounts\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useFilterLogic.useEffect\": ()=>{\n            return ({\n                \"useFilterLogic.useEffect\": ()=>{\n                    if (regionOutline) {\n                        regionOutline.remove();\n                    }\n                }\n            })[\"useFilterLogic.useEffect\"];\n        }\n    }[\"useFilterLogic.useEffect\"], [\n        regionOutline\n    ]);\n    // Effect to handle map click for geofence\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useFilterLogic.useEffect\": ()=>{\n            const handleMapGeofenceClick = {\n                \"useFilterLogic.useEffect.handleMapGeofenceClick\": async (event)=>{\n                    try {\n                        // Cast the event to the proper type\n                        const customEvent = event;\n                        const { lat, lng } = customEvent.detail;\n                        // First update coordinates immediately\n                        setGeofenceCoordinates({\n                            lat,\n                            lng\n                        });\n                        // Then start an async operation to get the location name\n                        console.log(`Getting location name for: ${lat}, ${lng}`);\n                        // Temporarily show coordinates while fetching the name\n                        setGeofenceLocation(`${lat.toFixed(6)}, ${lng.toFixed(6)}`);\n                        // Get the friendly name asynchronously\n                        const locationName = await _lib_services_MapboxService__WEBPACK_IMPORTED_MODULE_4__.MapboxService.getLocationNameFromCoordinates(lat, lng);\n                        console.log(`Got location name: ${locationName}`);\n                        // Update with the friendly name once we have it\n                        if (locationName !== null) {\n                            setGeofenceLocation(locationName);\n                        }\n                        // Open the location dropdown if needed\n                        if (activeDropdown !== 'location') {\n                            setActiveDropdown('location');\n                        }\n                    } catch (error) {\n                        console.error('Error handling map click:', error);\n                    // Keep the coordinates display if there was an error\n                    }\n                }\n            }[\"useFilterLogic.useEffect.handleMapGeofenceClick\"];\n            // Add the event listener - use the standard event listener pattern\n            document.addEventListener('map-geofence-click', handleMapGeofenceClick);\n            // Clean up\n            return ({\n                \"useFilterLogic.useEffect\": ()=>{\n                    document.removeEventListener('map-geofence-click', handleMapGeofenceClick);\n                }\n            })[\"useFilterLogic.useEffect\"];\n        }\n    }[\"useFilterLogic.useEffect\"], [\n        setGeofenceLocation,\n        setGeofenceCoordinates,\n        setActiveDropdown,\n        activeDropdown\n    ]);\n    // Main methods\n    const toggleDropdown = (dropdown, event)=>{\n        if (activeDropdown === dropdown) {\n            setActiveDropdown(null);\n        } else {\n            setActiveDropdown(dropdown);\n        }\n        // Prevent events from bubbling up\n        event.stopPropagation();\n    };\n    const handleRateLimit = (retryAfter = 30)=>{\n        setIsRateLimited(true);\n        setRateLimitTimer(retryAfter);\n        console.log(`Rate limited by API. Retry after ${retryAfter}s`);\n        // Block all API calls\n        _lib_services_openSkyTrackingService__WEBPACK_IMPORTED_MODULE_3__[\"default\"].setBlockAllApiCalls(true);\n        setBlockManufacturerApiCalls(true);\n        // Show notification to user\n        if (retryAfter > 0) {\n            alert(`Aircraft data refresh rate limited. Please wait ${retryAfter} seconds before trying again.`);\n        }\n    };\n    /**\r\n   * Toggle filter mode\r\n   */ const toggleFilterMode = (mode)=>{\n        setFilterMode(mode);\n        setActiveDropdown(null);\n        // Apply appropriate filters based on new mode\n        if (mode === 'region') {\n            // Block API calls in region mode\n            _lib_services_openSkyTrackingService__WEBPACK_IMPORTED_MODULE_3__[\"default\"].setBlockAllApiCalls(true);\n            // Apply region filtering if we already have data\n            if (displayedAircraft && displayedAircraft.length > 0) {\n                filterAircraftByRegion(selectedRegion.toString());\n            }\n            // Clear manufacturer selection from the UI\n            selectManufacturer(null);\n            selectModel(null);\n            // If geofence is active, restore the full geofence data\n            if (geofenceCoordinates && geofenceAircraft.length > 0) {\n                updateGeofenceAircraft(geofenceAircraft);\n            }\n        } else if (mode === 'owner') {\n            // Filter displayed aircraft by owner type\n            if (displayedAircraft && displayedAircraft.length > 0) {\n                // First filter for valid coordinates\n                const aircraftWithValidCoords = displayedAircraft.filter((plane)=>typeof plane.latitude === 'number' && typeof plane.longitude === 'number' && !isNaN(plane.latitude) && !isNaN(plane.longitude));\n                // Apply owner type filter\n                let filteredByOwner = ownerFilters.length === 0 ? aircraftWithValidCoords : aircraftWithValidCoords.filter((aircraft)=>ownerFilters.includes(getAircraftOwnerType(aircraft)));\n                // Update display with filtered aircraft\n                if (clearGeofenceData) {\n                    clearGeofenceData();\n                }\n                updateGeofenceAircraft(filteredByOwner);\n            }\n        } else if (mode === 'both') {\n            // Both mode - BLOCK API CALLS\n            _lib_services_openSkyTrackingService__WEBPACK_IMPORTED_MODULE_3__[\"default\"].setBlockAllApiCalls(true);\n            if (selectedManufacturer && isGeofenceActive && geofenceAircraft.length > 0) {\n                applyCombinedFilters();\n            } else {\n                // If one is missing, prompt the user\n                if (!selectedManufacturer && isGeofenceActive) {\n                    alert('Please select a manufacturer to use combined filter mode');\n                } else if (selectedManufacturer && !isGeofenceActive) {\n                    alert('Please set a location to use combined filter mode');\n                } else {\n                    alert('Please select both a manufacturer and location to use combined filter mode');\n                }\n            }\n        }\n    };\n    // Owner filter methods\n    const getAircraftOwnerType = (aircraft)=>{\n        const ownerType = aircraft.TYPE_REGISTRANT || 0;\n        return ownerTypeToString(ownerType);\n    };\n    const ownerTypeToString = (type)=>{\n        const typeNum = typeof type === 'string' ? parseInt(type, 10) : type;\n        const ownerTypeMap = {\n            1: 'individual',\n            2: 'partnership',\n            3: 'corp-owner',\n            4: 'co-owned',\n            7: 'llc',\n            8: 'non-citizen-corp',\n            9: 'airline',\n            10: 'freight',\n            11: 'medical',\n            12: 'media',\n            13: 'historical',\n            14: 'flying-club',\n            15: 'emergency',\n            16: 'local-govt',\n            17: 'education',\n            18: 'federal-govt',\n            19: 'flight-school',\n            20: 'leasing-corp',\n            21: 'military'\n        };\n        return ownerTypeMap[typeNum] || 'unknown';\n    };\n    const applyOwnerTypeFilter = (filters)=>{\n        // Skip filtering if all types are selected or none are selected\n        if (filters.length === 0 || filters.length === allOwnerTypes.length) {\n            return;\n        }\n        // Filter the aircraft based on selected owner types\n        if (displayedAircraft && displayedAircraft.length > 0) {\n            const filteredAircraft = displayedAircraft.filter((aircraft)=>{\n                const ownerType = getAircraftOwnerType(aircraft);\n                return filters.includes(ownerType);\n            });\n            // Update the displayed aircraft\n            if (clearGeofenceData) {\n                clearGeofenceData();\n            }\n            updateGeofenceAircraft(filteredAircraft);\n        }\n    };\n    const handleOwnerFilterChange = (updatedFilters)=>{\n        setOwnerFilters(updatedFilters);\n        // Apply the filter to your aircraft data\n        applyOwnerTypeFilter(updatedFilters);\n    };\n    const resetOwnerFilters = ()=>{\n        setOwnerFilters([\n            ...allOwnerTypes\n        ]);\n    };\n    // Region filter methods\n    const filterAircraftByRegion = (region)=>{\n        if (!displayedAircraft || displayedAircraft.length === 0) return;\n        setLocalLoading(true);\n        try {\n            // Get the bounds for the selected region\n            const boundsExpression = (0,_config_map__WEBPACK_IMPORTED_MODULE_10__.getBoundsByRegion)(region);\n            // Ensure bounds is in the correct format\n            if (!Array.isArray(boundsExpression) || boundsExpression.length !== 2) {\n                console.error(`Invalid bounds format for region: ${region}`, boundsExpression);\n                setLocalLoading(false);\n                return;\n            }\n            // Extract coordinates - Leaflet uses [lat, lng] format\n            const [[minLat, minLng], [maxLat, maxLng]] = boundsExpression;\n            console.log(`Filtering by region: ${region} with bounds:`, {\n                minLat,\n                minLng,\n                maxLat,\n                maxLng\n            });\n            // Filter aircraft based on coordinates within the bounds\n            const filteredAircraft = displayedAircraft.filter((aircraft)=>{\n                // Check if aircraft has valid coordinates\n                if (typeof aircraft.latitude !== 'number' || typeof aircraft.longitude !== 'number' || isNaN(aircraft.latitude) || isNaN(aircraft.longitude)) {\n                    return false;\n                }\n                // Check if coordinates are within the bounds\n                return aircraft.latitude >= minLat && aircraft.latitude <= maxLat && aircraft.longitude >= minLng && aircraft.longitude <= maxLng;\n            });\n            // Update the display with filtered aircraft\n            if (clearGeofenceData) {\n                clearGeofenceData();\n            }\n            updateGeofenceAircraft(filteredAircraft);\n            console.log(`Filtered to ${filteredAircraft.length} aircraft in ${region} region (out of ${displayedAircraft.length} total)`);\n        } catch (error) {\n            console.error('Error filtering aircraft by region:', error);\n        } finally{\n            setLocalLoading(false);\n        }\n    };\n    const handleRegionSelect = async (region)=>{\n        setActiveRegion(region);\n        setSelectedRegion(region);\n        setLocalLoading(true);\n        try {\n            // Set map bounds based on region\n            if (mapInstance) {\n                const bounds = (0,_config_map__WEBPACK_IMPORTED_MODULE_10__.getBoundsByRegion)(region);\n                // Get the appropriate zoom level for this region from your config\n                const zoomLevel = (0,_config_map__WEBPACK_IMPORTED_MODULE_10__.getZoomLevelForRegion)(region);\n                // First, set the appropriate zoom level\n                mapInstance.setZoom(zoomLevel);\n                // Then fit bounds with padding\n                const options = {\n                    padding: _config_map__WEBPACK_IMPORTED_MODULE_10__.MAP_CONFIG.PADDING.DEFAULT\n                };\n                mapInstance.fitBounds(bounds, options);\n                mapInstance.invalidateSize();\n                drawRegionOutline(region);\n            }\n            // Instead of immediately fetching aircraft data,\n            // just store the region selection for later use\n            console.log(`Region selected. Waiting for manufacturer selection...`);\n            // Optionally, you could fetch just the count of aircraft in this region\n            // to give the user an idea of the data volume\n            const countResponse = await fetch(`/api/tracking/region-count?region=${region}`);\n            if (countResponse.ok) {\n                const countData = await countResponse.json();\n                console.log(`${countData.count} aircraft available in this region`);\n            }\n            // Clear any previous aircraft data\n            if (clearGeofenceData) {\n                clearGeofenceData();\n            }\n        } catch (error) {\n            console.error('Error in region selection:', error);\n        } finally{\n            setLocalLoading(false);\n            setActiveDropdown(null);\n        }\n    };\n    const drawRegionOutline = (region)=>{\n        if (!mapInstance) return;\n        // Clear any existing outline\n        if (regionOutline) {\n            regionOutline.remove();\n        }\n        // Get the bounds for the selected region\n        const bounds = (0,_config_map__WEBPACK_IMPORTED_MODULE_10__.getBoundsByRegion)(region);\n        // Create a polygon from the bounds\n        const L = __webpack_require__(/*! leaflet */ \"leaflet\");\n        const rectangle = L.rectangle(bounds, {\n            color: '#4f46e5',\n            weight: 3,\n            opacity: 0.7,\n            fill: true,\n            fillColor: '#4f46e5',\n            fillOpacity: 0.1,\n            dashArray: '5, 10',\n            interactive: false\n        });\n        // Add to map\n        rectangle.addTo(mapInstance);\n        // Update the state to include both the rectangle and the label\n        setRegionOutline({\n            remove: ()=>{\n                rectangle.remove();\n            }\n        });\n    };\n    // Manufacturer filter methods\n    const selectManufacturerAndClose = (value)=>{\n        // Close dropdown\n        setActiveDropdown(null);\n        setManufacturerSearchTerm('');\n        // If clearing the selection\n        if (value === '') {\n            selectManufacturer(null);\n            return;\n        }\n        // Set the manufacturer selection\n        selectManufacturer(value);\n        // If region is already selected, fetch filtered data\n        if (activeRegion !== null) {\n            fetchAircraftByRegionAndManufacturer(activeRegion, value);\n        } else {\n            // Otherwise, just proceed with manufacturer-only filtering as before\n            fetchManufacturerData(value);\n        }\n    };\n    const fetchManufacturerData = (manufacturer)=>{\n        if (isRateLimited) {\n            console.log(`Skipping data fetch - rate limited for ${rateLimitTimer}s`);\n            return;\n        }\n        console.log(`Fetching data for manufacturer: ${manufacturer}`);\n        try {\n            // If you have a context function for this, call it after a slight delay\n            if (typeof refreshPositions === 'function') {\n                // Apply a small delay to prevent overwhelming the API\n                setTimeout(()=>{\n                    refreshPositions().catch((error)=>{\n                        if (error.message?.includes('rate limit') || error.status === 429) {\n                            handleRateLimit(30);\n                        } else {\n                            console.error('Error fetching manufacturer data:', error);\n                        }\n                    });\n                }, 200);\n            }\n        } catch (error) {\n            if (error.message?.includes('rate limit') || error.status === 429) {\n                handleRateLimit(30);\n            } else {\n                console.error('Error scheduling manufacturer data fetch:', error);\n            }\n        }\n    };\n    const fetchAircraftByRegionAndManufacturer = async (region, manufacturer, page = 1, limit = 500)=>{\n        if (!region || !manufacturer) {\n            console.log('Both region and manufacturer must be selected');\n            return;\n        }\n        setLocalLoading(true);\n        try {\n            const response = await fetch(`/api/tracking/filtered-aircraft?region=${region}&manufacturer=${encodeURIComponent(manufacturer)}&page=${page}&limit=${limit}`);\n            const data = await response.json();\n            const aircraftData = data.aircraft || [];\n            if (!response.ok) {\n                throw new Error(`API error: ${response.statusText}`);\n            }\n            // Process the filtered aircraft data\n            if (aircraftData.length > 0) {\n                const extendedAircraft = aircraftData.map((aircraft)=>({\n                        ...aircraft,\n                        type: aircraft.TYPE_AIRCRAFT || 'Unknown',\n                        isGovernment: aircraft.OPERATOR?.toLowerCase().includes('government') ?? false,\n                        REGION: aircraft.REGION,\n                        zoomLevel: undefined\n                    }));\n                // Update the map\n                updateGeofenceAircraft(extendedAircraft);\n            } else {\n                console.log(`No aircraft found for manufacturer ${manufacturer} in region ${region}`);\n            }\n        } catch (error) {\n            console.error('Error fetching filtered aircraft:', error);\n        } finally{\n            setLocalLoading(false);\n        }\n    };\n    // Model selection methods\n    const handleModelSelect = (value)=>{\n        selectModel(value === '' ? null : value);\n        setActiveDropdown(null);\n        // If in combined mode, reapply the filter\n        if (filterMode === 'both' && isGeofenceActive && selectedManufacturer) {\n            setTimeout(()=>{\n                applyCombinedFilters();\n            }, 100);\n        }\n    };\n    // Combined filter methods\n    const applyCombinedFilters = ()=>{\n        if (!selectedManufacturer || !isGeofenceActive || geofenceAircraft.length === 0) {\n            return;\n        }\n        setLocalLoading(true);\n        try {\n            console.log(`Filtering ${geofenceAircraft.length} aircraft by ${selectedManufacturer}`);\n            // Filter the aircraft by manufacturer\n            let filteredAircraft = geofenceAircraft.filter((aircraft)=>aircraft.MANUFACTURER?.toLowerCase() === selectedManufacturer.toLowerCase());\n            // Further filter by model if selected\n            if (selectedModel) {\n                filteredAircraft = filteredAircraft.filter((aircraft)=>aircraft.MODEL?.toLowerCase() === selectedModel.toLowerCase());\n            }\n            console.log(`Found ${filteredAircraft.length} matching aircraft`);\n            if (filteredAircraft.length === 0) {\n                alert(`No ${selectedManufacturer} aircraft found in this area.`);\n                return;\n            }\n            // Clear display data\n            if (clearGeofenceData) {\n                clearGeofenceData();\n            }\n            // Update the display\n            updateGeofenceAircraft(filteredAircraft);\n        } catch (error) {\n            console.error('Error filtering aircraft:', error);\n        } finally{\n            setLocalLoading(false);\n        }\n    };\n    // Reset all filters\n    const clearAllFilters = ()=>{\n        console.log('Clearing all filters...');\n        // 1. Reset filter mode\n        setFilterMode('manufacturer');\n        // 2. Unblock API calls that might have been blocked\n        _lib_services_openSkyTrackingService__WEBPACK_IMPORTED_MODULE_3__[\"default\"].setBlockAllApiCalls(false);\n        setBlockManufacturerApiCalls(false);\n        setIsManufacturerApiBlocked(false);\n        // 3. Clear manufacturer selection\n        selectManufacturer(null);\n        selectModel(null);\n        // 4. Clear geofence\n        setGeofenceLocation('');\n        setGeofenceCoordinates(null);\n        setGeofenceAircraft([]);\n        setGeofenceEnabled(false);\n        setIsGeofenceActive(false);\n        if (typeof clearGeofence === 'function') {\n            clearGeofence();\n        }\n        if (typeof clearGeofenceData === 'function') {\n            clearGeofenceData();\n        }\n        // 5. Reset owner filters to select all\n        setOwnerFilters([\n            ...allOwnerTypes\n        ]);\n        // 6. Clear region filter properly\n        setActiveRegion(null);\n        setSelectedRegion(_types_base__WEBPACK_IMPORTED_MODULE_1__.RegionCode.GLOBAL);\n        // Clear region outline from map\n        if (regionOutline) {\n            try {\n                // Handle different possible object structures\n                if (typeof regionOutline.remove === 'function') {\n                    regionOutline.remove();\n                } else if (regionOutline.rectangle && typeof regionOutline.rectangle.remove === 'function') {\n                    regionOutline.rectangle.remove();\n                }\n                // Clear any labels associated with the region\n                if (regionOutline.label && typeof regionOutline.label.remove === 'function') {\n                    regionOutline.label.remove();\n                }\n            } catch (error) {\n                console.error('Error removing region outline:', error);\n            }\n            // Always reset the region outline state\n            setRegionOutline(null);\n        }\n        // 7. Reset map view to global\n        if (mapInstance) {\n            // Use the predefined center and zoom level from your map config\n            mapInstance.setView(_config_map__WEBPACK_IMPORTED_MODULE_10__.MAP_CONFIG.CENTER, _config_map__WEBPACK_IMPORTED_MODULE_10__.MAP_CONFIG.DEFAULT_ZOOM);\n            mapInstance.invalidateSize();\n        }\n        // 8. Reset to initial aircraft data\n        if (typeof reset === 'function') {\n            reset();\n        } else if (typeof fullRefresh === 'function') {\n            fullRefresh();\n        }\n        // 9. Close any open dropdown\n        setActiveDropdown(null);\n        // 10. Reset rate limiting states\n        setIsRateLimited(false);\n        setRateLimitTimer(null);\n        // 11. Clear combined mode state\n        setCombinedModeReady(false);\n        // 12. Reset search terms\n        setManufacturerSearchTerm('');\n        // 13. Dispatch a custom event that other components can listen for\n        const clearEvent = new CustomEvent('ribbon-filters-cleared');\n        document.dispatchEvent(clearEvent);\n        console.log('All filters cleared successfully');\n    };\n    // Calculate combined loading state\n    const combinedLoading = localLoading;\n    return {\n        // State\n        filterMode,\n        activeDropdown,\n        selectedManufacturer,\n        selectedModel,\n        geofenceLocation,\n        geofenceRadius,\n        isGeofenceActive,\n        geofenceCoordinates,\n        getUserLocation,\n        activeRegion,\n        ownerFilters,\n        allOwnerTypes,\n        manufacturerSearchTerm,\n        combinedLoading,\n        isGettingLocation,\n        dropdownRefs,\n        localLoading,\n        isRateLimited,\n        selectedRegion,\n        isRefreshing,\n        isGeofencePlacementMode: false,\n        // Methods\n        toggleDropdown,\n        toggleFilterMode,\n        selectManufacturerAndClose,\n        handleModelSelect,\n        processGeofenceSearch,\n        handleOwnerFilterChange,\n        handleRegionSelect,\n        setManufacturerSearchTerm,\n        setGeofenceLocation,\n        setGeofenceRadius,\n        toggleGeofenceState,\n        clearAllFilters,\n        applyCombinedFilters,\n        getAircraftOwnerType,\n        setGeofenceCoordinates,\n        setGeofenceCenter,\n        setIsGettingLocation,\n        updateGeofenceAircraft,\n        refreshWithFilters: ()=>{\n            // Implement refresh logic here\n            if (typeof refreshPositions === 'function') {\n                refreshPositions().catch((error)=>{\n                    console.error('Error refreshing positions:', error);\n                });\n            }\n        },\n        setActiveDropdown\n    };\n}\nfunction applyCombinedFilters() {\n    throw new Error('Function not implemented.');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/tracking/hooks/useFilterLogic.ts\n");

/***/ }),

/***/ "(pages-dir-node)/./components/tracking/hooks/useGeofencePanel.ts":
/*!*******************************************************!*\
  !*** ./components/tracking/hooks/useGeofencePanel.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useGeofencePanel: () => (/* binding */ useGeofencePanel)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_services_MapboxService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../lib/services/MapboxService */ \"(pages-dir-node)/./lib/services/MapboxService.ts\");\n/* harmony import */ var _lib_services_geofencing__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../lib/services/geofencing */ \"(pages-dir-node)/./lib/services/geofencing.ts\");\n// hooks/useGeofencePanel.ts\n\n\n\nfunction useGeofencePanel(options) {\n    const { geofenceRadius, setGeofenceLocation, setGeofenceCoordinates, setGeofenceCenter, processGeofenceSearch, updateGeofenceAircraft, isGeofenceActive, toggleGeofenceState, setActiveDropdown, mapInstance } = options;\n    // Panel UI state\n    const [panelPosition, setPanelPosition] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        x: window.innerWidth - 340,\n        y: 100\n    });\n    const [showPanel, setShowPanel] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [tempCoordinates, setTempCoordinates] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [isSearching, setIsSearching] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [locationName, setLocationName] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [isLoadingLocation, setIsLoadingLocation] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    // Default position for the panel - right side of screen\n    // Panel control methods\n    const openPanel = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useGeofencePanel.useCallback[openPanel]\": ()=>{\n            // Calculate position on right side of screen with some margin\n            const rightPosition = window.innerWidth - 340; // 300px width + 40px margin\n            const topPosition = 100; // 100px from top\n            // Update panel position\n            setPanelPosition({\n                x: rightPosition,\n                y: topPosition\n            });\n            // Show the panel\n            setShowPanel(true);\n            // Close dropdown\n            options.setActiveDropdown(null);\n            // Dispatch event for map mode\n            const event = new CustomEvent('enable-geofence-placement', {\n                detail: {\n                    active: true\n                }\n            });\n            document.dispatchEvent(event);\n        }\n    }[\"useGeofencePanel.useCallback[openPanel]\"], [\n        options.setActiveDropdown\n    ]);\n    const closePanel = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useGeofencePanel.useCallback[closePanel]\": ()=>{\n            setShowPanel(false);\n            setTempCoordinates(null);\n            setLocationName(null);\n            // Dispatch event to notify map that we're exiting geofence placement mode\n            const event = new CustomEvent('enable-geofence-placement', {\n                detail: {\n                    active: false\n                }\n            });\n            document.dispatchEvent(event);\n        }\n    }[\"useGeofencePanel.useCallback[closePanel]\"], []);\n    const resetPanel = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useGeofencePanel.useCallback[resetPanel]\": ()=>{\n            setTempCoordinates(null);\n            setLocationName(null);\n        }\n    }[\"useGeofencePanel.useCallback[resetPanel]\"], []);\n    // Make sure any panel action keeps the dropdown closed\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useGeofencePanel.useEffect\": ()=>{\n            if (showPanel) {\n                // Keep dropdown closed while panel is open\n                options.setActiveDropdown(null);\n            }\n        }\n    }[\"useGeofencePanel.useEffect\"], [\n        showPanel,\n        options.setActiveDropdown\n    ]);\n    // Fetch location name whenever coordinates change\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useGeofencePanel.useEffect\": ()=>{\n            if (!tempCoordinates) return;\n            setIsLoadingLocation(true);\n            _lib_services_MapboxService__WEBPACK_IMPORTED_MODULE_1__.MapboxService.getLocationNameFromCoordinates(tempCoordinates.lat, tempCoordinates.lng).then({\n                \"useGeofencePanel.useEffect\": (name)=>{\n                    setLocationName(name);\n                }\n            }[\"useGeofencePanel.useEffect\"]).catch({\n                \"useGeofencePanel.useEffect\": (error)=>{\n                    console.error('Error fetching location name:', error);\n                }\n            }[\"useGeofencePanel.useEffect\"]).finally({\n                \"useGeofencePanel.useEffect\": ()=>{\n                    setIsLoadingLocation(false);\n                }\n            }[\"useGeofencePanel.useEffect\"]);\n        }\n    }[\"useGeofencePanel.useEffect\"], [\n        tempCoordinates\n    ]);\n    // Handle search from panel\n    const handlePanelSearch = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useGeofencePanel.useCallback[handlePanelSearch]\": async (lat, lng)=>{\n            if (!lat || !lng || isSearching) return;\n            setIsSearching(true);\n            try {\n                // Get location name\n                const locationName = await _lib_services_MapboxService__WEBPACK_IMPORTED_MODULE_1__.MapboxService.getLocationNameFromCoordinates(lat, lng);\n                // Set location in filter logic\n                if (locationName) {\n                    setGeofenceLocation(locationName);\n                } else {\n                    // Fallback to coordinates if no name found\n                    setGeofenceLocation(`${lat.toFixed(4)}, ${lng.toFixed(4)}`);\n                }\n                // Update coordinates\n                setGeofenceCoordinates({\n                    lat,\n                    lng\n                });\n                setGeofenceCenter({\n                    lat,\n                    lng\n                });\n                // Get aircraft data near this location\n                const fetchedAircraft = await (0,_lib_services_geofencing__WEBPACK_IMPORTED_MODULE_2__.getAircraftNearLocation)(lat, lng, geofenceRadius || 25);\n                if (fetchedAircraft.length > 0) {\n                    // Update aircraft data\n                    updateGeofenceAircraft(fetchedAircraft);\n                    // Activate geofence if not already active\n                    if (!isGeofenceActive) {\n                        toggleGeofenceState(true);\n                    }\n                } else {\n                    console.log('No aircraft found near clicked location');\n                }\n                // Center the map on this location\n                if (mapInstance && typeof mapInstance.setView === 'function') {\n                    // Get current zoom level\n                    const currentZoom = mapInstance.getZoom();\n                    // Use appropriate zoom level based on current view\n                    const targetZoom = currentZoom <= 7 ? 9 : currentZoom;\n                    // Set view to the coordinates\n                    mapInstance.setView([\n                        lat,\n                        lng\n                    ], targetZoom);\n                    mapInstance.invalidateSize();\n                }\n            } catch (error) {\n                console.error('Error searching from panel:', error);\n            } finally{\n                setIsSearching(false);\n                // IMPORTANT: Explicitly force the panel to stay open\n                setShowPanel(true);\n            }\n        }\n    }[\"useGeofencePanel.useCallback[handlePanelSearch]\"], [\n        isSearching,\n        geofenceRadius,\n        setGeofenceLocation,\n        setGeofenceCoordinates,\n        setGeofenceCenter,\n        updateGeofenceAircraft,\n        isGeofenceActive,\n        toggleGeofenceState,\n        mapInstance\n    ]);\n    // Listen for map clicks when panel is open\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useGeofencePanel.useEffect\": ()=>{\n            if (!showPanel) return;\n            const handleMapClick = {\n                \"useGeofencePanel.useEffect.handleMapClick\": (e)=>{\n                    const { lat, lng } = e.detail;\n                    setTempCoordinates({\n                        lat,\n                        lng\n                    });\n                }\n            }[\"useGeofencePanel.useEffect.handleMapClick\"];\n            // Add event listener for map clicks\n            document.addEventListener('map-geofence-click', handleMapClick);\n            // Cleanup listener when component unmounts or panel closes\n            return ({\n                \"useGeofencePanel.useEffect\": ()=>{\n                    document.removeEventListener('map-geofence-click', handleMapClick);\n                }\n            })[\"useGeofencePanel.useEffect\"];\n        }\n    }[\"useGeofencePanel.useEffect\"], [\n        showPanel\n    ]);\n    // Listen for the clear all filters event\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useGeofencePanel.useEffect\": ()=>{\n            const handleClearAllFilters = {\n                \"useGeofencePanel.useEffect.handleClearAllFilters\": ()=>{\n                    // Close the floating panel when filters are cleared\n                    if (showPanel) {\n                        closePanel();\n                    }\n                }\n            }[\"useGeofencePanel.useEffect.handleClearAllFilters\"];\n            // Add event listener for the clear all filters event\n            document.addEventListener('ribbon-filters-cleared', handleClearAllFilters);\n            // Clean up\n            return ({\n                \"useGeofencePanel.useEffect\": ()=>{\n                    document.removeEventListener('ribbon-filters-cleared', handleClearAllFilters);\n                }\n            })[\"useGeofencePanel.useEffect\"];\n        }\n    }[\"useGeofencePanel.useEffect\"], [\n        showPanel,\n        closePanel\n    ]);\n    return {\n        showPanel,\n        tempCoordinates,\n        isSearching,\n        locationName,\n        isLoadingLocation,\n        setTempCoordinates,\n        setPanelPosition,\n        openPanel,\n        panelPosition,\n        closePanel,\n        resetPanel,\n        setShowPanel,\n        handlePanelSearch\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/tracking/hooks/useGeofencePanel.ts\n");

/***/ }),

/***/ "(pages-dir-node)/./components/tracking/hooks/useGeolocation.ts":
/*!*****************************************************!*\
  !*** ./components/tracking/hooks/useGeolocation.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useGeolocation: () => (/* binding */ useGeolocation)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_services_MapboxService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../lib/services/MapboxService */ \"(pages-dir-node)/./lib/services/MapboxService.ts\");\n// useGeofenceLocation.ts - Simplified hook that just tracks location name for coordinates\n\n\nfunction useGeolocation(coordinates) {\n    const [locationName, setLocationName] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [isLoadingLocation, setIsLoadingLocation] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const prevCoordinatesRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useGeolocation.useEffect\": ()=>{\n            // Skip if no coordinates\n            if (!coordinates) return;\n            // Skip if same coordinates and we already have data or are loading\n            const isSameCoordinates = prevCoordinatesRef.current?.lat === coordinates.lat && prevCoordinatesRef.current?.lng === coordinates.lng;\n            if (isSameCoordinates && (locationName || isLoadingLocation)) {\n                return;\n            }\n            // Update reference and start loading\n            prevCoordinatesRef.current = coordinates;\n            setIsLoadingLocation(true);\n            // Fetch location name\n            _lib_services_MapboxService__WEBPACK_IMPORTED_MODULE_1__.MapboxService.getLocationNameFromCoordinates(coordinates.lat, coordinates.lng).then({\n                \"useGeolocation.useEffect\": (name)=>{\n                    setLocationName(name);\n                }\n            }[\"useGeolocation.useEffect\"]).catch({\n                \"useGeolocation.useEffect\": (error)=>{\n                    console.error('Error fetching location name:', error);\n                }\n            }[\"useGeolocation.useEffect\"]).finally({\n                \"useGeolocation.useEffect\": ()=>{\n                    setIsLoadingLocation(false);\n                }\n            }[\"useGeolocation.useEffect\"]);\n        }\n    }[\"useGeolocation.useEffect\"], [\n        coordinates,\n        locationName,\n        isLoadingLocation\n    ]);\n    return {\n        locationName,\n        isLoadingLocation\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL2NvbXBvbmVudHMvdHJhY2tpbmcvaG9va3MvdXNlR2VvbG9jYXRpb24udHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLDBGQUEwRjtBQUN0QztBQUNnQjtBQU83RCxTQUFTSSxlQUFlQyxXQUErQjtJQUM1RCxNQUFNLENBQUNDLGNBQWNDLGdCQUFnQixHQUFHUCwrQ0FBUUEsQ0FBZ0I7SUFDaEUsTUFBTSxDQUFDUSxtQkFBbUJDLHFCQUFxQixHQUFHVCwrQ0FBUUEsQ0FBQztJQUMzRCxNQUFNVSxxQkFBcUJSLDZDQUFNQSxDQUFxQjtJQUV0REQsZ0RBQVNBO29DQUFDO1lBQ1IseUJBQXlCO1lBQ3pCLElBQUksQ0FBQ0ksYUFBYTtZQUVsQixtRUFBbUU7WUFDbkUsTUFBTU0sb0JBQ0pELG1CQUFtQkUsT0FBTyxFQUFFQyxRQUFRUixZQUFZUSxHQUFHLElBQ25ESCxtQkFBbUJFLE9BQU8sRUFBRUUsUUFBUVQsWUFBWVMsR0FBRztZQUVyRCxJQUFJSCxxQkFBc0JMLENBQUFBLGdCQUFnQkUsaUJBQWdCLEdBQUk7Z0JBQzVEO1lBQ0Y7WUFFQSxxQ0FBcUM7WUFDckNFLG1CQUFtQkUsT0FBTyxHQUFHUDtZQUM3QkkscUJBQXFCO1lBRXJCLHNCQUFzQjtZQUN0Qk4sc0VBQWFBLENBQUNZLDhCQUE4QixDQUMxQ1YsWUFBWVEsR0FBRyxFQUNmUixZQUFZUyxHQUFHLEVBRWRFLElBQUk7NENBQUMsQ0FBQ0M7b0JBQ0xWLGdCQUFnQlU7Z0JBQ2xCOzJDQUNDQyxLQUFLOzRDQUFDLENBQUNDO29CQUNOQyxRQUFRRCxLQUFLLENBQUMsaUNBQWlDQTtnQkFDakQ7MkNBQ0NFLE9BQU87NENBQUM7b0JBQ1BaLHFCQUFxQjtnQkFDdkI7O1FBQ0o7bUNBQUc7UUFBQ0o7UUFBYUM7UUFBY0U7S0FBa0I7SUFFakQsT0FBTztRQUFFRjtRQUFjRTtJQUFrQjtBQUMzQyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxzYXRob1xcRG9jdW1lbnRzXFxQcm9qZWN0c1xcYWlyY3JhZnQtdHJhY2tpbmdcXGNvbXBvbmVudHNcXHRyYWNraW5nXFxob29rc1xcdXNlR2VvbG9jYXRpb24udHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gdXNlR2VvZmVuY2VMb2NhdGlvbi50cyAtIFNpbXBsaWZpZWQgaG9vayB0aGF0IGp1c3QgdHJhY2tzIGxvY2F0aW9uIG5hbWUgZm9yIGNvb3JkaW5hdGVzXHJcbmltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QsIHVzZVJlZiB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgTWFwYm94U2VydmljZSB9IGZyb20gJy4uLy4uLy4uL2xpYi9zZXJ2aWNlcy9NYXBib3hTZXJ2aWNlJztcclxuXHJcbmludGVyZmFjZSBDb29yZGluYXRlcyB7XHJcbiAgbGF0OiBudW1iZXI7XHJcbiAgbG5nOiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB1c2VHZW9sb2NhdGlvbihjb29yZGluYXRlczogQ29vcmRpbmF0ZXMgfCBudWxsKSB7XHJcbiAgY29uc3QgW2xvY2F0aW9uTmFtZSwgc2V0TG9jYXRpb25OYW1lXSA9IHVzZVN0YXRlPHN0cmluZyB8IG51bGw+KG51bGwpO1xyXG4gIGNvbnN0IFtpc0xvYWRpbmdMb2NhdGlvbiwgc2V0SXNMb2FkaW5nTG9jYXRpb25dID0gdXNlU3RhdGUoZmFsc2UpO1xyXG4gIGNvbnN0IHByZXZDb29yZGluYXRlc1JlZiA9IHVzZVJlZjxDb29yZGluYXRlcyB8IG51bGw+KG51bGwpO1xyXG5cclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgLy8gU2tpcCBpZiBubyBjb29yZGluYXRlc1xyXG4gICAgaWYgKCFjb29yZGluYXRlcykgcmV0dXJuO1xyXG5cclxuICAgIC8vIFNraXAgaWYgc2FtZSBjb29yZGluYXRlcyBhbmQgd2UgYWxyZWFkeSBoYXZlIGRhdGEgb3IgYXJlIGxvYWRpbmdcclxuICAgIGNvbnN0IGlzU2FtZUNvb3JkaW5hdGVzID1cclxuICAgICAgcHJldkNvb3JkaW5hdGVzUmVmLmN1cnJlbnQ/LmxhdCA9PT0gY29vcmRpbmF0ZXMubGF0ICYmXHJcbiAgICAgIHByZXZDb29yZGluYXRlc1JlZi5jdXJyZW50Py5sbmcgPT09IGNvb3JkaW5hdGVzLmxuZztcclxuXHJcbiAgICBpZiAoaXNTYW1lQ29vcmRpbmF0ZXMgJiYgKGxvY2F0aW9uTmFtZSB8fCBpc0xvYWRpbmdMb2NhdGlvbikpIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFVwZGF0ZSByZWZlcmVuY2UgYW5kIHN0YXJ0IGxvYWRpbmdcclxuICAgIHByZXZDb29yZGluYXRlc1JlZi5jdXJyZW50ID0gY29vcmRpbmF0ZXM7XHJcbiAgICBzZXRJc0xvYWRpbmdMb2NhdGlvbih0cnVlKTtcclxuXHJcbiAgICAvLyBGZXRjaCBsb2NhdGlvbiBuYW1lXHJcbiAgICBNYXBib3hTZXJ2aWNlLmdldExvY2F0aW9uTmFtZUZyb21Db29yZGluYXRlcyhcclxuICAgICAgY29vcmRpbmF0ZXMubGF0LFxyXG4gICAgICBjb29yZGluYXRlcy5sbmdcclxuICAgIClcclxuICAgICAgLnRoZW4oKG5hbWUpID0+IHtcclxuICAgICAgICBzZXRMb2NhdGlvbk5hbWUobmFtZSk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyBsb2NhdGlvbiBuYW1lOicsIGVycm9yKTtcclxuICAgICAgfSlcclxuICAgICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICAgIHNldElzTG9hZGluZ0xvY2F0aW9uKGZhbHNlKTtcclxuICAgICAgfSk7XHJcbiAgfSwgW2Nvb3JkaW5hdGVzLCBsb2NhdGlvbk5hbWUsIGlzTG9hZGluZ0xvY2F0aW9uXSk7XHJcblxyXG4gIHJldHVybiB7IGxvY2F0aW9uTmFtZSwgaXNMb2FkaW5nTG9jYXRpb24gfTtcclxufVxyXG4iXSwibmFtZXMiOlsidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJ1c2VSZWYiLCJNYXBib3hTZXJ2aWNlIiwidXNlR2VvbG9jYXRpb24iLCJjb29yZGluYXRlcyIsImxvY2F0aW9uTmFtZSIsInNldExvY2F0aW9uTmFtZSIsImlzTG9hZGluZ0xvY2F0aW9uIiwic2V0SXNMb2FkaW5nTG9jYXRpb24iLCJwcmV2Q29vcmRpbmF0ZXNSZWYiLCJpc1NhbWVDb29yZGluYXRlcyIsImN1cnJlbnQiLCJsYXQiLCJsbmciLCJnZXRMb2NhdGlvbk5hbWVGcm9tQ29vcmRpbmF0ZXMiLCJ0aGVuIiwibmFtZSIsImNhdGNoIiwiZXJyb3IiLCJjb25zb2xlIiwiZmluYWxseSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/tracking/hooks/useGeolocation.ts\n");

/***/ }),

/***/ "(pages-dir-node)/./components/tracking/hooks/useGeolocationServices.ts":
/*!*************************************************************!*\
  !*** ./components/tracking/hooks/useGeolocationServices.ts ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useGeolocationServices: () => (/* binding */ useGeolocationServices)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n// hooks/useGeolocationServices.ts\n\nfunction useGeolocationServices() {\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    // Function to get current position using browser's geolocation API\n    const getCurrentPosition = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useGeolocationServices.useCallback[getCurrentPosition]\": ()=>{\n            return new Promise({\n                \"useGeolocationServices.useCallback[getCurrentPosition]\": (resolve, reject)=>{\n                    setLoading(true);\n                    setError(null);\n                    if (!navigator.geolocation) {\n                        const error = new Error('Geolocation is not supported by your browser');\n                        setError(error.message);\n                        setLoading(false);\n                        reject(error);\n                        return;\n                    }\n                    navigator.geolocation.getCurrentPosition({\n                        \"useGeolocationServices.useCallback[getCurrentPosition]\": (position)=>{\n                            setLoading(false);\n                            // Create a simplified position object matching our interface\n                            const positionData = {\n                                coords: {\n                                    latitude: position.coords.latitude,\n                                    longitude: position.coords.longitude,\n                                    accuracy: position.coords.accuracy,\n                                    altitude: position.coords.altitude,\n                                    altitudeAccuracy: position.coords.altitudeAccuracy,\n                                    heading: position.coords.heading,\n                                    speed: position.coords.speed\n                                },\n                                timestamp: position.timestamp\n                            };\n                            resolve(positionData);\n                        }\n                    }[\"useGeolocationServices.useCallback[getCurrentPosition]\"], {\n                        \"useGeolocationServices.useCallback[getCurrentPosition]\": (error)=>{\n                            setError(error.message);\n                            setLoading(false);\n                            reject(error);\n                        }\n                    }[\"useGeolocationServices.useCallback[getCurrentPosition]\"], {\n                        enableHighAccuracy: true,\n                        timeout: 10000,\n                        maximumAge: 0\n                    });\n                }\n            }[\"useGeolocationServices.useCallback[getCurrentPosition]\"]);\n        }\n    }[\"useGeolocationServices.useCallback[getCurrentPosition]\"], []);\n    return {\n        error,\n        loading,\n        getCurrentPosition\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL2NvbXBvbmVudHMvdHJhY2tpbmcvaG9va3MvdXNlR2VvbG9jYXRpb25TZXJ2aWNlcy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxrQ0FBa0M7QUFDWTtBQWV2QyxTQUFTRTtJQUNkLE1BQU0sQ0FBQ0MsT0FBT0MsU0FBUyxHQUFHSiwrQ0FBUUEsQ0FBZ0I7SUFDbEQsTUFBTSxDQUFDSyxTQUFTQyxXQUFXLEdBQUdOLCtDQUFRQSxDQUFDO0lBRXZDLG1FQUFtRTtJQUNuRSxNQUFNTyxxQkFBcUJOLGtEQUFXQTtrRUFBQztZQUNyQyxPQUFPLElBQUlPOzBFQUFRLENBQUNDLFNBQVNDO29CQUMzQkosV0FBVztvQkFDWEYsU0FBUztvQkFFVCxJQUFJLENBQUNPLFVBQVVDLFdBQVcsRUFBRTt3QkFDMUIsTUFBTVQsUUFBUSxJQUFJVSxNQUFNO3dCQUN4QlQsU0FBU0QsTUFBTVcsT0FBTzt3QkFDdEJSLFdBQVc7d0JBQ1hJLE9BQU9QO3dCQUNQO29CQUNGO29CQUVBUSxVQUFVQyxXQUFXLENBQUNMLGtCQUFrQjtrRkFDdEMsQ0FBQ1E7NEJBQ0NULFdBQVc7NEJBRVgsNkRBQTZEOzRCQUM3RCxNQUFNVSxlQUFvQztnQ0FDeENDLFFBQVE7b0NBQ05DLFVBQVVILFNBQVNFLE1BQU0sQ0FBQ0MsUUFBUTtvQ0FDbENDLFdBQVdKLFNBQVNFLE1BQU0sQ0FBQ0UsU0FBUztvQ0FDcENDLFVBQVVMLFNBQVNFLE1BQU0sQ0FBQ0csUUFBUTtvQ0FDbENDLFVBQVVOLFNBQVNFLE1BQU0sQ0FBQ0ksUUFBUTtvQ0FDbENDLGtCQUFrQlAsU0FBU0UsTUFBTSxDQUFDSyxnQkFBZ0I7b0NBQ2xEQyxTQUFTUixTQUFTRSxNQUFNLENBQUNNLE9BQU87b0NBQ2hDQyxPQUFPVCxTQUFTRSxNQUFNLENBQUNPLEtBQUs7Z0NBQzlCO2dDQUNBQyxXQUFXVixTQUFTVSxTQUFTOzRCQUMvQjs0QkFFQWhCLFFBQVFPO3dCQUNWOztrRkFDQSxDQUFDYjs0QkFDQ0MsU0FBU0QsTUFBTVcsT0FBTzs0QkFDdEJSLFdBQVc7NEJBQ1hJLE9BQU9QO3dCQUNUO2lGQUNBO3dCQUFFdUIsb0JBQW9CO3dCQUFNQyxTQUFTO3dCQUFPQyxZQUFZO29CQUFFO2dCQUU5RDs7UUFDRjtpRUFBRyxFQUFFO0lBRUwsT0FBTztRQUNMekI7UUFDQUU7UUFDQUU7SUFDRjtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXHNhdGhvXFxEb2N1bWVudHNcXFByb2plY3RzXFxhaXJjcmFmdC10cmFja2luZ1xcY29tcG9uZW50c1xcdHJhY2tpbmdcXGhvb2tzXFx1c2VHZW9sb2NhdGlvblNlcnZpY2VzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGhvb2tzL3VzZUdlb2xvY2F0aW9uU2VydmljZXMudHNcclxuaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBHZW9sb2NhdGlvblBvc2l0aW9uIHtcclxuICBjb29yZHM6IHtcclxuICAgIGxhdGl0dWRlOiBudW1iZXI7XHJcbiAgICBsb25naXR1ZGU6IG51bWJlcjtcclxuICAgIGFjY3VyYWN5PzogbnVtYmVyO1xyXG4gICAgYWx0aXR1ZGU/OiBudW1iZXIgfCBudWxsO1xyXG4gICAgYWx0aXR1ZGVBY2N1cmFjeT86IG51bWJlciB8IG51bGw7XHJcbiAgICBoZWFkaW5nPzogbnVtYmVyIHwgbnVsbDtcclxuICAgIHNwZWVkPzogbnVtYmVyIHwgbnVsbDtcclxuICB9O1xyXG4gIHRpbWVzdGFtcDogbnVtYmVyO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gdXNlR2VvbG9jYXRpb25TZXJ2aWNlcygpIHtcclxuICBjb25zdCBbZXJyb3IsIHNldEVycm9yXSA9IHVzZVN0YXRlPHN0cmluZyB8IG51bGw+KG51bGwpO1xyXG4gIGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuXHJcbiAgLy8gRnVuY3Rpb24gdG8gZ2V0IGN1cnJlbnQgcG9zaXRpb24gdXNpbmcgYnJvd3NlcidzIGdlb2xvY2F0aW9uIEFQSVxyXG4gIGNvbnN0IGdldEN1cnJlbnRQb3NpdGlvbiA9IHVzZUNhbGxiYWNrKCgpOiBQcm9taXNlPEdlb2xvY2F0aW9uUG9zaXRpb24+ID0+IHtcclxuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICAgIHNldExvYWRpbmcodHJ1ZSk7XHJcbiAgICAgIHNldEVycm9yKG51bGwpO1xyXG5cclxuICAgICAgaWYgKCFuYXZpZ2F0b3IuZ2VvbG9jYXRpb24pIHtcclxuICAgICAgICBjb25zdCBlcnJvciA9IG5ldyBFcnJvcignR2VvbG9jYXRpb24gaXMgbm90IHN1cHBvcnRlZCBieSB5b3VyIGJyb3dzZXInKTtcclxuICAgICAgICBzZXRFcnJvcihlcnJvci5tZXNzYWdlKTtcclxuICAgICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcclxuICAgICAgICByZWplY3QoZXJyb3IpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG5cclxuICAgICAgbmF2aWdhdG9yLmdlb2xvY2F0aW9uLmdldEN1cnJlbnRQb3NpdGlvbihcclxuICAgICAgICAocG9zaXRpb24pID0+IHtcclxuICAgICAgICAgIHNldExvYWRpbmcoZmFsc2UpO1xyXG5cclxuICAgICAgICAgIC8vIENyZWF0ZSBhIHNpbXBsaWZpZWQgcG9zaXRpb24gb2JqZWN0IG1hdGNoaW5nIG91ciBpbnRlcmZhY2VcclxuICAgICAgICAgIGNvbnN0IHBvc2l0aW9uRGF0YTogR2VvbG9jYXRpb25Qb3NpdGlvbiA9IHtcclxuICAgICAgICAgICAgY29vcmRzOiB7XHJcbiAgICAgICAgICAgICAgbGF0aXR1ZGU6IHBvc2l0aW9uLmNvb3Jkcy5sYXRpdHVkZSxcclxuICAgICAgICAgICAgICBsb25naXR1ZGU6IHBvc2l0aW9uLmNvb3Jkcy5sb25naXR1ZGUsXHJcbiAgICAgICAgICAgICAgYWNjdXJhY3k6IHBvc2l0aW9uLmNvb3Jkcy5hY2N1cmFjeSxcclxuICAgICAgICAgICAgICBhbHRpdHVkZTogcG9zaXRpb24uY29vcmRzLmFsdGl0dWRlLFxyXG4gICAgICAgICAgICAgIGFsdGl0dWRlQWNjdXJhY3k6IHBvc2l0aW9uLmNvb3Jkcy5hbHRpdHVkZUFjY3VyYWN5LFxyXG4gICAgICAgICAgICAgIGhlYWRpbmc6IHBvc2l0aW9uLmNvb3Jkcy5oZWFkaW5nLFxyXG4gICAgICAgICAgICAgIHNwZWVkOiBwb3NpdGlvbi5jb29yZHMuc3BlZWQsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHRpbWVzdGFtcDogcG9zaXRpb24udGltZXN0YW1wLFxyXG4gICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICByZXNvbHZlKHBvc2l0aW9uRGF0YSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICAoZXJyb3IpID0+IHtcclxuICAgICAgICAgIHNldEVycm9yKGVycm9yLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgc2V0TG9hZGluZyhmYWxzZSk7XHJcbiAgICAgICAgICByZWplY3QoZXJyb3IpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgeyBlbmFibGVIaWdoQWNjdXJhY3k6IHRydWUsIHRpbWVvdXQ6IDEwMDAwLCBtYXhpbXVtQWdlOiAwIH1cclxuICAgICAgKTtcclxuICAgIH0pO1xyXG4gIH0sIFtdKTtcclxuXHJcbiAgcmV0dXJuIHtcclxuICAgIGVycm9yLFxyXG4gICAgbG9hZGluZyxcclxuICAgIGdldEN1cnJlbnRQb3NpdGlvbixcclxuICB9O1xyXG59XHJcbiJdLCJuYW1lcyI6WyJ1c2VTdGF0ZSIsInVzZUNhbGxiYWNrIiwidXNlR2VvbG9jYXRpb25TZXJ2aWNlcyIsImVycm9yIiwic2V0RXJyb3IiLCJsb2FkaW5nIiwic2V0TG9hZGluZyIsImdldEN1cnJlbnRQb3NpdGlvbiIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwibmF2aWdhdG9yIiwiZ2VvbG9jYXRpb24iLCJFcnJvciIsIm1lc3NhZ2UiLCJwb3NpdGlvbiIsInBvc2l0aW9uRGF0YSIsImNvb3JkcyIsImxhdGl0dWRlIiwibG9uZ2l0dWRlIiwiYWNjdXJhY3kiLCJhbHRpdHVkZSIsImFsdGl0dWRlQWNjdXJhY3kiLCJoZWFkaW5nIiwic3BlZWQiLCJ0aW1lc3RhbXAiLCJlbmFibGVIaWdoQWNjdXJhY3kiLCJ0aW1lb3V0IiwibWF4aW11bUFnZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/tracking/hooks/useGeolocationServices.ts\n");

/***/ }),

/***/ "(pages-dir-node)/./components/tracking/map/AircraftTrackingMap.tsx":
/*!*********************************************************!*\
  !*** ./components/tracking/map/AircraftTrackingMap.tsx ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dynamic */ \"(pages-dir-node)/./node_modules/next/dynamic.js\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dynamic__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _context_EnhancedMapContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../context/EnhancedMapContext */ \"(pages-dir-node)/./components/tracking/context/EnhancedMapContext.tsx\");\n/* harmony import */ var _tracking_context_EnhancedUIContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../tracking/context/EnhancedUIContext */ \"(pages-dir-node)/./components/tracking/context/EnhancedUIContext.tsx\");\n/* harmony import */ var _tracking_map_components_AircraftSpinner__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../tracking/map/components/AircraftSpinner */ \"(pages-dir-node)/./components/tracking/map/components/AircraftSpinner.jsx\");\n/* harmony import */ var _Ribbon__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Ribbon */ \"(pages-dir-node)/./components/tracking/Ribbon.tsx\");\n// components/tracking/map/AircraftTrackingMap.tsx\n\n\n\n\n\n\n\n// Dynamically import the optimized map to avoid SSR issues\nconst EnhancedMap = next_dynamic__WEBPACK_IMPORTED_MODULE_2___default()(()=>__webpack_require__.e(/*! import() */ \"_pages-dir-node_components_tracking_map_EnhancedReactBaseMap_tsx\").then(__webpack_require__.bind(__webpack_require__, /*! ./EnhancedReactBaseMap */ \"(pages-dir-node)/./components/tracking/map/EnhancedReactBaseMap.tsx\")), {\n    loadableGenerated: {\n        modules: [\n            \"components\\\\tracking\\\\map\\\\AircraftTrackingMap.tsx -> \" + \"./EnhancedReactBaseMap\"\n        ]\n    },\n    ssr: false,\n    loading: ()=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_tracking_map_components_AircraftSpinner__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n            isLoading: true\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\map\\\\AircraftTrackingMap.tsx\",\n            lineNumber: 13,\n            columnNumber: 18\n        }, undefined)\n});\nconst AircraftTrackingMap = ({ manufacturers, onError = ()=>{} })=>{\n    // Add state for controlling update panel visibility\n    const [updatePanelVisible, setUpdatePanelVisible] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [updateCount, setUpdateCount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    // Show the update panel after initial load\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AircraftTrackingMap.useEffect\": ()=>{\n            const timer = setTimeout({\n                \"AircraftTrackingMap.useEffect.timer\": ()=>{\n                    setUpdatePanelVisible(true);\n                }\n            }[\"AircraftTrackingMap.useEffect.timer\"], 1000);\n            return ({\n                \"AircraftTrackingMap.useEffect\": ()=>clearTimeout(timer)\n            })[\"AircraftTrackingMap.useEffect\"];\n        }\n    }[\"AircraftTrackingMap.useEffect\"], []);\n    // Handle update completion\n    const handleUpdateComplete = ()=>{\n        setUpdateCount((prev)=>prev + 1);\n    };\n    // Toggle update panel visibility\n    const toggleUpdatePanel = ()=>{\n        setUpdatePanelVisible(!updatePanelVisible);\n    };\n    return(// Nest providers - UI context wraps Map context\n    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_tracking_context_EnhancedUIContext__WEBPACK_IMPORTED_MODULE_4__.EnhancedUIProvider, {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_EnhancedMapContext__WEBPACK_IMPORTED_MODULE_3__.EnhancedMapProvider, {\n            manufacturers: manufacturers,\n            onError: onError,\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"relative w-full h-screen flex flex-col\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Ribbon__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                        manufacturers: manufacturers\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\map\\\\AircraftTrackingMap.tsx\",\n                        lineNumber: 54,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex-grow relative z-0\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(EnhancedMap, {\n                            onError: onError\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\map\\\\AircraftTrackingMap.tsx\",\n                            lineNumber: 58,\n                            columnNumber: 13\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\map\\\\AircraftTrackingMap.tsx\",\n                        lineNumber: 57,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\map\\\\AircraftTrackingMap.tsx\",\n                lineNumber: 52,\n                columnNumber: 9\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\map\\\\AircraftTrackingMap.tsx\",\n            lineNumber: 51,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\map\\\\AircraftTrackingMap.tsx\",\n        lineNumber: 50,\n        columnNumber: 5\n    }, undefined));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AircraftTrackingMap);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL2NvbXBvbmVudHMvdHJhY2tpbmcvbWFwL0FpcmNyYWZ0VHJhY2tpbmdNYXAudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUEsa0RBQWtEOztBQUNDO0FBQ2hCO0FBQ2lDO0FBQ1U7QUFFRjtBQUM3QjtBQUUvQywyREFBMkQ7QUFDM0QsTUFBTVEsY0FBY0wsbURBQU9BLENBQUMsSUFBTSxrUUFBZ0M7Ozs7OztJQUNoRU0sS0FBSztJQUNMQyxTQUFTLGtCQUFNLDhEQUFDSixnRkFBZUE7WUFBQ0ssV0FBVzs7Ozs7OztBQVE3QyxNQUFNQyxzQkFBMEQsQ0FBQyxFQUMvREMsYUFBYSxFQUNiQyxVQUFVLEtBQU8sQ0FBQyxFQUNuQjtJQUNDLG9EQUFvRDtJQUNwRCxNQUFNLENBQUNDLG9CQUFvQkMsc0JBQXNCLEdBQUdmLCtDQUFRQSxDQUFDO0lBQzdELE1BQU0sQ0FBQ2dCLGFBQWFDLGVBQWUsR0FBR2pCLCtDQUFRQSxDQUFDO0lBRS9DLDJDQUEyQztJQUMzQ0MsZ0RBQVNBO3lDQUFDO1lBQ1IsTUFBTWlCLFFBQVFDO3VEQUFXO29CQUN2Qkosc0JBQXNCO2dCQUN4QjtzREFBRztZQUVIO2lEQUFPLElBQU1LLGFBQWFGOztRQUM1Qjt3Q0FBRyxFQUFFO0lBRUwsMkJBQTJCO0lBQzNCLE1BQU1HLHVCQUF1QjtRQUMzQkosZUFBZSxDQUFDSyxPQUFTQSxPQUFPO0lBQ2xDO0lBRUEsaUNBQWlDO0lBQ2pDLE1BQU1DLG9CQUFvQjtRQUN4QlIsc0JBQXNCLENBQUNEO0lBQ3pCO0lBRUEsT0FDRSxnREFBZ0Q7a0JBQ2hELDhEQUFDVixtRkFBa0JBO2tCQUNqQiw0RUFBQ0QsNEVBQW1CQTtZQUFDUyxlQUFlQTtZQUFlQyxTQUFTQTtzQkFDMUQsNEVBQUNXO2dCQUFJQyxXQUFVOztrQ0FFYiw4REFBQ25CLCtDQUFzQkE7d0JBQUNNLGVBQWVBOzs7Ozs7a0NBR3ZDLDhEQUFDWTt3QkFBSUMsV0FBVTtrQ0FDYiw0RUFBQ2xCOzRCQUFZTSxTQUFTQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTWxDO0FBRUEsaUVBQWVGLG1CQUFtQkEsRUFBQyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxzYXRob1xcRG9jdW1lbnRzXFxQcm9qZWN0c1xcYWlyY3JhZnQtdHJhY2tpbmdcXGNvbXBvbmVudHNcXHRyYWNraW5nXFxtYXBcXEFpcmNyYWZ0VHJhY2tpbmdNYXAudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGNvbXBvbmVudHMvdHJhY2tpbmcvbWFwL0FpcmNyYWZ0VHJhY2tpbmdNYXAudHN4XHJcbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgZHluYW1pYyBmcm9tICduZXh0L2R5bmFtaWMnO1xyXG5pbXBvcnQgeyBFbmhhbmNlZE1hcFByb3ZpZGVyIH0gZnJvbSAnLi4vY29udGV4dC9FbmhhbmNlZE1hcENvbnRleHQnO1xyXG5pbXBvcnQgeyBFbmhhbmNlZFVJUHJvdmlkZXIgfSBmcm9tICcuLi8uLi90cmFja2luZy9jb250ZXh0L0VuaGFuY2VkVUlDb250ZXh0JztcclxuaW1wb3J0IHR5cGUgeyBTZWxlY3RPcHRpb24gfSBmcm9tICdAL3R5cGVzL2Jhc2UnO1xyXG5pbXBvcnQgQWlyY3JhZnRTcGlubmVyIGZyb20gJy4uLy4uL3RyYWNraW5nL21hcC9jb21wb25lbnRzL0FpcmNyYWZ0U3Bpbm5lcic7XHJcbmltcG9ydCBSaWJib25BaXJjcmFmdFNlbGVjdG9yIGZyb20gJy4uL1JpYmJvbic7XHJcblxyXG4vLyBEeW5hbWljYWxseSBpbXBvcnQgdGhlIG9wdGltaXplZCBtYXAgdG8gYXZvaWQgU1NSIGlzc3Vlc1xyXG5jb25zdCBFbmhhbmNlZE1hcCA9IGR5bmFtaWMoKCkgPT4gaW1wb3J0KCcuL0VuaGFuY2VkUmVhY3RCYXNlTWFwJyksIHtcclxuICBzc3I6IGZhbHNlLFxyXG4gIGxvYWRpbmc6ICgpID0+IDxBaXJjcmFmdFNwaW5uZXIgaXNMb2FkaW5nPXt0cnVlfSAvPixcclxufSk7XHJcblxyXG5pbnRlcmZhY2UgQWlyY3JhZnRUcmFja2luZ01hcFByb3BzIHtcclxuICBtYW51ZmFjdHVyZXJzOiBTZWxlY3RPcHRpb25bXTtcclxuICBvbkVycm9yPzogKG1lc3NhZ2U6IHN0cmluZykgPT4gdm9pZDtcclxufVxyXG5cclxuY29uc3QgQWlyY3JhZnRUcmFja2luZ01hcDogUmVhY3QuRkM8QWlyY3JhZnRUcmFja2luZ01hcFByb3BzPiA9ICh7XHJcbiAgbWFudWZhY3R1cmVycyxcclxuICBvbkVycm9yID0gKCkgPT4ge30sXHJcbn0pID0+IHtcclxuICAvLyBBZGQgc3RhdGUgZm9yIGNvbnRyb2xsaW5nIHVwZGF0ZSBwYW5lbCB2aXNpYmlsaXR5XHJcbiAgY29uc3QgW3VwZGF0ZVBhbmVsVmlzaWJsZSwgc2V0VXBkYXRlUGFuZWxWaXNpYmxlXSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuICBjb25zdCBbdXBkYXRlQ291bnQsIHNldFVwZGF0ZUNvdW50XSA9IHVzZVN0YXRlKDApO1xyXG5cclxuICAvLyBTaG93IHRoZSB1cGRhdGUgcGFuZWwgYWZ0ZXIgaW5pdGlhbCBsb2FkXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGNvbnN0IHRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgIHNldFVwZGF0ZVBhbmVsVmlzaWJsZSh0cnVlKTtcclxuICAgIH0sIDEwMDApO1xyXG5cclxuICAgIHJldHVybiAoKSA9PiBjbGVhclRpbWVvdXQodGltZXIpO1xyXG4gIH0sIFtdKTtcclxuXHJcbiAgLy8gSGFuZGxlIHVwZGF0ZSBjb21wbGV0aW9uXHJcbiAgY29uc3QgaGFuZGxlVXBkYXRlQ29tcGxldGUgPSAoKSA9PiB7XHJcbiAgICBzZXRVcGRhdGVDb3VudCgocHJldikgPT4gcHJldiArIDEpO1xyXG4gIH07XHJcblxyXG4gIC8vIFRvZ2dsZSB1cGRhdGUgcGFuZWwgdmlzaWJpbGl0eVxyXG4gIGNvbnN0IHRvZ2dsZVVwZGF0ZVBhbmVsID0gKCkgPT4ge1xyXG4gICAgc2V0VXBkYXRlUGFuZWxWaXNpYmxlKCF1cGRhdGVQYW5lbFZpc2libGUpO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICAvLyBOZXN0IHByb3ZpZGVycyAtIFVJIGNvbnRleHQgd3JhcHMgTWFwIGNvbnRleHRcclxuICAgIDxFbmhhbmNlZFVJUHJvdmlkZXI+XHJcbiAgICAgIDxFbmhhbmNlZE1hcFByb3ZpZGVyIG1hbnVmYWN0dXJlcnM9e21hbnVmYWN0dXJlcnN9IG9uRXJyb3I9e29uRXJyb3J9PlxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicmVsYXRpdmUgdy1mdWxsIGgtc2NyZWVuIGZsZXggZmxleC1jb2xcIj5cclxuICAgICAgICAgIHsvKiBTdGlja3kgUmliYm9uICovfVxyXG4gICAgICAgICAgPFJpYmJvbkFpcmNyYWZ0U2VsZWN0b3IgbWFudWZhY3R1cmVycz17bWFudWZhY3R1cmVyc30gLz5cclxuXHJcbiAgICAgICAgICB7LyogRmlsbCB0aGUgcmVzdCBvZiB0aGUgc3BhY2Ugd2l0aCB0aGUgbWFwICovfVxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4LWdyb3cgcmVsYXRpdmUgei0wXCI+XHJcbiAgICAgICAgICAgIDxFbmhhbmNlZE1hcCBvbkVycm9yPXtvbkVycm9yfSAvPlxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvRW5oYW5jZWRNYXBQcm92aWRlcj5cclxuICAgIDwvRW5oYW5jZWRVSVByb3ZpZGVyPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBBaXJjcmFmdFRyYWNraW5nTWFwO1xyXG4iXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsImR5bmFtaWMiLCJFbmhhbmNlZE1hcFByb3ZpZGVyIiwiRW5oYW5jZWRVSVByb3ZpZGVyIiwiQWlyY3JhZnRTcGlubmVyIiwiUmliYm9uQWlyY3JhZnRTZWxlY3RvciIsIkVuaGFuY2VkTWFwIiwic3NyIiwibG9hZGluZyIsImlzTG9hZGluZyIsIkFpcmNyYWZ0VHJhY2tpbmdNYXAiLCJtYW51ZmFjdHVyZXJzIiwib25FcnJvciIsInVwZGF0ZVBhbmVsVmlzaWJsZSIsInNldFVwZGF0ZVBhbmVsVmlzaWJsZSIsInVwZGF0ZUNvdW50Iiwic2V0VXBkYXRlQ291bnQiLCJ0aW1lciIsInNldFRpbWVvdXQiLCJjbGVhclRpbWVvdXQiLCJoYW5kbGVVcGRhdGVDb21wbGV0ZSIsInByZXYiLCJ0b2dnbGVVcGRhdGVQYW5lbCIsImRpdiIsImNsYXNzTmFtZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/tracking/map/AircraftTrackingMap.tsx\n");

/***/ }),

/***/ "(pages-dir-node)/./components/tracking/map/components/AircraftSpinner.jsx":
/*!****************************************************************!*\
  !*** ./components/tracking/map/components/AircraftSpinner.jsx ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _styles_AircraftSpinner_module_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../styles/AircraftSpinner.module.css */ \"(pages-dir-node)/./styles/AircraftSpinner.module.css\");\n/* harmony import */ var _styles_AircraftSpinner_module_css__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_styles_AircraftSpinner_module_css__WEBPACK_IMPORTED_MODULE_2__);\n// components/tracking/map/components/AircraftSpinner.jsx\n\n\n\nconst AircraftSpinner = ({ isLoading })=>{\n    // Use body class for hiding/showing the overlay\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AircraftSpinner.useEffect\": ()=>{\n            if (isLoading) {\n                document.body.classList.remove((_styles_AircraftSpinner_module_css__WEBPACK_IMPORTED_MODULE_2___default().loaded));\n            } else {\n                document.body.classList.add((_styles_AircraftSpinner_module_css__WEBPACK_IMPORTED_MODULE_2___default().loaded));\n            }\n            // Cleanup on unmount\n            return ({\n                \"AircraftSpinner.useEffect\": ()=>{\n                    document.body.classList.add((_styles_AircraftSpinner_module_css__WEBPACK_IMPORTED_MODULE_2___default().loaded));\n                }\n            })[\"AircraftSpinner.useEffect\"];\n        }\n    }[\"AircraftSpinner.useEffect\"], [\n        isLoading\n    ]);\n    // Don't render anything if not loading\n    if (!isLoading) return null;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: (_styles_AircraftSpinner_module_css__WEBPACK_IMPORTED_MODULE_2___default().loadingOverlay),\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: (_styles_AircraftSpinner_module_css__WEBPACK_IMPORTED_MODULE_2___default().loadingContainer),\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: (_styles_AircraftSpinner_module_css__WEBPACK_IMPORTED_MODULE_2___default().aircraft),\n                    children: \"✈️\"\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\map\\\\components\\\\AircraftSpinner.jsx\",\n                    lineNumber: 26,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: `${(_styles_AircraftSpinner_module_css__WEBPACK_IMPORTED_MODULE_2___default().aircraft)} ${(_styles_AircraftSpinner_module_css__WEBPACK_IMPORTED_MODULE_2___default().aircraft2)}`,\n                    children: \"✈️\"\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\map\\\\components\\\\AircraftSpinner.jsx\",\n                    lineNumber: 27,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: `${(_styles_AircraftSpinner_module_css__WEBPACK_IMPORTED_MODULE_2___default().aircraft)} ${(_styles_AircraftSpinner_module_css__WEBPACK_IMPORTED_MODULE_2___default().aircraft3)}`,\n                    children: \"✈️\"\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\map\\\\components\\\\AircraftSpinner.jsx\",\n                    lineNumber: 28,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: `${(_styles_AircraftSpinner_module_css__WEBPACK_IMPORTED_MODULE_2___default().aircraft)} ${(_styles_AircraftSpinner_module_css__WEBPACK_IMPORTED_MODULE_2___default().aircraft4)}`,\n                    children: \"✈️\"\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\map\\\\components\\\\AircraftSpinner.jsx\",\n                    lineNumber: 29,\n                    columnNumber: 9\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\map\\\\components\\\\AircraftSpinner.jsx\",\n            lineNumber: 25,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\map\\\\components\\\\AircraftSpinner.jsx\",\n        lineNumber: 24,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AircraftSpinner);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL2NvbXBvbmVudHMvdHJhY2tpbmcvbWFwL2NvbXBvbmVudHMvQWlyY3JhZnRTcGlubmVyLmpzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEseURBQXlEOztBQUNoQjtBQUMwQjtBQUVuRSxNQUFNRyxrQkFBa0IsQ0FBQyxFQUFFQyxTQUFTLEVBQUU7SUFDcEMsZ0RBQWdEO0lBQ2hESCxnREFBU0E7cUNBQUM7WUFDUixJQUFJRyxXQUFXO2dCQUNiQyxTQUFTQyxJQUFJLENBQUNDLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDTixrRkFBYTtZQUM5QyxPQUFPO2dCQUNMRyxTQUFTQyxJQUFJLENBQUNDLFNBQVMsQ0FBQ0csR0FBRyxDQUFDUixrRkFBYTtZQUMzQztZQUVBLHFCQUFxQjtZQUNyQjs2Q0FBTztvQkFDTEcsU0FBU0MsSUFBSSxDQUFDQyxTQUFTLENBQUNHLEdBQUcsQ0FBQ1Isa0ZBQWE7Z0JBQzNDOztRQUNGO29DQUFHO1FBQUNFO0tBQVU7SUFFZCx1Q0FBdUM7SUFDdkMsSUFBSSxDQUFDQSxXQUFXLE9BQU87SUFFdkIscUJBQ0UsOERBQUNPO1FBQUlDLFdBQVdWLDBGQUFxQjtrQkFDbkMsNEVBQUNTO1lBQUlDLFdBQVdWLDRGQUF1Qjs7OEJBQ3JDLDhEQUFDUztvQkFBSUMsV0FBV1Ysb0ZBQWU7OEJBQUU7Ozs7Ozs4QkFDakMsOERBQUNTO29CQUFJQyxXQUFXLEdBQUdWLG9GQUFlLENBQUMsQ0FBQyxFQUFFQSxxRkFBZ0IsRUFBRTs4QkFBRTs7Ozs7OzhCQUMxRCw4REFBQ1M7b0JBQUlDLFdBQVcsR0FBR1Ysb0ZBQWUsQ0FBQyxDQUFDLEVBQUVBLHFGQUFnQixFQUFFOzhCQUFFOzs7Ozs7OEJBQzFELDhEQUFDUztvQkFBSUMsV0FBVyxHQUFHVixvRkFBZSxDQUFDLENBQUMsRUFBRUEscUZBQWdCLEVBQUU7OEJBQUU7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBSWxFO0FBRUEsaUVBQWVDLGVBQWVBLEVBQUMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcc2F0aG9cXERvY3VtZW50c1xcUHJvamVjdHNcXGFpcmNyYWZ0LXRyYWNraW5nXFxjb21wb25lbnRzXFx0cmFja2luZ1xcbWFwXFxjb21wb25lbnRzXFxBaXJjcmFmdFNwaW5uZXIuanN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGNvbXBvbmVudHMvdHJhY2tpbmcvbWFwL2NvbXBvbmVudHMvQWlyY3JhZnRTcGlubmVyLmpzeFxyXG5pbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgc3R5bGVzIGZyb20gJy4uLy4uLy4uLy4uL3N0eWxlcy9BaXJjcmFmdFNwaW5uZXIubW9kdWxlLmNzcyc7XHJcblxyXG5jb25zdCBBaXJjcmFmdFNwaW5uZXIgPSAoeyBpc0xvYWRpbmcgfSkgPT4ge1xyXG4gIC8vIFVzZSBib2R5IGNsYXNzIGZvciBoaWRpbmcvc2hvd2luZyB0aGUgb3ZlcmxheVxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBpZiAoaXNMb2FkaW5nKSB7XHJcbiAgICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LnJlbW92ZShzdHlsZXMubG9hZGVkKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LmFkZChzdHlsZXMubG9hZGVkKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBDbGVhbnVwIG9uIHVubW91bnRcclxuICAgIHJldHVybiAoKSA9PiB7XHJcbiAgICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LmFkZChzdHlsZXMubG9hZGVkKTtcclxuICAgIH07XHJcbiAgfSwgW2lzTG9hZGluZ10pO1xyXG5cclxuICAvLyBEb24ndCByZW5kZXIgYW55dGhpbmcgaWYgbm90IGxvYWRpbmdcclxuICBpZiAoIWlzTG9hZGluZykgcmV0dXJuIG51bGw7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmxvYWRpbmdPdmVybGF5fT5cclxuICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5sb2FkaW5nQ29udGFpbmVyfT5cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmFpcmNyYWZ0fT7inIjvuI88L2Rpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17YCR7c3R5bGVzLmFpcmNyYWZ0fSAke3N0eWxlcy5haXJjcmFmdDJ9YH0+4pyI77iPPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e2Ake3N0eWxlcy5haXJjcmFmdH0gJHtzdHlsZXMuYWlyY3JhZnQzfWB9PuKciO+4jzwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgJHtzdHlsZXMuYWlyY3JhZnR9ICR7c3R5bGVzLmFpcmNyYWZ0NH1gfT7inIjvuI88L2Rpdj5cclxuICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgQWlyY3JhZnRTcGlubmVyO1xyXG4iXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VFZmZlY3QiLCJzdHlsZXMiLCJBaXJjcmFmdFNwaW5uZXIiLCJpc0xvYWRpbmciLCJkb2N1bWVudCIsImJvZHkiLCJjbGFzc0xpc3QiLCJyZW1vdmUiLCJsb2FkZWQiLCJhZGQiLCJkaXYiLCJjbGFzc05hbWUiLCJsb2FkaW5nT3ZlcmxheSIsImxvYWRpbmdDb250YWluZXIiLCJhaXJjcmFmdCIsImFpcmNyYWZ0MiIsImFpcmNyYWZ0MyIsImFpcmNyYWZ0NCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/tracking/map/components/AircraftSpinner.jsx\n");

/***/ }),

/***/ "(pages-dir-node)/./components/tracking/map/components/ManualRefreshButton.tsx":
/*!********************************************************************!*\
  !*** ./components/tracking/map/components/ManualRefreshButton.tsx ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! __barrel_optimize__?names=RefreshCw!=!lucide-react */ \"(pages-dir-node)/__barrel_optimize__?names=RefreshCw!=!./node_modules/lucide-react/dist/esm/lucide-react.js\");\n// components/tracking/map/components/ManualRefreshButton.tsx\n\n\n\nconst ManualRefreshButton = ({ onRefresh, disabled = false })=>{\n    const [isRefreshing, setIsRefreshing] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const handleRefresh = async ()=>{\n        if (isRefreshing || disabled) return;\n        setIsRefreshing(true);\n        try {\n            await onRefresh();\n        } finally{\n            setIsRefreshing(false);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n        onClick: handleRefresh,\n        disabled: isRefreshing || disabled,\n        className: `px-3 py-2 rounded-md flex items-center gap-1 transition-colors ${isRefreshing || disabled ? 'bg-gray-200 text-gray-500 cursor-not-allowed' : 'bg-indigo-50 text-indigo-700 hover:bg-indigo-100'}`,\n        title: \"Refresh Aircraft Data\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_2__.RefreshCw, {\n                size: 16,\n                className: `${isRefreshing ? 'animate-spin' : ''}`\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\map\\\\components\\\\ManualRefreshButton.tsx\",\n                lineNumber: 38,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                children: \"Refresh\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\map\\\\components\\\\ManualRefreshButton.tsx\",\n                lineNumber: 42,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\map\\\\components\\\\ManualRefreshButton.tsx\",\n        lineNumber: 28,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ManualRefreshButton);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL2NvbXBvbmVudHMvdHJhY2tpbmcvbWFwL2NvbXBvbmVudHMvTWFudWFsUmVmcmVzaEJ1dHRvbi50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsNkRBQTZEOztBQUNyQjtBQUNDO0FBT3pDLE1BQU1HLHNCQUEwRCxDQUFDLEVBQy9EQyxTQUFTLEVBQ1RDLFdBQVcsS0FBSyxFQUNqQjtJQUNDLE1BQU0sQ0FBQ0MsY0FBY0MsZ0JBQWdCLEdBQUdOLCtDQUFRQSxDQUFDO0lBRWpELE1BQU1PLGdCQUFnQjtRQUNwQixJQUFJRixnQkFBZ0JELFVBQVU7UUFFOUJFLGdCQUFnQjtRQUNoQixJQUFJO1lBQ0YsTUFBTUg7UUFDUixTQUFVO1lBQ1JHLGdCQUFnQjtRQUNsQjtJQUNGO0lBRUEscUJBQ0UsOERBQUNFO1FBQ0NDLFNBQVNGO1FBQ1RILFVBQVVDLGdCQUFnQkQ7UUFDMUJNLFdBQVcsQ0FBQywrREFBK0QsRUFDekVMLGdCQUFnQkQsV0FDWixpREFDQSxvREFDSjtRQUNGTyxPQUFNOzswQkFFTiw4REFBQ1Ysb0ZBQVNBO2dCQUNSVyxNQUFNO2dCQUNORixXQUFXLEdBQUdMLGVBQWUsaUJBQWlCLElBQUk7Ozs7OzswQkFFcEQsOERBQUNROzBCQUFLOzs7Ozs7Ozs7Ozs7QUFHWjtBQUVBLGlFQUFlWCxtQkFBbUJBLEVBQUMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcc2F0aG9cXERvY3VtZW50c1xcUHJvamVjdHNcXGFpcmNyYWZ0LXRyYWNraW5nXFxjb21wb25lbnRzXFx0cmFja2luZ1xcbWFwXFxjb21wb25lbnRzXFxNYW51YWxSZWZyZXNoQnV0dG9uLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBjb21wb25lbnRzL3RyYWNraW5nL21hcC9jb21wb25lbnRzL01hbnVhbFJlZnJlc2hCdXR0b24udHN4XHJcbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgUmVmcmVzaEN3IH0gZnJvbSAnbHVjaWRlLXJlYWN0JztcclxuXHJcbmludGVyZmFjZSBNYW51YWxSZWZyZXNoQnV0dG9uUHJvcHMge1xyXG4gIG9uUmVmcmVzaDogKCkgPT4gUHJvbWlzZTx2b2lkPjtcclxuICBkaXNhYmxlZD86IGJvb2xlYW47XHJcbn1cclxuXHJcbmNvbnN0IE1hbnVhbFJlZnJlc2hCdXR0b246IFJlYWN0LkZDPE1hbnVhbFJlZnJlc2hCdXR0b25Qcm9wcz4gPSAoe1xyXG4gIG9uUmVmcmVzaCxcclxuICBkaXNhYmxlZCA9IGZhbHNlLFxyXG59KSA9PiB7XHJcbiAgY29uc3QgW2lzUmVmcmVzaGluZywgc2V0SXNSZWZyZXNoaW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuXHJcbiAgY29uc3QgaGFuZGxlUmVmcmVzaCA9IGFzeW5jICgpID0+IHtcclxuICAgIGlmIChpc1JlZnJlc2hpbmcgfHwgZGlzYWJsZWQpIHJldHVybjtcclxuXHJcbiAgICBzZXRJc1JlZnJlc2hpbmcodHJ1ZSk7XHJcbiAgICB0cnkge1xyXG4gICAgICBhd2FpdCBvblJlZnJlc2goKTtcclxuICAgIH0gZmluYWxseSB7XHJcbiAgICAgIHNldElzUmVmcmVzaGluZyhmYWxzZSk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxidXR0b25cclxuICAgICAgb25DbGljaz17aGFuZGxlUmVmcmVzaH1cclxuICAgICAgZGlzYWJsZWQ9e2lzUmVmcmVzaGluZyB8fCBkaXNhYmxlZH1cclxuICAgICAgY2xhc3NOYW1lPXtgcHgtMyBweS0yIHJvdW5kZWQtbWQgZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTEgdHJhbnNpdGlvbi1jb2xvcnMgJHtcclxuICAgICAgICBpc1JlZnJlc2hpbmcgfHwgZGlzYWJsZWRcclxuICAgICAgICAgID8gJ2JnLWdyYXktMjAwIHRleHQtZ3JheS01MDAgY3Vyc29yLW5vdC1hbGxvd2VkJ1xyXG4gICAgICAgICAgOiAnYmctaW5kaWdvLTUwIHRleHQtaW5kaWdvLTcwMCBob3ZlcjpiZy1pbmRpZ28tMTAwJ1xyXG4gICAgICB9YH1cclxuICAgICAgdGl0bGU9XCJSZWZyZXNoIEFpcmNyYWZ0IERhdGFcIlxyXG4gICAgPlxyXG4gICAgICA8UmVmcmVzaEN3XHJcbiAgICAgICAgc2l6ZT17MTZ9XHJcbiAgICAgICAgY2xhc3NOYW1lPXtgJHtpc1JlZnJlc2hpbmcgPyAnYW5pbWF0ZS1zcGluJyA6ICcnfWB9XHJcbiAgICAgIC8+XHJcbiAgICAgIDxzcGFuPlJlZnJlc2g8L3NwYW4+XHJcbiAgICA8L2J1dHRvbj5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgTWFudWFsUmVmcmVzaEJ1dHRvbjtcclxuIl0sIm5hbWVzIjpbIlJlYWN0IiwidXNlU3RhdGUiLCJSZWZyZXNoQ3ciLCJNYW51YWxSZWZyZXNoQnV0dG9uIiwib25SZWZyZXNoIiwiZGlzYWJsZWQiLCJpc1JlZnJlc2hpbmciLCJzZXRJc1JlZnJlc2hpbmciLCJoYW5kbGVSZWZyZXNoIiwiYnV0dG9uIiwib25DbGljayIsImNsYXNzTmFtZSIsInRpdGxlIiwic2l6ZSIsInNwYW4iXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/tracking/map/components/ManualRefreshButton.tsx\n");

/***/ }),

/***/ "(pages-dir-node)/./components/tracking/map/components/OwnershipTypeFilter.jsx":
/*!********************************************************************!*\
  !*** ./components/tracking/map/components/OwnershipTypeFilter.jsx ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n// OwnershipTypeFilter.jsx\n\n\nconst OwnershipTypeFilter = ({ onFilterChange, activeFilters = [] })=>{\n    // Use all owner types as default if no active filters provided\n    const [selectedFilters, setSelectedFilters] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(activeFilters || []);\n    // Add an effect to sync with parent updates\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"OwnershipTypeFilter.useEffect\": ()=>{\n            setSelectedFilters(activeFilters || []);\n        }\n    }[\"OwnershipTypeFilter.useEffect\"], [\n        activeFilters\n    ]);\n    // Update local state when props change\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"OwnershipTypeFilter.useEffect\": ()=>{\n            // If activeFilters is empty and it's the initial render, select all by default\n            if (activeFilters.length > 0) {\n                setSelectedFilters(activeFilters);\n            }\n        }\n    }[\"OwnershipTypeFilter.useEffect\"], [\n        activeFilters\n    ]);\n    // Define all ownership types with their colors and descriptions\n    const ownerTypes = [\n        {\n            id: 'individual',\n            name: 'Individual',\n            color: '#43a047',\n            description: 'Privately owned by an individual'\n        },\n        {\n            id: 'partnership',\n            name: 'Partnership',\n            color: '#8e24aa',\n            description: 'Partnership between individuals'\n        },\n        {\n            id: 'corp-owner',\n            name: 'Corporation',\n            color: '#5c6bc0',\n            description: 'Corporate entity ownership'\n        },\n        {\n            id: 'co-owned',\n            name: 'Co-Owned',\n            color: '#9e9e9e',\n            description: 'Co-owned by multiple parties'\n        },\n        {\n            id: 'llc',\n            name: 'LLC',\n            color: '#ffb300',\n            description: 'Limited Liability Company'\n        },\n        {\n            id: 'non-citizen-corp',\n            name: 'Non-Citizen Corp',\n            color: '#5c6bc0',\n            description: 'Non-citizen corporation ownership'\n        },\n        {\n            id: 'airline',\n            name: 'Airline',\n            color: '#e53935',\n            description: 'Commercial airline'\n        },\n        {\n            id: 'freight',\n            name: 'Freight',\n            color: '#f57f17',\n            description: 'Freight transportation company'\n        },\n        {\n            id: 'medical',\n            name: 'Medical',\n            color: '#b71c1c',\n            description: 'Medical service provider'\n        },\n        {\n            id: 'media',\n            name: 'Media',\n            color: '#9e9e9e',\n            description: 'Media organization'\n        },\n        {\n            id: 'historical',\n            name: 'Historical',\n            color: '#9e9e9e',\n            description: 'Historical organization or museum'\n        },\n        {\n            id: 'flying-club',\n            name: 'Flying Club',\n            color: '#9e9e9e',\n            description: 'Recreational flying club'\n        },\n        {\n            id: 'emergency',\n            name: 'Emergency',\n            color: '#c62828',\n            description: 'Emergency services'\n        },\n        {\n            id: 'local-govt',\n            name: 'Local Government',\n            color: '#0288d1',\n            description: 'Local government agency'\n        },\n        {\n            id: 'education',\n            name: 'Education',\n            color: '#039be5',\n            description: 'Educational institution'\n        },\n        {\n            id: 'federal-govt',\n            name: 'Federal Government',\n            color: '#1a75ff',\n            description: 'Federal government agency'\n        },\n        {\n            id: 'flight-school',\n            name: 'Flight School',\n            color: '#00897b',\n            description: 'Pilot training institution'\n        },\n        {\n            id: 'leasing-corp',\n            name: 'Leasing Corporation',\n            color: '#5c6bc0',\n            description: 'Aircraft leasing company'\n        },\n        {\n            id: 'military',\n            name: 'Military',\n            color: '#546e7a',\n            description: 'Military aircraft'\n        },\n        {\n            id: 'unknown',\n            name: 'Unknown',\n            color: '#9e9e9e',\n            description: 'Ownership information unavailable'\n        }\n    ];\n    const handleFilterToggle = (typeId)=>{\n        let newFilters;\n        if (selectedFilters.includes(typeId)) {\n            // Remove from filters if already selected\n            newFilters = selectedFilters.filter((id)=>id !== typeId);\n        } else {\n            // Add to filters if not already selected\n            newFilters = [\n                ...selectedFilters,\n                typeId\n            ];\n        }\n        setSelectedFilters(newFilters);\n        onFilterChange(newFilters); // Apply filter changes immediately\n    };\n    // Inside your OwnershipTypeFilter component\n    const handleOwnerTypeToggle = (typeId)=>{\n        const newFilters = selectedFilters.includes(typeId) ? selectedFilters.filter((id)=>id !== typeId) : [\n            ...selectedFilters,\n            typeId\n        ];\n        setSelectedFilters(newFilters);\n        onFilterChange(newFilters);\n        // Add debugging\n        console.log(`Toggled ${typeId}, new filters:`, newFilters);\n    };\n    // For \"Select All\" button\n    const selectAll = ()=>{\n        const allTypeIds = types.map((type)=>type.id);\n        setSelectedFilters(allTypeIds);\n        onFilterChange(allTypeIds);\n    };\n    // For \"Clear All\" button\n    const clearAll = ()=>{\n        setSelectedFilters([]);\n        onFilterChange([]);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"filter-content\",\n        style: {\n            width: '100%'\n        },\n        children: ownerTypes.map((type)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"filter-item\",\n                style: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    padding: '4px 8px',\n                    fontSize: '13px',\n                    cursor: 'pointer',\n                    backgroundColor: selectedFilters.includes(type.id) ? '#f1f5ff' : 'transparent',\n                    borderRadius: '3px',\n                    margin: '2px 0'\n                },\n                onClick: ()=>handleFilterToggle(type.id),\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                        type: \"checkbox\",\n                        checked: selectedFilters.includes(type.id),\n                        onChange: ()=>handleOwnerTypeToggle(type.id),\n                        style: {\n                            marginRight: '8px'\n                        }\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\map\\\\components\\\\OwnershipTypeFilter.jsx\",\n                        lineNumber: 206,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            width: '14px',\n                            height: '14px',\n                            backgroundColor: type.color,\n                            borderRadius: '3px',\n                            marginRight: '8px',\n                            flexShrink: 0\n                        }\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\map\\\\components\\\\OwnershipTypeFilter.jsx\",\n                        lineNumber: 212,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            display: 'flex',\n                            flexDirection: 'column'\n                        },\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                style: {\n                                    fontWeight: '500',\n                                    fontSize: '12px'\n                                },\n                                children: type.name\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\map\\\\components\\\\OwnershipTypeFilter.jsx\",\n                                lineNumber: 223,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                style: {\n                                    fontSize: '10px',\n                                    color: '#666'\n                                },\n                                children: type.description\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\map\\\\components\\\\OwnershipTypeFilter.jsx\",\n                                lineNumber: 226,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\map\\\\components\\\\OwnershipTypeFilter.jsx\",\n                        lineNumber: 222,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, type.id, true, {\n                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\map\\\\components\\\\OwnershipTypeFilter.jsx\",\n                lineNumber: 189,\n                columnNumber: 9\n            }, undefined))\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\map\\\\components\\\\OwnershipTypeFilter.jsx\",\n        lineNumber: 187,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (OwnershipTypeFilter);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/tracking/map/components/OwnershipTypeFilter.jsx\n");

/***/ }),

/***/ "(pages-dir-node)/./components/tracking/map/components/SearchRibbonSpinner.tsx":
/*!********************************************************************!*\
  !*** ./components/tracking/map/components/SearchRibbonSpinner.tsx ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _styles_SearchRibbonSpinner_module_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../styles/SearchRibbonSpinner.module.css */ \"(pages-dir-node)/./styles/SearchRibbonSpinner.module.css\");\n/* harmony import */ var _styles_SearchRibbonSpinner_module_css__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_styles_SearchRibbonSpinner_module_css__WEBPACK_IMPORTED_MODULE_2__);\n// components/tracking/map/components/SearchRibbonSpinner.tsx\n\n\n\nconst SearchRibbonSpinner = ({ isLoading, loadingText = 'Searching for aircraft...' })=>{\n    if (!isLoading) return null;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: (_styles_SearchRibbonSpinner_module_css__WEBPACK_IMPORTED_MODULE_2___default().searchRibbonContainer),\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: (_styles_SearchRibbonSpinner_module_css__WEBPACK_IMPORTED_MODULE_2___default().searchRibbon),\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: (_styles_SearchRibbonSpinner_module_css__WEBPACK_IMPORTED_MODULE_2___default().aircraftContainer),\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: (_styles_SearchRibbonSpinner_module_css__WEBPACK_IMPORTED_MODULE_2___default().aircraft),\n                            children: \"✈️\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\map\\\\components\\\\SearchRibbonSpinner.tsx\",\n                            lineNumber: 20,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: `${(_styles_SearchRibbonSpinner_module_css__WEBPACK_IMPORTED_MODULE_2___default().aircraft)} ${(_styles_SearchRibbonSpinner_module_css__WEBPACK_IMPORTED_MODULE_2___default().aircraft2)}`,\n                            children: \"✈️\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\map\\\\components\\\\SearchRibbonSpinner.tsx\",\n                            lineNumber: 21,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: `${(_styles_SearchRibbonSpinner_module_css__WEBPACK_IMPORTED_MODULE_2___default().aircraft)} ${(_styles_SearchRibbonSpinner_module_css__WEBPACK_IMPORTED_MODULE_2___default().aircraft3)}`,\n                            children: \"✈️\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\map\\\\components\\\\SearchRibbonSpinner.tsx\",\n                            lineNumber: 22,\n                            columnNumber: 11\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\map\\\\components\\\\SearchRibbonSpinner.tsx\",\n                    lineNumber: 19,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: (_styles_SearchRibbonSpinner_module_css__WEBPACK_IMPORTED_MODULE_2___default().loadingText),\n                    children: loadingText\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\map\\\\components\\\\SearchRibbonSpinner.tsx\",\n                    lineNumber: 24,\n                    columnNumber: 9\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\map\\\\components\\\\SearchRibbonSpinner.tsx\",\n            lineNumber: 18,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\map\\\\components\\\\SearchRibbonSpinner.tsx\",\n        lineNumber: 17,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SearchRibbonSpinner);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL2NvbXBvbmVudHMvdHJhY2tpbmcvbWFwL2NvbXBvbmVudHMvU2VhcmNoUmliYm9uU3Bpbm5lci50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLDZEQUE2RDs7QUFDbkM7QUFDNkM7QUFPdkUsTUFBTUUsc0JBQTBELENBQUMsRUFDL0RDLFNBQVMsRUFDVEMsY0FBYywyQkFBMkIsRUFDMUM7SUFDQyxJQUFJLENBQUNELFdBQVcsT0FBTztJQUV2QixxQkFDRSw4REFBQ0U7UUFBSUMsV0FBV0wscUdBQTRCO2tCQUMxQyw0RUFBQ0k7WUFBSUMsV0FBV0wsNEZBQW1COzs4QkFDakMsOERBQUNJO29CQUFJQyxXQUFXTCxpR0FBd0I7O3NDQUN0Qyw4REFBQ0k7NEJBQUlDLFdBQVdMLHdGQUFlO3NDQUFFOzs7Ozs7c0NBQ2pDLDhEQUFDSTs0QkFBSUMsV0FBVyxHQUFHTCx3RkFBZSxDQUFDLENBQUMsRUFBRUEseUZBQWdCLEVBQUU7c0NBQUU7Ozs7OztzQ0FDMUQsOERBQUNJOzRCQUFJQyxXQUFXLEdBQUdMLHdGQUFlLENBQUMsQ0FBQyxFQUFFQSx5RkFBZ0IsRUFBRTtzQ0FBRTs7Ozs7Ozs7Ozs7OzhCQUU1RCw4REFBQ0k7b0JBQUlDLFdBQVdMLDJGQUFrQjs4QkFBR0c7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBSTdDO0FBRUEsaUVBQWVGLG1CQUFtQkEsRUFBQyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxzYXRob1xcRG9jdW1lbnRzXFxQcm9qZWN0c1xcYWlyY3JhZnQtdHJhY2tpbmdcXGNvbXBvbmVudHNcXHRyYWNraW5nXFxtYXBcXGNvbXBvbmVudHNcXFNlYXJjaFJpYmJvblNwaW5uZXIudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGNvbXBvbmVudHMvdHJhY2tpbmcvbWFwL2NvbXBvbmVudHMvU2VhcmNoUmliYm9uU3Bpbm5lci50c3hcclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHN0eWxlcyBmcm9tICcuLi8uLi8uLi8uLi9zdHlsZXMvU2VhcmNoUmliYm9uU3Bpbm5lci5tb2R1bGUuY3NzJztcclxuXHJcbmludGVyZmFjZSBTZWFyY2hSaWJib25TcGlubmVyUHJvcHMge1xyXG4gIGlzTG9hZGluZzogYm9vbGVhbjtcclxuICBsb2FkaW5nVGV4dD86IHN0cmluZztcclxufVxyXG5cclxuY29uc3QgU2VhcmNoUmliYm9uU3Bpbm5lcjogUmVhY3QuRkM8U2VhcmNoUmliYm9uU3Bpbm5lclByb3BzPiA9ICh7XHJcbiAgaXNMb2FkaW5nLFxyXG4gIGxvYWRpbmdUZXh0ID0gJ1NlYXJjaGluZyBmb3IgYWlyY3JhZnQuLi4nLFxyXG59KSA9PiB7XHJcbiAgaWYgKCFpc0xvYWRpbmcpIHJldHVybiBudWxsO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5zZWFyY2hSaWJib25Db250YWluZXJ9PlxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLnNlYXJjaFJpYmJvbn0+XHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5haXJjcmFmdENvbnRhaW5lcn0+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmFpcmNyYWZ0fT7inIjvuI88L2Rpdj5cclxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgJHtzdHlsZXMuYWlyY3JhZnR9ICR7c3R5bGVzLmFpcmNyYWZ0Mn1gfT7inIjvuI88L2Rpdj5cclxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgJHtzdHlsZXMuYWlyY3JhZnR9ICR7c3R5bGVzLmFpcmNyYWZ0M31gfT7inIjvuI88L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmxvYWRpbmdUZXh0fT57bG9hZGluZ1RleHR9PC9kaXY+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFNlYXJjaFJpYmJvblNwaW5uZXI7XHJcbiJdLCJuYW1lcyI6WyJSZWFjdCIsInN0eWxlcyIsIlNlYXJjaFJpYmJvblNwaW5uZXIiLCJpc0xvYWRpbmciLCJsb2FkaW5nVGV4dCIsImRpdiIsImNsYXNzTmFtZSIsInNlYXJjaFJpYmJvbkNvbnRhaW5lciIsInNlYXJjaFJpYmJvbiIsImFpcmNyYWZ0Q29udGFpbmVyIiwiYWlyY3JhZnQiLCJhaXJjcmFmdDIiLCJhaXJjcmFmdDMiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/tracking/map/components/SearchRibbonSpinner.tsx\n");

/***/ }),

/***/ "(pages-dir-node)/./components/tracking/map/components/ribbon-clear.tsx":
/*!*************************************************************!*\
  !*** ./components/tracking/map/components/ribbon-clear.tsx ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RibbonClearFiltersButton: () => (/* binding */ RibbonClearFiltersButton)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst RibbonClearFiltersButton = ({ onClear })=>{\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n        onClick: onClear,\n        className: \"px-3 py-1.5 rounded-md bg-gray-200 text-gray-700 hover:bg-gray-300 transition-colors flex items-center gap-1 text-sm\",\n        title: \"Clear all filters\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"h-4 w-4\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                stroke: \"currentColor\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                    strokeLinecap: \"round\",\n                    strokeLinejoin: \"round\",\n                    strokeWidth: 2,\n                    d: \"M6 18L18 6M6 6l12 12\"\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\map\\\\components\\\\ribbon-clear.tsx\",\n                    lineNumber: 23,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\map\\\\components\\\\ribbon-clear.tsx\",\n                lineNumber: 16,\n                columnNumber: 7\n            }, undefined),\n            \"Clear All\"\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\map\\\\components\\\\ribbon-clear.tsx\",\n        lineNumber: 11,\n        columnNumber: 5\n    }, undefined);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL2NvbXBvbmVudHMvdHJhY2tpbmcvbWFwL2NvbXBvbmVudHMvcmliYm9uLWNsZWFyLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBMEI7QUFNbkIsTUFBTUMsMkJBRVQsQ0FBQyxFQUFFQyxPQUFPLEVBQUU7SUFDZCxxQkFDRSw4REFBQ0M7UUFDQ0MsU0FBU0Y7UUFDVEcsV0FBVTtRQUNWQyxPQUFNOzswQkFFTiw4REFBQ0M7Z0JBQ0NDLE9BQU07Z0JBQ05ILFdBQVU7Z0JBQ1ZJLE1BQUs7Z0JBQ0xDLFNBQVE7Z0JBQ1JDLFFBQU87MEJBRVAsNEVBQUNDO29CQUNDQyxlQUFjO29CQUNkQyxnQkFBZTtvQkFDZkMsYUFBYTtvQkFDYkMsR0FBRTs7Ozs7Ozs7Ozs7WUFFQTs7Ozs7OztBQUlaLEVBQUUiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcc2F0aG9cXERvY3VtZW50c1xcUHJvamVjdHNcXGFpcmNyYWZ0LXRyYWNraW5nXFxjb21wb25lbnRzXFx0cmFja2luZ1xcbWFwXFxjb21wb25lbnRzXFxyaWJib24tY2xlYXIudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcblxyXG5pbnRlcmZhY2UgUmliYm9uQ2xlYXJGaWx0ZXJzQnV0dG9uUHJvcHMge1xyXG4gIG9uQ2xlYXI/OiAoKSA9PiB2b2lkO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgUmliYm9uQ2xlYXJGaWx0ZXJzQnV0dG9uOiBSZWFjdC5GQzxcclxuICBSaWJib25DbGVhckZpbHRlcnNCdXR0b25Qcm9wc1xyXG4+ID0gKHsgb25DbGVhciB9KSA9PiB7XHJcbiAgcmV0dXJuIChcclxuICAgIDxidXR0b25cclxuICAgICAgb25DbGljaz17b25DbGVhcn1cclxuICAgICAgY2xhc3NOYW1lPVwicHgtMyBweS0xLjUgcm91bmRlZC1tZCBiZy1ncmF5LTIwMCB0ZXh0LWdyYXktNzAwIGhvdmVyOmJnLWdyYXktMzAwIHRyYW5zaXRpb24tY29sb3JzIGZsZXggaXRlbXMtY2VudGVyIGdhcC0xIHRleHQtc21cIlxyXG4gICAgICB0aXRsZT1cIkNsZWFyIGFsbCBmaWx0ZXJzXCJcclxuICAgID5cclxuICAgICAgPHN2Z1xyXG4gICAgICAgIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIlxyXG4gICAgICAgIGNsYXNzTmFtZT1cImgtNCB3LTRcIlxyXG4gICAgICAgIGZpbGw9XCJub25lXCJcclxuICAgICAgICB2aWV3Qm94PVwiMCAwIDI0IDI0XCJcclxuICAgICAgICBzdHJva2U9XCJjdXJyZW50Q29sb3JcIlxyXG4gICAgICA+XHJcbiAgICAgICAgPHBhdGhcclxuICAgICAgICAgIHN0cm9rZUxpbmVjYXA9XCJyb3VuZFwiXHJcbiAgICAgICAgICBzdHJva2VMaW5lam9pbj1cInJvdW5kXCJcclxuICAgICAgICAgIHN0cm9rZVdpZHRoPXsyfVxyXG4gICAgICAgICAgZD1cIk02IDE4TDE4IDZNNiA2bDEyIDEyXCJcclxuICAgICAgICAvPlxyXG4gICAgICA8L3N2Zz5cclxuICAgICAgQ2xlYXIgQWxsXHJcbiAgICA8L2J1dHRvbj5cclxuICApO1xyXG59O1xyXG4iXSwibmFtZXMiOlsiUmVhY3QiLCJSaWJib25DbGVhckZpbHRlcnNCdXR0b24iLCJvbkNsZWFyIiwiYnV0dG9uIiwib25DbGljayIsImNsYXNzTmFtZSIsInRpdGxlIiwic3ZnIiwieG1sbnMiLCJmaWxsIiwidmlld0JveCIsInN0cm9rZSIsInBhdGgiLCJzdHJva2VMaW5lY2FwIiwic3Ryb2tlTGluZWpvaW4iLCJzdHJva2VXaWR0aCIsImQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/tracking/map/components/ribbon-clear.tsx\n");

/***/ }),

/***/ "(pages-dir-node)/./lib/services/MapboxService.ts":
/*!***************************************!*\
  !*** ./lib/services/MapboxService.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MapboxService: () => (/* binding */ MapboxService)\n/* harmony export */ });\n/* harmony import */ var _utils_getFlagImage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/getFlagImage */ \"(pages-dir-node)/./utils/getFlagImage.ts\");\n\nclass MapboxService {\n    static formatCityCountry(locationString, isDetailed) {\n        if (!locationString) return '';\n        const parts = locationString.split(',').map((p)=>p.trim());\n        if (parts.length >= 2) {\n            const country = parts[parts.length - 1];\n            let city = parts[0];\n            if (parts.length >= 3 && parts[0] === parts[1]) city = parts[0];\n            return `${city}, ${country}`;\n        }\n        return locationString;\n    }\n    static extractCountry(locationString) {\n        if (!locationString) return '';\n        const parts = locationString.split(',').map((p)=>p.trim());\n        return parts.length ? parts[parts.length - 1] : locationString;\n    }\n    static getLocationFlagUrl(locationString) {\n        if (!locationString) return null;\n        const country = this.extractCountry(locationString);\n        return (0,_utils_getFlagImage__WEBPACK_IMPORTED_MODULE_0__.getFlagImageUrl)(country);\n    }\n    static validateCoordinates(lat, lng) {\n        if (isNaN(lat) || isNaN(lng)) {\n            console.error(`Invalid coordinates: lat=${lat}, lng=${lng}`);\n            return false;\n        }\n        const isValidLat = lat >= -90 && lat <= 90;\n        const isValidLng = lng >= -180 && lng <= 180;\n        if (!isValidLat || !isValidLng) {\n            console.error(`Invalid coordinates detected: lat=${lat}, lng=${lng}`);\n            return false;\n        }\n        return true;\n    }\n    static async searchLocationWithMapbox(query, limit = 1, types, countryCode) {\n        try {\n            const params = new URLSearchParams({\n                query,\n                limit: limit.toString()\n            });\n            if (types) params.append('types', types);\n            if (countryCode) params.append('country', countryCode);\n            const response = await fetch(`/api/proxy/mapbox-geocode?${params.toString()}`, {\n                headers: {\n                    'Cache-Control': 'max-age=86400'\n                }\n            });\n            if (!response.ok) throw new Error(`Mapbox geocoding API error: ${response.status}`);\n            const data = await response.json();\n            if (!data.features?.length) return [];\n            return data.features.map((feature)=>{\n                const [lng, lat] = feature.center;\n                this.validateCoordinates(lat, lng);\n                return {\n                    lat,\n                    lng,\n                    name: feature.place_name,\n                    bbox: feature.bbox\n                };\n            });\n        } catch (error) {\n            console.error(`Mapbox location search failed:`, error);\n            throw error;\n        }\n    }\n    static async getCoordinatesFromQuery(query) {\n        const coordsMatch = query.match(/^(-?\\d+(\\.\\d+)?),\\s*(-?\\d+(\\.\\d+)?)$/);\n        if (coordsMatch) {\n            const lat = parseFloat(coordsMatch[1]);\n            const lng = parseFloat(coordsMatch[3]);\n            return {\n                lat,\n                lng,\n                name: `${lat}, ${lng}`\n            };\n        }\n        const results = await this.searchLocationWithMapbox(query, 1, 'place,postcode,address,poi,neighborhood,region,locality');\n        return results.length ? {\n            ...results[0],\n            name: results[0].name\n        } : null;\n    }\n    static async getLocationSuggestions(query, limit = 5) {\n        if (!query || query.trim().length < 2) return [];\n        const locations = await this.searchLocationWithMapbox(query, Math.max(5, limit), 'place,postcode,address,poi,neighborhood,region,locality');\n        return locations.slice(0, limit).map((loc)=>({\n                name: loc.name,\n                lat: loc.lat,\n                lng: loc.lng,\n                placeType: loc.name.split(',')[0]\n            }));\n    }\n    static async getLocationNameFromCoordinates(lat, lng) {\n        if (isNaN(lat) || isNaN(lng)) return `${lat.toFixed(4)}, ${lng.toFixed(4)}`;\n        const coords = `${lng},${lat}`;\n        try {\n            const response = await fetch(`/api/proxy/mapbox-geocode?query=${encodeURIComponent(coords)}`);\n            if (!response.ok) throw new Error(`Geocoding error: ${response.status}`);\n            const data = await response.json();\n            const feature = data.features?.[0];\n            if (!feature) return `${lat.toFixed(4)}, ${lng.toFixed(4)}`;\n            const placeItem = feature.context?.find((item)=>item.id.startsWith('place.'));\n            const regionItem = feature.context?.find((item)=>item.id.startsWith('region.'));\n            if (placeItem && regionItem) return `${placeItem.text}, ${regionItem.text}`;\n            if (placeItem) return placeItem.text;\n            if (regionItem) return regionItem.text;\n            return feature.place_name || feature.text;\n        } catch (error) {\n            console.error(`Reverse geocoding failed:`, error);\n            return `${lat.toFixed(4)}, ${lng.toFixed(4)}`;\n        }\n    }\n    static async postalCodeToCoordinates(postalCode, countryCode = 'us') {\n        try {\n            const response = await fetch(`/api/proxy/geocode?zip=${postalCode}&country=${countryCode}`, {\n                headers: {\n                    'Cache-Control': 'no-cache, no-store'\n                }\n            });\n            if (!response.ok) {\n                const errText = await response.text();\n                console.error(`Postal geocode error (${response.status}): ${errText}`);\n                return null;\n            }\n            const data = await response.json();\n            const match = data.result?.addressMatches?.[0]?.coordinates;\n            if (match) return {\n                lat: match.y,\n                lng: match.x\n            };\n            console.warn(`No coordinates found for postal code: ${postalCode}`);\n            return null;\n        } catch (error) {\n            console.error(`Postal code geocoding failed:`, error);\n            return null;\n        }\n    }\n    constructor(){\n        this.extractCountryFromFeature = (feature)=>{\n            if (!feature) return '';\n            const countryContext = feature.context?.find((c)=>c.id.startsWith('country.'));\n            if (countryContext) {\n                return countryContext.text;\n            }\n            if (feature.id.startsWith('country.')) {\n                return feature.text;\n            }\n            // Fallback to parsing place_name (your original logic)\n            if (feature.place_name) {\n                const parts = feature.place_name.split(',').map((p)=>p.trim());\n                return parts.length ? parts[parts.length - 1] : '';\n            }\n            return '';\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./lib/services/MapboxService.ts\n");

/***/ }),

/***/ "(pages-dir-node)/./lib/services/geofencing.ts":
/*!************************************!*\
  !*** ./lib/services/geofencing.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateDistance: () => (/* binding */ calculateDistance),\n/* harmony export */   createGeofence: () => (/* binding */ createGeofence),\n/* harmony export */   createGeofenceFromPostalCode: () => (/* binding */ createGeofenceFromPostalCode),\n/* harmony export */   fetchAircraftInGeofence: () => (/* binding */ fetchAircraftInGeofence),\n/* harmony export */   getAircraftNearLocation: () => (/* binding */ getAircraftNearLocation),\n/* harmony export */   getAircraftNearPostalCode: () => (/* binding */ getAircraftNearPostalCode),\n/* harmony export */   getAircraftNearSearchedLocation: () => (/* binding */ getAircraftNearSearchedLocation),\n/* harmony export */   getCoordinatesFromQuery: () => (/* binding */ getCoordinatesFromQuery),\n/* harmony export */   getLocationSuggestions: () => (/* binding */ getLocationSuggestions)\n/* harmony export */ });\n/* harmony import */ var _utils_geofenceAdapter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/geofenceAdapter */ \"(pages-dir-node)/./lib/utils/geofenceAdapter.ts\");\n/* harmony import */ var _MapboxService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MapboxService */ \"(pages-dir-node)/./lib/services/MapboxService.ts\");\n// lib/services/geofencing.ts\n\n\n/**\r\n * Create a geofence from a location search query\r\n *\r\n * @param query Location search query\r\n * @param radiusKm Radius in kilometers (default: 25km)\r\n * @param includeZipSearch If true, try to search as ZIP code if regular search fails\r\n * @returns Promise resolving to GeofenceParams or null if location not found\r\n */ async function createGeofenceFromPostalCode(postalCode, countryCode = 'us', radiusKm = 25) {\n    try {\n        const coordinates = await _MapboxService__WEBPACK_IMPORTED_MODULE_1__.MapboxService.postalCodeToCoordinates(postalCode, countryCode);\n        // Double-check coordinates are valid\n        if (!coordinates || !validateCoordinates(coordinates.lat, coordinates.lng)) {\n            console.error(`Invalid or missing coordinates for postal code ${postalCode} in ${countryCode}`);\n            return null;\n        }\n        console.log(`Creating ${radiusKm}km geofence around postal code ${postalCode} (${countryCode}) at coordinates: ${coordinates.lat}, ${coordinates.lng}`);\n        return createGeofence(coordinates.lat, coordinates.lng, radiusKm);\n    } catch (error) {\n        console.error(`Error creating geofence from postal code ${postalCode}:`, error);\n        return null;\n    }\n}\n/**\r\n * Get aircraft near a searched location\r\n *\r\n * @param query Location search query\r\n * @param radiusKm Radius in kilometers\r\n * @returns Promise resolving to aircraft in the area\r\n */ async function getAircraftNearSearchedLocation(query, radiusKm = 25) {\n    try {\n        // First check if the query looks like coordinates\n        const coordsRegex = /^(-?\\d+(\\.\\d+)?),\\s*(-?\\d+(\\.\\d+)?)$/;\n        const coordsMatch = query.match(coordsRegex);\n        if (coordsMatch) {\n            // It's coordinates, parse them\n            const lat = parseFloat(coordsMatch[1]);\n            const lng = parseFloat(coordsMatch[3]);\n            // Create geofence directly from coordinates\n            const geofence = createGeofence(lat, lng, radiusKm);\n            console.log(`Created ${radiusKm}km geofence for coordinates (${lat}, ${lng})`);\n            return await fetchAircraftInGeofence(geofence);\n        }\n        // Try using Mapbox for global address search\n        try {\n            const locations = await _MapboxService__WEBPACK_IMPORTED_MODULE_1__.MapboxService.searchLocationWithMapbox(query, 1, 'place,postcode,address,poi,neighborhood,region,locality');\n            if (locations && locations.length > 0) {\n                // We got a valid location from Mapbox\n                const location = locations[0];\n                const geofence = createGeofence(location.lat, location.lng, radiusKm);\n                console.log(`Created ${radiusKm}km geofence for location \"${location.name}\"`);\n                return await fetchAircraftInGeofence(geofence);\n            }\n        } catch (mapboxError) {\n            console.warn(`Mapbox search failed for query \"${query}\":`, mapboxError);\n        // Continue to next method if Mapbox fails\n        }\n        // Fallback to postal code lookup if everything else fails\n        try {\n            const geofence = await createGeofenceFromPostalCode(query, 'us', radiusKm);\n            if (geofence) {\n                console.log(`Created ${radiusKm}km geofence for postal code \"${query}\"`);\n                return await fetchAircraftInGeofence(geofence);\n            }\n        } catch (postalError) {\n            console.warn(`Postal code lookup failed for query \"${query}\":`, postalError);\n        }\n        console.error(`All location lookup methods failed for query: \"${query}\"`);\n        return [];\n    } catch (error) {\n        console.error(`Error getting aircraft near search \"${query}\":`, error);\n        return [];\n    }\n}\n/**\r\n * Get location suggestions from search query\r\n *\r\n * @param query Location search query\r\n * @param limit Maximum number of suggestions to return (default: 5)\r\n * @returns Promise resolving to array of location suggestions\r\n */ async function getLocationSuggestions(query, limit = 5) {\n    try {\n        if (!query || query.trim().length < 2) {\n            return [];\n        }\n        // Get location results with a higher limit for better suggestions\n        const locations = await _MapboxService__WEBPACK_IMPORTED_MODULE_1__.MapboxService.searchLocationWithMapbox(query, Math.max(5, limit), // Include these specific types for better suggestions\n        'place,postcode,address,poi,neighborhood,region,locality');\n        // Transform to a simpler suggestion format\n        return locations.slice(0, limit).map((location)=>({\n                name: location.name,\n                lat: location.lat,\n                lng: location.lng,\n                // Extract the first place type from the full Mapbox response\n                placeType: location.name.split(',')[0]\n            }));\n    } catch (error) {\n        console.error(`Error getting location suggestions for \"${query}\":`, error);\n        return [];\n    }\n}\nasync function getCoordinatesFromQuery(query) {\n    try {\n        // First check if the query looks like coordinates\n        const coordsRegex = /^(-?\\d+(\\.\\d+)?),\\s*(-?\\d+(\\.\\d+)?)$/;\n        const coordsMatch = query.match(coordsRegex);\n        if (coordsMatch) {\n            // It's coordinates, parse them\n            const lat = parseFloat(coordsMatch[1]);\n            const lng = parseFloat(coordsMatch[3]);\n            if (validateCoordinates(lat, lng)) {\n                return {\n                    lat,\n                    lng,\n                    name: `${lat}, ${lng}`\n                };\n            }\n        }\n        // Use Mapbox for general global addresses (most robust)\n        const locations = await _MapboxService__WEBPACK_IMPORTED_MODULE_1__.MapboxService.searchLocationWithMapbox(query, 1, 'place,postcode,address,poi,neighborhood,region,locality');\n        if (locations && locations.length > 0) {\n            return {\n                lat: locations[0].lat,\n                lng: locations[0].lng,\n                name: locations[0].name\n            };\n        }\n        console.error(`Could not resolve coordinates for query: \"${query}\"`);\n        return null;\n    } catch (error) {\n        console.error(`Error getting coordinates from query \"${query}\":`, error);\n        return null;\n    }\n}\n/**\r\n * Validates that coordinates are within global bounds\r\n */ function validateCoordinates(lat, lng) {\n    // Check for NaN or undefined values\n    if (isNaN(lat) || isNaN(lng)) {\n        console.error(`Invalid coordinates: lat or lng is NaN - lat: ${lat}, lng: ${lng}`);\n        return false;\n    }\n    // Basic validation for coordinates globally\n    const isValidLat = lat >= -90.0 && lat <= 90.0;\n    const isValidLng = lng >= -180.0 && lng <= 180.0;\n    const isValid = isValidLat && isValidLng;\n    if (!isValid) {\n        console.error(`Invalid coordinates detected: lat ${lat}, lng ${lng}`);\n        if (!isValidLat) console.error(`Latitude must be between -90 and 90`);\n        if (!isValidLng) console.error(`Longitude must be between -180 and 180`);\n    }\n    return isValid;\n}\n/**\r\n * Creates a geofence bounding box around a central point with radius in km\r\n *\r\n * @param centerLat Central latitude point\r\n * @param centerLng Central longitude point\r\n * @param radiusKm Radius in kilometers (default: 25km)\r\n * @returns GeofenceParams object with bounding box coordinates\r\n */ function createGeofence(centerLat, centerLng, radiusKm = 10) {\n    // Validate input coordinates\n    if (!validateCoordinates(centerLat, centerLng)) {\n        console.warn(`Creating geofence with potentially invalid coordinates: ${centerLat}, ${centerLng}`);\n    }\n    // Earth's radius in km\n    const EARTH_RADIUS = 6371;\n    // Convert radius from km to degrees (approximate)\n    // 1 degree of latitude is approximately 111km\n    const latDelta = radiusKm / EARTH_RADIUS * (180 / Math.PI);\n    // Longitude degrees vary based on latitude\n    // The width of 1 degree of longitude decreases as you move away from the equator\n    const lngDelta = radiusKm / EARTH_RADIUS * (180 / Math.PI) / Math.cos(centerLat * Math.PI / 180);\n    // Calculate the geofence\n    const geofence = {\n        lamin: Math.max(-90, centerLat - latDelta),\n        lamax: Math.min(90, centerLat + latDelta),\n        lomin: Math.max(-180, centerLng - lngDelta),\n        lomax: Math.min(180, centerLng + lngDelta)\n    };\n    // Log the calculated geofence for debugging\n    console.log(`Created geofence: lat [${geofence.lamin}, ${geofence.lamax}], lng [${geofence.lomin}, ${geofence.lomax}]`);\n    return geofence;\n}\n/**\r\n * Fetches aircraft within a specified geofence area\r\n *\r\n * @param geofence Geofence parameters defining the bounding box\r\n * @returns Promise resolving to an array of aircraft within the geofence\r\n */ async function fetchAircraftInGeofence(geofence) {\n    try {\n        console.log(`[Geofencing] Fetching aircraft in geofence: \n      Lat: ${geofence.lamin} to ${geofence.lamax}, \n      Lng: ${geofence.lomin} to ${geofence.lomax}`);\n        // Create API URL with geofence parameters for your proxy endpoint\n        const response = await fetch('/api/proxy/opensky', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                geofence\n            })\n        });\n        if (!response.ok) {\n            throw new Error(`Error fetching geofenced aircraft: ${response.status} ${response.statusText}`);\n        }\n        const data = await response.json();\n        // Check if the format matches what we expect\n        if (!data.success || !data.data || !Array.isArray(data.data.states)) {\n            console.warn('[Geofencing] Unexpected response format from OpenSky proxy:', data);\n            return [];\n        }\n        console.log(`[Geofencing] Retrieved ${data.data.states.length} aircraft within geofence`);\n        // Add some base properties to each aircraft\n        const rawAircraft = data.data.states.map((aircraft)=>({\n                ...aircraft,\n                // Ensure core fields exist\n                ICAO24: aircraft.ICAO24 || aircraft.transponder || '',\n                lastSeen: Date.now()\n            }));\n        if (rawAircraft.length > 0) {\n            console.log('[Debug] Raw aircraft data sample:', rawAircraft[0]);\n        }\n        // Use the adapter to transform the raw aircraft data to ExtendedAircraft format\n        const adaptedAircraft = (0,_utils_geofenceAdapter__WEBPACK_IMPORTED_MODULE_0__.adaptGeofenceAircraft)(rawAircraft);\n        // Debug adapted data\n        if (adaptedAircraft.length > 0) {\n            console.log('[Debug] Adapted aircraft sample:', adaptedAircraft[0]);\n        }\n        console.log(`[Geofencing] Transformed ${adaptedAircraft.length} aircraft to ExtendedAircraft format`);\n        if (adaptedAircraft.length > 0) {\n            console.log('[Geofencing] Sample transformed aircraft:', adaptedAircraft[0]);\n        }\n        return adaptedAircraft;\n    } catch (error) {\n        console.error('[Geofencing] Error fetching aircraft in geofence:', error);\n        return [];\n    }\n}\n/**\r\n * Get aircraft near a ZIP code\r\n *\r\n * @param zipCode US ZIP code\r\n * @param radiusKm Radius in kilometers\r\n * @returns Promise resolving to aircraft in the area\r\n */ async function getAircraftNearPostalCode(postalCode, radiusKm = 25) {\n    try {\n        const geofence = await createGeofenceFromPostalCode(postalCode, 'us', radiusKm);\n        if (!geofence) {\n            throw new Error(`Could not create geofence for Postal Code ${postalCode}`);\n        }\n        console.log(`Created ${radiusKm}km geofence around Postal Code ${postalCode}`);\n        return await fetchAircraftInGeofence(geofence);\n    } catch (error) {\n        console.error(`Error getting aircraft near Postal Code ${postalCode}:`, error);\n        return [];\n    }\n}\n/**\r\n * Get aircraft near a specific location\r\n *\r\n * @param lat Latitude\r\n * @param lng Longitude\r\n * @param radiusKm Radius in kilometers\r\n * @returns Promise resolving to aircraft in the area\r\n */ async function getAircraftNearLocation(lat, lng, radiusKm = 25) {\n    try {\n        // Validate coordinates\n        if (!validateCoordinates(lat, lng)) {\n            console.warn(`Potentially invalid coordinates for location search: ${lat}, ${lng}`);\n        }\n        const geofence = createGeofence(lat, lng, radiusKm);\n        console.log(`Created ${radiusKm}km geofence around location (${lat}, ${lng})`);\n        return await fetchAircraftInGeofence(geofence);\n    } catch (error) {\n        console.error(`Error getting aircraft near location (${lat}, ${lng}):`, error);\n        return [];\n    }\n}\n/**\r\n * Calculates distance between two coordinates in kilometers\r\n *\r\n * @param lat1 First latitude\r\n * @param lng1 First longitude\r\n * @param lat2 Second latitude\r\n * @param lng2 Second longitude\r\n * @returns Distance in kilometers\r\n */ function calculateDistance(lat1, lng1, lat2, lng2) {\n    // Haversine formula\n    const EARTH_RADIUS = 6371; // km\n    const dLat = (lat2 - lat1) * Math.PI / 180;\n    const dLng = (lng2 - lng1) * Math.PI / 180;\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return EARTH_RADIUS * c;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./lib/services/geofencing.ts\n");

/***/ }),

/***/ "(pages-dir-node)/./lib/utils/geofenceAdapter.ts":
/*!**************************************!*\
  !*** ./lib/utils/geofenceAdapter.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   adaptGeofenceAircraft: () => (/* binding */ adaptGeofenceAircraft)\n/* harmony export */ });\n/* harmony import */ var _utils_aircraft_transform1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/aircraft-transform1 */ \"(pages-dir-node)/./utils/aircraft-transform1.ts\");\n// lib/utils/geofenceAdapter.ts\n\n/**\r\n * Adapts aircraft data from geofencing to be compatible with the main system\r\n *\r\n * @param geofenceAircraft The aircraft array from geofencing\r\n * @returns ExtendedAircraft[] compatible with your system\r\n */ function adaptGeofenceAircraft(geofenceAircraft) {\n    console.log(`[GeofenceAdapter] Adapting ${geofenceAircraft.length} aircraft from geofence`);\n    // Debug the first aircraft if available\n    if (geofenceAircraft.length > 0) {\n        console.log('[GeofenceAdapter] Sample raw aircraft data:', Object.keys(geofenceAircraft[0]).reduce((acc, key)=>{\n            // Only include non-objects for clarity\n            const value = geofenceAircraft[0][key];\n            if (typeof value !== 'object' || value === null) {\n                acc[key] = value;\n            }\n            return acc;\n        }, {}));\n    }\n    const adapted = geofenceAircraft.map((aircraft)=>{\n        // First, normalize to base Aircraft type using your existing utilities\n        const baseAircraft = _utils_aircraft_transform1__WEBPACK_IMPORTED_MODULE_0__.BaseTransforms.normalize({\n            // Required core fields\n            ICAO24: aircraft.ICAO24 || '',\n            // Map coordinates - handle both formats\n            latitude: aircraft.latitude || aircraft.lat || 0,\n            longitude: aircraft.longitude || aircraft.lng || 0,\n            // Flight data\n            altitude: aircraft.altitude || aircraft.baro_altitude || aircraft.geo_altitude || 0,\n            heading: aircraft.heading || aircraft.true_track || 0,\n            velocity: aircraft.velocity || 0,\n            // Status\n            on_ground: _utils_aircraft_transform1__WEBPACK_IMPORTED_MODULE_0__.OpenSkyTransforms.convertToBoolean(aircraft.on_ground || aircraft.isOnGround || aircraft.onGround),\n            // Timestamps\n            last_contact: aircraft.last_contact || aircraft.lastContact || Math.floor(Date.now() / 1000),\n            lastSeen: aircraft.lastSeen || Date.now(),\n            // Aircraft information\n            REGISTRATION: aircraft['REGISTRATION'] || aircraft.registration || 'UNKNOWN',\n            MANUFACTURER: aircraft.MANUFACTURER || aircraft.manufacturerName || 'Unknown',\n            MODEL: aircraft.MODEL || aircraft.type_aircraft || '',\n            OPERATOR: aircraft.OPERATOR || '',\n            NAME: aircraft.NAME || aircraft.name || '',\n            CITY: aircraft.CITY || aircraft.city || '',\n            STATE: aircraft.STATE || aircraft.state || '',\n            TYPE_AIRCRAFT: aircraft.TYPE_AIRCRAFT || aircraft.type_aircraft || aircraft.type || 'Unknown',\n            TYPE_REGISTRANT: aircraft.TYPE_REGISTRANT || aircraft.ownerType || 0,\n            // Flags\n            isTracked: true\n        });\n        // Then cast to ExtendedAircraft with the required properties\n        const extendedAircraft = baseAircraft;\n        // Add the required properties for ExtendedAircraft\n        extendedAircraft.type = determineAircraftType(baseAircraft);\n        extendedAircraft.isGovernment = typeof baseAircraft.TYPE_REGISTRANT === 'string' && baseAircraft.TYPE_REGISTRANT === 'Government' || baseAircraft.TYPE_REGISTRANT === 5;\n        // Make sure marker field exists - critical for rendering\n        extendedAircraft.marker = 'default';\n        // Ensure these properties exist (used in createAircraftIcon)\n        if (typeof extendedAircraft.heading !== 'number') extendedAircraft.heading = 0;\n        if (typeof extendedAircraft.on_ground !== 'boolean') extendedAircraft.on_ground = false;\n        return extendedAircraft;\n    });\n    // Debug the first adapted aircraft if available\n    if (adapted.length > 0) {\n        console.log('[GeofenceAdapter] First aircraft after adaptation:', {\n            ICAO24: adapted[0].ICAO24,\n            latitude: adapted[0].latitude,\n            longitude: adapted[0].longitude,\n            heading: adapted[0].heading,\n            type: adapted[0].type,\n            isGovernment: adapted[0].isGovernment,\n            marker: adapted[0].marker,\n            on_ground: adapted[0].on_ground,\n            isTracked: adapted[0].isTracked\n        });\n    }\n    return adapted;\n}\n/**\r\n * Determines aircraft type based on available information\r\n */ function determineAircraftType(aircraft) {\n    // Check if it mentions helicopter in various fields\n    const possibleHelicopterFields = [\n        'TYPE_AIRCRAFT',\n        'MODEL',\n        'MANUFACTURER'\n    ];\n    for (const field of possibleHelicopterFields){\n        const value = aircraft[field];\n        if (typeof value === 'string' && (value.toLowerCase().includes('helicopter') || value.toLowerCase().includes('helo') || value.toLowerCase().includes('rotor'))) {\n            return 'helicopter';\n        }\n    }\n    // Default to plane\n    return 'plane';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./lib/utils/geofenceAdapter.ts\n");

/***/ }),

/***/ "(pages-dir-node)/./lib/utils/geofenceEnricher.ts":
/*!***************************************!*\
  !*** ./lib/utils/geofenceEnricher.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearIcaoCache: () => (/* binding */ clearIcaoCache),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   enrichGeofenceAircraft: () => (/* binding */ enrichGeofenceAircraft)\n/* harmony export */ });\n// lib/utils/geofenceEnricher.ts\nconst icaoCache = new Map();\nconst CACHE_TTL = 24 * 60 * 60 * 1000; // 24 hours in milliseconds\n/**\r\n * Enriches geofence aircraft with static data from existing tracking API\r\n *\r\n * @param geofenceAircraft The aircraft data from geofence search\r\n * @returns Promise that resolves to enriched aircraft data\r\n */ async function enrichGeofenceAircraft(geofenceAircraft) {\n    console.log(`[GeofenceEnricher] Enriching ${geofenceAircraft.length} aircraft with static data`);\n    // Extract ICAO24 codes from the aircraft data\n    const icaoCodes = geofenceAircraft.map((aircraft)=>aircraft.ICAO24?.toLowerCase()).filter(Boolean);\n    if (icaoCodes.length === 0) {\n        console.log('[GeofenceEnricher] No valid ICAO24 codes to enrich');\n        return geofenceAircraft;\n    }\n    // Separate cached and uncached ICAO24 codes\n    const uncachedIcaos = [];\n    const cachedData = {};\n    const now = Date.now();\n    // Check which ICAOs we already have in cache\n    icaoCodes.forEach((icao)=>{\n        const cached = icaoCache.get(icao);\n        if (cached && now - cached.timestamp < CACHE_TTL) {\n            cachedData[icao] = cached.data;\n        } else {\n            uncachedIcaos.push(icao);\n            // Clean up expired cache entries\n            if (cached) {\n                icaoCache.delete(icao);\n            }\n        }\n    });\n    console.log(`[GeofenceEnricher] Using ${Object.keys(cachedData).length} cached entries, looking up ${uncachedIcaos.length} from API`);\n    // Fetch data for uncached ICAOs from the existing tracking API\n    let apiResults = [];\n    if (uncachedIcaos.length > 0) {\n        try {\n            // Use existing tracking/live API endpoint - this already does the DB lookup for us\n            const response = await fetch('/api/tracking/live', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    ICAO24s: uncachedIcaos,\n                    includeStatic: true,\n                    MANUFACTURER: 'geofence'\n                })\n            });\n            if (!response.ok) {\n                throw new Error(`API error: ${response.status} ${response.statusText}`);\n            }\n            const data = await response.json();\n            apiResults = data.aircraft || [];\n            // Add new results to cache\n            apiResults.forEach((aircraft)=>{\n                if (aircraft.ICAO24) {\n                    const icao = aircraft.ICAO24.toLowerCase();\n                    icaoCache.set(icao, {\n                        data: aircraft,\n                        timestamp: now\n                    });\n                }\n            });\n            console.log(`[GeofenceEnricher] Retrieved ${apiResults.length} aircraft from API`);\n        } catch (error) {\n            console.error('[GeofenceEnricher] Error fetching aircraft from API:', error);\n        }\n    }\n    // Convert API results to lookup map\n    const apiLookup = {};\n    apiResults.forEach((aircraft)=>{\n        if (aircraft.ICAO24) {\n            apiLookup[aircraft.ICAO24.toLowerCase()] = aircraft;\n        }\n    });\n    // Combine cached and fresh API lookups\n    const combinedLookup = {\n        ...cachedData,\n        ...apiLookup\n    };\n    // Enrich aircraft with static data\n    const enrichedAircraft = geofenceAircraft.map((aircraft)=>{\n        if (!aircraft.ICAO24) return aircraft;\n        const icao = aircraft.ICAO24.toLowerCase();\n        const staticData = combinedLookup[icao];\n        if (staticData) {\n            // Merge the static data with the geofence data, preserving position data\n            const enriched = {\n                ...staticData,\n                ...aircraft,\n                // Make sure these fields are taken from static data even if geofence data has them\n                MANUFACTURER: staticData.MANUFACTURER || aircraft.MANUFACTURER || 'Unknown',\n                MODEL: staticData.MODEL || aircraft.MODEL || staticData.TYPE_AIRCRAFT || 'Unknown',\n                TYPE_AIRCRAFT: staticData.TYPE_AIRCRAFT || aircraft.TYPE_AIRCRAFT || staticData.MODEL || 'Unknown',\n                // Ensure type and isGovernment are set for icon rendering\n                type: getAircraftType(staticData),\n                isGovernment: isGovernmentAircraft(staticData),\n                // Other key fields from static data to preserve\n                REGISTRATION: staticData['REGISTRATION'] || aircraft['REGISTRATION'] || '',\n                NAME: staticData.NAME || staticData.name || aircraft.NAME || '',\n                CITY: staticData.CITY || staticData.city || aircraft.CITY || '',\n                STATE: staticData.STATE || staticData.state || aircraft.STATE || '',\n                TYPE_REGISTRANT: staticData.TYPE_REGISTRANT || staticData.ownerType || aircraft.TYPE_REGISTRANT || aircraft.ownerType || '',\n                // Ensure these are preserved from geofence data\n                latitude: aircraft.latitude,\n                longitude: aircraft.longitude,\n                altitude: aircraft.altitude,\n                heading: aircraft.heading,\n                velocity: aircraft.velocity,\n                on_ground: aircraft.on_ground,\n                lastSeen: aircraft.lastSeen || Date.now()\n            };\n            return enriched;\n        }\n        // No static data found, ensure the aircraft has type and isGovernment for rendering\n        return {\n            ...aircraft,\n            type: aircraft.type || determineTypeFromModel(aircraft.MODEL) || 'plane',\n            isGovernment: aircraft.isGovernment || false\n        };\n    });\n    // Log some stats about the enrichment\n    const enrichedCount = enrichedAircraft.filter((a)=>a.MANUFACTURER !== 'Unknown').length;\n    console.log(`[GeofenceEnricher] Successfully enriched ${enrichedCount} out of ${geofenceAircraft.length} aircraft`);\n    return enrichedAircraft;\n}\n/**\r\n * Determines aircraft type based on available information\r\n */ function getAircraftType(aircraft) {\n    // If aircraft already has a type field, use it\n    if (aircraft.type && typeof aircraft.type === 'string') {\n        return aircraft.type;\n    }\n    // Combine possible type fields for checking\n    const typeString = [\n        aircraft.TYPE_AIRCRAFT,\n        aircraft.MODEL\n    ].filter(Boolean).join(' ').toLowerCase();\n    return determineTypeFromModel(typeString) || 'plane';\n}\n/**\r\n * Determines aircraft type from MODEL string\r\n */ function determineTypeFromModel(modelString) {\n    if (!modelString) return null;\n    const MODEL = modelString.toLowerCase();\n    // Check for different aircraft types\n    if (MODEL.includes('helicopter') || MODEL.includes('rotor')) {\n        return 'helicopter';\n    }\n    if (MODEL.includes('jet') || MODEL.includes('airliner')) {\n        return 'jet';\n    }\n    if (MODEL.includes('turboprop') || MODEL.includes('turbo prop')) {\n        return 'turboprop';\n    }\n    if (MODEL.includes('twin')) {\n        return 'twinEngine';\n    }\n    if (MODEL.includes('single') || MODEL.includes('piston')) {\n        return 'singleEngine';\n    }\n    // Check for common manufacturers\n    if (MODEL.includes('bell') || MODEL.includes('robinson')) {\n        return 'helicopter';\n    }\n    if (MODEL.includes('boeing 7') || MODEL.includes('airbus') || MODEL.includes('embraer')) {\n        return 'jet';\n    }\n    // Default to \"plane\"\n    return 'plane';\n}\n/**\r\n * Determines if an aircraft is a government aircraft\r\n */ function isGovernmentAircraft(aircraft) {\n    // Check owner type if available\n    if (aircraft.TYPE_REGISTRANT === 5 || aircraft.ownerType === 5) {\n        return true;\n    }\n    // Check operator or name for government keywords\n    const govKeywords = [\n        'government',\n        'police',\n        'sheriff',\n        'military',\n        'air force',\n        'navy',\n        'coast guard',\n        'federal'\n    ];\n    const fieldsToCheck = [\n        aircraft.OPERATOR,\n        aircraft.NAME,\n        aircraft.name\n    ].filter(Boolean).join(' ').toLowerCase();\n    return govKeywords.some((keyword)=>fieldsToCheck.includes(keyword));\n}\n/**\r\n * Clears the ICAO24 cache\r\n */ function clearIcaoCache() {\n    icaoCache.clear();\n    console.log('[GeofenceEnricher] ICAO24 cache cleared');\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    enrichGeofenceAircraft,\n    clearIcaoCache\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./lib/utils/geofenceEnricher.ts\n");

/***/ }),

/***/ "(pages-dir-node)/./styles/AircraftSpinner.module.css":
/*!*******************************************!*\
  !*** ./styles/AircraftSpinner.module.css ***!
  \*******************************************/
/***/ ((module) => {

eval("// Exports\nmodule.exports = {\n\t\"loadingOverlay\": \"AircraftSpinner_loadingOverlay__EfONU\",\n\t\"loadingContainer\": \"AircraftSpinner_loadingContainer__GLcKB\",\n\t\"aircraft\": \"AircraftSpinner_aircraft__wJHkz\",\n\t\"moveAircraft\": \"AircraftSpinner_moveAircraft__z9rlY\",\n\t\"aircraft2\": \"AircraftSpinner_aircraft2__HK5bd\",\n\t\"aircraft3\": \"AircraftSpinner_aircraft3__fakOu\",\n\t\"aircraft4\": \"AircraftSpinner_aircraft4__NokXu\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL3N0eWxlcy9BaXJjcmFmdFNwaW5uZXIubW9kdWxlLmNzcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxzYXRob1xcRG9jdW1lbnRzXFxQcm9qZWN0c1xcYWlyY3JhZnQtdHJhY2tpbmdcXHN0eWxlc1xcQWlyY3JhZnRTcGlubmVyLm1vZHVsZS5jc3MiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRXhwb3J0c1xubW9kdWxlLmV4cG9ydHMgPSB7XG5cdFwibG9hZGluZ092ZXJsYXlcIjogXCJBaXJjcmFmdFNwaW5uZXJfbG9hZGluZ092ZXJsYXlfX0VmT05VXCIsXG5cdFwibG9hZGluZ0NvbnRhaW5lclwiOiBcIkFpcmNyYWZ0U3Bpbm5lcl9sb2FkaW5nQ29udGFpbmVyX19HTGNLQlwiLFxuXHRcImFpcmNyYWZ0XCI6IFwiQWlyY3JhZnRTcGlubmVyX2FpcmNyYWZ0X193SkhrelwiLFxuXHRcIm1vdmVBaXJjcmFmdFwiOiBcIkFpcmNyYWZ0U3Bpbm5lcl9tb3ZlQWlyY3JhZnRfX3o5cmxZXCIsXG5cdFwiYWlyY3JhZnQyXCI6IFwiQWlyY3JhZnRTcGlubmVyX2FpcmNyYWZ0Ml9fSEs1YmRcIixcblx0XCJhaXJjcmFmdDNcIjogXCJBaXJjcmFmdFNwaW5uZXJfYWlyY3JhZnQzX19mYWtPdVwiLFxuXHRcImFpcmNyYWZ0NFwiOiBcIkFpcmNyYWZ0U3Bpbm5lcl9haXJjcmFmdDRfX05va1h1XCJcbn07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-node)/./styles/AircraftSpinner.module.css\n");

/***/ }),

/***/ "(pages-dir-node)/./styles/SearchRibbonSpinner.module.css":
/*!***********************************************!*\
  !*** ./styles/SearchRibbonSpinner.module.css ***!
  \***********************************************/
/***/ ((module) => {

eval("// Exports\nmodule.exports = {\n\t\"searchRibbonContainer\": \"SearchRibbonSpinner_searchRibbonContainer__3G5dt\",\n\t\"searchRibbon\": \"SearchRibbonSpinner_searchRibbon__thop1\",\n\t\"pulse\": \"SearchRibbonSpinner_pulse__oImWg\",\n\t\"aircraftContainer\": \"SearchRibbonSpinner_aircraftContainer__m4v61\",\n\t\"aircraft\": \"SearchRibbonSpinner_aircraft__IN58D\",\n\t\"fly\": \"SearchRibbonSpinner_fly__xsXyx\",\n\t\"aircraft2\": \"SearchRibbonSpinner_aircraft2__4X1GE\",\n\t\"aircraft3\": \"SearchRibbonSpinner_aircraft3__CTzKH\",\n\t\"loadingText\": \"SearchRibbonSpinner_loadingText__MDuog\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL3N0eWxlcy9TZWFyY2hSaWJib25TcGlubmVyLm1vZHVsZS5jc3MiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXHNhdGhvXFxEb2N1bWVudHNcXFByb2plY3RzXFxhaXJjcmFmdC10cmFja2luZ1xcc3R5bGVzXFxTZWFyY2hSaWJib25TcGlubmVyLm1vZHVsZS5jc3MiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRXhwb3J0c1xubW9kdWxlLmV4cG9ydHMgPSB7XG5cdFwic2VhcmNoUmliYm9uQ29udGFpbmVyXCI6IFwiU2VhcmNoUmliYm9uU3Bpbm5lcl9zZWFyY2hSaWJib25Db250YWluZXJfXzNHNWR0XCIsXG5cdFwic2VhcmNoUmliYm9uXCI6IFwiU2VhcmNoUmliYm9uU3Bpbm5lcl9zZWFyY2hSaWJib25fX3Rob3AxXCIsXG5cdFwicHVsc2VcIjogXCJTZWFyY2hSaWJib25TcGlubmVyX3B1bHNlX19vSW1XZ1wiLFxuXHRcImFpcmNyYWZ0Q29udGFpbmVyXCI6IFwiU2VhcmNoUmliYm9uU3Bpbm5lcl9haXJjcmFmdENvbnRhaW5lcl9fbTR2NjFcIixcblx0XCJhaXJjcmFmdFwiOiBcIlNlYXJjaFJpYmJvblNwaW5uZXJfYWlyY3JhZnRfX0lONThEXCIsXG5cdFwiZmx5XCI6IFwiU2VhcmNoUmliYm9uU3Bpbm5lcl9mbHlfX3hzWHl4XCIsXG5cdFwiYWlyY3JhZnQyXCI6IFwiU2VhcmNoUmliYm9uU3Bpbm5lcl9haXJjcmFmdDJfXzRYMUdFXCIsXG5cdFwiYWlyY3JhZnQzXCI6IFwiU2VhcmNoUmliYm9uU3Bpbm5lcl9haXJjcmFmdDNfX0NUektIXCIsXG5cdFwibG9hZGluZ1RleHRcIjogXCJTZWFyY2hSaWJib25TcGlubmVyX2xvYWRpbmdUZXh0X19NRHVvZ1wiXG59O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-node)/./styles/SearchRibbonSpinner.module.css\n");

/***/ }),

/***/ "(pages-dir-node)/./utils/CountryCodes.ts":
/*!*******************************!*\
  !*** ./utils/CountryCodes.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   countryNameToCode: () => (/* binding */ countryNameToCode)\n/* harmony export */ });\nconst countryNameToCode = {\n    Afghanistan: 'AF',\n    Albania: 'AL',\n    Algeria: 'DZ',\n    Andorra: 'AD',\n    Angola: 'AO',\n    'Antigua and Barbuda': 'AG',\n    Argentina: 'AR',\n    Armenia: 'AM',\n    Australia: 'AU',\n    Austria: 'AT',\n    Azerbaijan: 'AZ',\n    Bahamas: 'BS',\n    Bahrain: 'BH',\n    Bangladesh: 'BD',\n    Barbados: 'BB',\n    Belarus: 'BY',\n    Belgium: 'BE',\n    Belize: 'BZ',\n    Benin: 'BJ',\n    Bhutan: 'BT',\n    Bolivia: 'BO',\n    'Bosnia and Herzegovina': 'BA',\n    Botswana: 'BW',\n    Brazil: 'BR',\n    Brunei: 'BN',\n    Bulgaria: 'BG',\n    'Burkina Faso': 'BF',\n    Burundi: 'BI',\n    'Cabo Verde': 'CV',\n    Cambodia: 'KH',\n    Cameroon: 'CM',\n    Canada: 'CA',\n    'Central African Republic': 'CF',\n    Chad: 'TD',\n    Chile: 'CL',\n    China: 'CN',\n    Colombia: 'CO',\n    Comoros: 'KM',\n    'Costa Rica': 'CR',\n    Croatia: 'HR',\n    Cuba: 'CU',\n    Cyprus: 'CY',\n    'Czech Republic': 'CZ',\n    'Democratic Republic of the Congo': 'CD',\n    Denmark: 'DK',\n    Djibouti: 'DJ',\n    Dominica: 'DM',\n    'Dominican Republic': 'DO',\n    Ecuador: 'EC',\n    Egypt: 'EG',\n    'El Salvador': 'SV',\n    'Equatorial Guinea': 'GQ',\n    Eritrea: 'ER',\n    Estonia: 'EE',\n    Eswatini: 'SZ',\n    Ethiopia: 'ET',\n    Fiji: 'FJ',\n    Finland: 'FI',\n    France: 'FR',\n    Gabon: 'GA',\n    Gambia: 'GM',\n    Georgia: 'GE',\n    Germany: 'DE',\n    Ghana: 'GH',\n    Greece: 'GR',\n    Grenada: 'GD',\n    Guatemala: 'GT',\n    Guinea: 'GN',\n    'Guinea-Bissau': 'GW',\n    Guyana: 'GY',\n    Haiti: 'HT',\n    Honduras: 'HN',\n    Hungary: 'HU',\n    Iceland: 'IS',\n    India: 'IN',\n    Indonesia: 'ID',\n    Iran: 'IR',\n    Iraq: 'IQ',\n    Ireland: 'IE',\n    Israel: 'IL',\n    Italy: 'IT',\n    'Ivory Coast': 'CI',\n    Jamaica: 'JM',\n    Japan: 'JP',\n    Jordan: 'JO',\n    Kazakhstan: 'KZ',\n    Kenya: 'KE',\n    Kiribati: 'KI',\n    Kuwait: 'KW',\n    Kyrgyzstan: 'KG',\n    Laos: 'LA',\n    Latvia: 'LV',\n    Lebanon: 'LB',\n    Lesotho: 'LS',\n    Liberia: 'LR',\n    Libya: 'LY',\n    Liechtenstein: 'LI',\n    Lithuania: 'LT',\n    Luxembourg: 'LU',\n    Madagascar: 'MG',\n    Malawi: 'MW',\n    Malaysia: 'MY',\n    Maldives: 'MV',\n    Mali: 'ML',\n    Malta: 'MT',\n    'Marshall Islands': 'MH',\n    Mauritania: 'MR',\n    Mauritius: 'MU',\n    Mexico: 'MX',\n    Micronesia: 'FM',\n    Moldova: 'MD',\n    Monaco: 'MC',\n    Mongolia: 'MN',\n    Montenegro: 'ME',\n    Morocco: 'MA',\n    Mozambique: 'MZ',\n    Myanmar: 'MM',\n    Namibia: 'NA',\n    Nauru: 'NR',\n    Nepal: 'NP',\n    Netherlands: 'NL',\n    'New Zealand': 'NZ',\n    Nicaragua: 'NI',\n    Niger: 'NE',\n    Nigeria: 'NG',\n    'North Korea': 'KP',\n    'North Macedonia': 'MK',\n    Norway: 'NO',\n    Oman: 'OM',\n    Pakistan: 'PK',\n    Palau: 'PW',\n    Panama: 'PA',\n    'Papua New Guinea': 'PG',\n    Paraguay: 'PY',\n    Peru: 'PE',\n    Philippines: 'PH',\n    Poland: 'PL',\n    Portugal: 'PT',\n    Qatar: 'QA',\n    'Republic of the Congo': 'CG',\n    Romania: 'RO',\n    Russia: 'RU',\n    Rwanda: 'RW',\n    'Saint Kitts and Nevis': 'KN',\n    'Saint Lucia': 'LC',\n    'Saint Vincent and the Grenadines': 'VC',\n    Samoa: 'WS',\n    'San Marino': 'SM',\n    'Sao Tome and Principe': 'ST',\n    'Saudi Arabia': 'SA',\n    Senegal: 'SN',\n    Serbia: 'RS',\n    Seychelles: 'SC',\n    'Sierra Leone': 'SL',\n    Singapore: 'SG',\n    Slovakia: 'SK',\n    Slovenia: 'SI',\n    'Solomon Islands': 'SB',\n    Somalia: 'SO',\n    'South Africa': 'ZA',\n    'South Korea': 'KR',\n    'South Sudan': 'SS',\n    Spain: 'ES',\n    'Sri Lanka': 'LK',\n    Sudan: 'SD',\n    Suriname: 'SR',\n    Sweden: 'SE',\n    Switzerland: 'CH',\n    Syria: 'SY',\n    Taiwan: 'TW',\n    Tajikistan: 'TJ',\n    Tanzania: 'TZ',\n    Thailand: 'TH',\n    'Timor-Leste': 'TL',\n    Togo: 'TG',\n    Tonga: 'TO',\n    'Trinidad and Tobago': 'TT',\n    Tunisia: 'TN',\n    Turkey: 'TR',\n    Turkmenistan: 'TM',\n    Tuvalu: 'TV',\n    Uganda: 'UG',\n    Ukraine: 'UA',\n    'United Arab Emirates': 'AE',\n    'United Kingdom': 'GB',\n    'United States': 'US',\n    Uruguay: 'UY',\n    Uzbekistan: 'UZ',\n    Vanuatu: 'VU',\n    'Vatican City': 'VA',\n    Venezuela: 'VE',\n    Vietnam: 'VN',\n    Yemen: 'YE',\n    Zambia: 'ZM',\n    Zimbabwe: 'ZW'\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./utils/CountryCodes.ts\n");

/***/ }),

/***/ "(pages-dir-node)/./utils/aircraft-transform1.ts":
/*!**************************************!*\
  !*** ./utils/aircraft-transform1.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseTransforms: () => (/* binding */ BaseTransforms),\n/* harmony export */   CacheTransforms: () => (/* binding */ CacheTransforms),\n/* harmony export */   DataCleanupUtils: () => (/* binding */ DataCleanupUtils),\n/* harmony export */   DatabaseTransforms: () => (/* binding */ DatabaseTransforms),\n/* harmony export */   OpenSkyError: () => (/* binding */ OpenSkyError),\n/* harmony export */   OpenSkyTransforms: () => (/* binding */ OpenSkyTransforms),\n/* harmony export */   OpenSkyUtils: () => (/* binding */ OpenSkyUtils),\n/* harmony export */   createBaseAircraft: () => (/* binding */ createBaseAircraft),\n/* harmony export */   isOpenSkyState: () => (/* binding */ isOpenSkyState),\n/* harmony export */   isValidPositionData: () => (/* binding */ isValidPositionData),\n/* harmony export */   normalizeAircraft: () => (/* binding */ normalizeAircraft),\n/* harmony export */   parsePositionData: () => (/* binding */ parsePositionData),\n/* harmony export */   transformAircraft: () => (/* binding */ transformAircraft),\n/* harmony export */   transformToExtendedAircraft: () => (/* binding */ transformToExtendedAircraft)\n/* harmony export */ });\n//utils/aircraft-transform.ts\nconst DEFAULT_VALUES = {\n    STRING: 'Unknown',\n    NUMBER: 0,\n    BOOL: false,\n    EMPTY_STRING: ''\n};\n/**\r\n * Base transformer and validation utilities\r\n */ const BaseTransforms = {\n    createBase (currentTime = Date.now()) {\n        return {\n            ICAO24: DEFAULT_VALUES.EMPTY_STRING,\n            REGISTRATION: DEFAULT_VALUES.STRING,\n            MANUFACTURER: DEFAULT_VALUES.STRING,\n            MODEL: DEFAULT_VALUES.STRING,\n            OPERATOR: DEFAULT_VALUES.STRING,\n            latitude: DEFAULT_VALUES.NUMBER,\n            longitude: DEFAULT_VALUES.NUMBER,\n            altitude: DEFAULT_VALUES.NUMBER,\n            heading: DEFAULT_VALUES.NUMBER,\n            velocity: DEFAULT_VALUES.NUMBER,\n            on_ground: DEFAULT_VALUES.BOOL,\n            last_contact: Math.floor(currentTime / 1000),\n            NAME: DEFAULT_VALUES.STRING,\n            CITY: DEFAULT_VALUES.STRING,\n            STATE: DEFAULT_VALUES.STRING,\n            TYPE_AIRCRAFT: DEFAULT_VALUES.STRING,\n            TYPE_REGISTRANT: DEFAULT_VALUES.NUMBER,\n            isTracked: DEFAULT_VALUES.BOOL,\n            lastSeen: currentTime\n        };\n    },\n    normalize (partialAircraft) {\n        const base = BaseTransforms.createBase(Date.now()); // ✅ Explicit reference\n        return {\n            ...base,\n            ...partialAircraft,\n            ICAO24: partialAircraft.ICAO24 || base.ICAO24,\n            REGISTRATION: partialAircraft['REGISTRATION'] || base['REGISTRATION'],\n            MANUFACTURER: partialAircraft.MANUFACTURER || base.MANUFACTURER,\n            latitude: partialAircraft.latitude ?? base.latitude ?? 0,\n            longitude: partialAircraft.longitude ?? base.longitude ?? 0,\n            altitude: partialAircraft.altitude ?? base.altitude,\n            heading: partialAircraft.heading ?? base.heading,\n            velocity: partialAircraft.velocity ?? base.velocity,\n            on_ground: partialAircraft.on_ground ?? base.on_ground,\n            last_contact: partialAircraft.last_contact || base.last_contact,\n            NAME: partialAircraft.NAME || base.NAME,\n            CITY: partialAircraft.CITY || base.CITY,\n            STATE: partialAircraft.STATE || base.STATE,\n            TYPE_AIRCRAFT: partialAircraft.TYPE_AIRCRAFT || base.TYPE_AIRCRAFT,\n            TYPE_REGISTRANT: partialAircraft.TYPE_REGISTRANT || base.TYPE_REGISTRANT,\n            isTracked: partialAircraft.isTracked ?? base.isTracked\n        };\n    }\n};\nconst transformAircraft = (aircraft)=>{\n    return aircraft.map((plane)=>({\n            ...plane,\n            isTracked: plane.isTracked ?? false\n        }));\n};\n/**\r\n * OpenSky-specific transformations and validations\r\n */ // TypeScript-safe version of OpenSkyTransforms\nconst OpenSkyTransforms = {\n    validateObjectState (state) {\n        if (!state || typeof state !== 'object') {\n            console.log('[OpenSkyTransforms] State is not an object:', state);\n            return false;\n        }\n        const objState = state;\n        // Check required fields\n        if (typeof objState.ICAO24 !== 'string' || !objState.ICAO24) {\n            console.log('[OpenSkyTransforms] Invalid ICAO24:', objState.ICAO24);\n            return false;\n        }\n        if (typeof objState.last_contact !== 'number' || isNaN(objState.last_contact)) {\n            console.log('[OpenSkyTransforms] Invalid last_contact:', objState.last_contact);\n            return false;\n        }\n        if (typeof objState.longitude !== 'number' || isNaN(objState.longitude)) {\n            console.log('[OpenSkyTransforms] Invalid longitude:', objState.longitude);\n            return false;\n        }\n        if (typeof objState.latitude !== 'number' || isNaN(objState.latitude)) {\n            console.log('[OpenSkyTransforms] Invalid latitude:', objState.latitude);\n            return false;\n        }\n        // Check on_ground - use proper type checking\n        const onGround = objState.on_ground;\n        const isValidOnGround = typeof onGround === 'boolean' || typeof onGround === 'number' && (onGround === 0 || onGround === 1);\n        if (!isValidOnGround) {\n            console.log('[OpenSkyTransforms] Invalid on_ground:', objState.on_ground);\n            return false;\n        }\n        // Basic validation passed\n        return true;\n    },\n    /**\r\n   * Transform object-format state to Aircraft\r\n   */ toExtendedAircraftFromObject (state, MANUFACTURER) {\n        try {\n            // Add better logging for diagnosis\n            console.log(`[OpenSkyTransforms] Processing object state for ${state.ICAO24} from MANUFACTURER: \"${MANUFACTURER}\"`);\n            // Check if MANUFACTURER is empty and log a warning\n            if (!MANUFACTURER) {\n                console.warn('[OpenSkyTransforms] Warning: Empty MANUFACTURER provided for aircraft:', state.ICAO24);\n            }\n            // Convert on_ground to boolean safely\n            const onGround = this.convertToBoolean(state.on_ground);\n            // Create the aircraft with the provided MANUFACTURER (even if it's an empty string)\n            console.log(`[OpenSkyTransforms] 🔍 Debugging ICAO24: ${state.ICAO24}, Manufacturer: \"${MANUFACTURER}\", Model: \"${state.MODEL}\"`);\n            const aircraft = BaseTransforms.normalize({\n                ICAO24: state.ICAO24,\n                latitude: state.latitude,\n                longitude: state.longitude,\n                altitude: typeof state.altitude === 'number' ? state.altitude : 0,\n                velocity: typeof state.velocity === 'number' ? state.velocity : 0,\n                heading: typeof state.heading === 'number' ? state.heading : 0,\n                on_ground: onGround,\n                last_contact: typeof state.last_contact === 'number' ? state.last_contact : Math.floor(Date.now() / 1000),\n                // Use the provided MANUFACTURER and ensure it's not empty\n                MANUFACTURER: MANUFACTURER || 'Unknown',\n                REGISTRATION: state['REGISTRATION'] || '',\n                MODEL: state.MODEL || '',\n                NAME: state.NAME || '',\n                CITY: state.CITY || '',\n                STATE: state.STATE || '',\n                TYPE_AIRCRAFT: state.TYPE_AIRCRAFT || '',\n                TYPE_REGISTRANT: state.TYPE_REGISTRANT || '',\n                isTracked: true,\n                lastSeen: state.lastSeen || Date.now()\n            });\n            // Log the final MANUFACTURER value for verification\n            console.log(`[OpenSkyTransforms] Aircraft ${state.ICAO24} MANUFACTURER set to: \"${aircraft.MANUFACTURER}\"`);\n            return aircraft;\n        } catch (error) {\n            console.error('[OpenSkyTransforms] Error in toExtendedAircraftFromObject:', error, 'for state:', state);\n            // Return a minimal valid aircraft object in case of error\n            return BaseTransforms.normalize({\n                ICAO24: typeof state.ICAO24 === 'string' ? state.ICAO24 : 'unknown',\n                latitude: typeof state.latitude === 'number' ? state.latitude : 0,\n                longitude: typeof state.longitude === 'number' ? state.longitude : 0,\n                // Make sure MANUFACTURER is passed here too\n                MANUFACTURER: MANUFACTURER || 'Unknown',\n                isTracked: true\n            });\n        }\n    },\n    toExtendedAircraft (state, MANUFACTURER) {\n        try {\n            console.log(`[OpenSkyTransforms] Processing state for ${state[0]} from ${MANUFACTURER}`);\n            // First check if we have a valid ICAO24 code\n            if (!state || !Array.isArray(state) || typeof state[0] !== 'string' || !state[0]) {\n                console.warn('[OpenSkyTransforms] Invalid or missing ICAO24 code:', state);\n                // Return a minimal valid aircraft\n                return BaseTransforms.normalize({\n                    ICAO24: 'unknown',\n                    MANUFACTURER: MANUFACTURER || 'Unknown',\n                    isTracked: true,\n                    lastSeen: Date.now()\n                });\n            }\n            // Extract values with safe fallbacks\n            const ICAO24 = String(state[0]).toLowerCase();\n            const latitude = typeof state[6] === 'number' && !isNaN(state[6]) ? state[6] : 0;\n            const longitude = typeof state[5] === 'number' && !isNaN(state[5]) ? state[5] : 0;\n            const altitude = typeof state[7] === 'number' && !isNaN(state[7]) ? state[7] : 0;\n            const velocity = typeof state[9] === 'number' && !isNaN(state[9]) ? state[9] : 0;\n            const heading = typeof state[10] === 'number' && !isNaN(state[10]) ? state[10] : 0;\n            const onGround = this.convertToBoolean(state[8]);\n            const lastContact = typeof state[4] === 'number' && !isNaN(state[4]) ? state[4] : Math.floor(Date.now() / 1000);\n            // Create aircraft\n            const aircraft = BaseTransforms.normalize({\n                ICAO24,\n                latitude,\n                longitude,\n                altitude,\n                velocity,\n                heading,\n                on_ground: onGround,\n                last_contact: lastContact,\n                MANUFACTURER: MANUFACTURER || 'Unknown',\n                REGISTRATION: '',\n                MODEL: '',\n                NAME: '',\n                CITY: '',\n                STATE: '',\n                TYPE_AIRCRAFT: '',\n                TYPE_REGISTRANT: 0,\n                isTracked: true,\n                lastSeen: Date.now()\n            });\n            console.log(`[OpenSkyTransforms] Successfully transformed aircraft: ${ICAO24}`);\n            return aircraft;\n        } catch (error) {\n            console.error('[OpenSkyTransforms] Error in toExtendedAircraft:', error, 'for state:', state ? state.slice(0, 5) : null);\n            // Return a minimal valid aircraft object in case of error\n            return BaseTransforms.normalize({\n                ICAO24: typeof state[0] === 'string' ? state[0] : `error-${Date.now()}`,\n                MANUFACTURER: MANUFACTURER || 'Unknown',\n                isTracked: true,\n                lastSeen: Date.now()\n            });\n        }\n    },\n    // This method checks if a partial state has enough data to be considered valid\n    // It's more forgiving than the strict tuple type validation\n    validatePartialState (state) {\n        if (!Array.isArray(state)) {\n            console.warn('[OpenSkyTransforms] State is not an array');\n            return false;\n        }\n        // At minimum, we need a valid ICAO24 code\n        if (typeof state[0] !== 'string' || !state[0]) {\n            console.warn('[OpenSkyTransforms] Missing valid ICAO24 code');\n            return false;\n        }\n        // Log warnings for missing positional data but don't fail validation\n        if (typeof state[5] !== 'number' || isNaN(state[5])) {\n            console.warn(`[OpenSkyTransforms] Missing longitude for ${state[0]}`);\n        }\n        if (typeof state[6] !== 'number' || isNaN(state[6])) {\n            console.warn(`[OpenSkyTransforms] Missing latitude for ${state[0]}`);\n        }\n        // We're being permissive here - as long as we have an ICAO24, we consider it valid\n        return true;\n    },\n    // Keep your existing validateState method for when you need strict validation\n    validateState (state) {\n        if (!Array.isArray(state)) return false;\n        if (state.length < 17) return false;\n        if (typeof state[0] !== 'string' || !state[0]) return false;\n        if (typeof state[4] !== 'number' || isNaN(state[4])) return false;\n        if (typeof state[5] !== 'number' || isNaN(state[5])) return false;\n        if (typeof state[6] !== 'number' || isNaN(state[6])) return false;\n        if (typeof state[8] !== 'boolean' && typeof state[8] !== 'number') return false;\n        return true;\n    },\n    // Other methods...\n    toTrackingData (state) {\n        try {\n            // Convert on_ground to boolean safely\n            const onGround = this.convertToBoolean(state[8]);\n            return BaseTransforms.normalize({\n                ICAO24: state[0],\n                latitude: state[6],\n                longitude: state[5],\n                altitude: typeof state[7] === 'number' ? state[7] : 0,\n                velocity: typeof state[9] === 'number' ? state[9] : 0,\n                heading: typeof state[10] === 'number' ? state[10] : 0,\n                on_ground: onGround,\n                last_contact: typeof state[4] === 'number' ? state[4] : Math.floor(Date.now() / 1000),\n                MANUFACTURER: '',\n                REGISTRATION: '',\n                MODEL: '',\n                NAME: '',\n                CITY: '',\n                STATE: '',\n                TYPE_AIRCRAFT: '',\n                TYPE_REGISTRANT: 0,\n                isTracked: true\n            });\n        } catch (error) {\n            console.error('[OpenSkyTransforms] Error in toTrackingData:', error);\n            return BaseTransforms.createBase();\n        }\n    },\n    // Helper method to safely convert boolean or number to boolean\n    convertToBoolean (value) {\n        if (typeof value === 'boolean') {\n            return value;\n        }\n        if (typeof value === 'number') {\n            return value === 1;\n        }\n        return false;\n    }\n};\n/**\r\n * Cache-related transformations\r\n */ const CacheTransforms = {\n    toCache (aircraft) {\n        return {\n            ICAO24: aircraft.ICAO24,\n            REGISTRATION: aircraft['REGISTRATION'],\n            MANUFACTURER: aircraft.MANUFACTURER,\n            MODEL: aircraft.MODEL,\n            latitude: aircraft.latitude,\n            longitude: aircraft.longitude,\n            altitude: aircraft.altitude,\n            velocity: aircraft.velocity,\n            heading: aircraft.heading,\n            on_ground: aircraft.on_ground,\n            last_contact: aircraft.last_contact,\n            lastSeen: aircraft.lastSeen || Date.now(),\n            lastUpdated: Date.now(),\n            NAME: aircraft.NAME,\n            CITY: aircraft.CITY,\n            STATE: aircraft.STATE,\n            TYPE_AIRCRAFT: aircraft.TYPE_AIRCRAFT,\n            TYPE_REGISTRANT: aircraft.TYPE_REGISTRANT\n        };\n    },\n    fromCache (cached) {\n        return BaseTransforms.normalize({\n            ...cached,\n            isTracked: true\n        });\n    }\n};\n/**\r\n * Database-related transformations\r\n */ const DatabaseTransforms = {\n    toTracking (aircraft) {\n        return {\n            ICAO24: aircraft.ICAO24,\n            latitude: aircraft.latitude,\n            longitude: aircraft.longitude,\n            altitude: aircraft.altitude,\n            velocity: aircraft.velocity,\n            heading: aircraft.heading,\n            on_ground: aircraft.on_ground,\n            last_contact: aircraft.last_contact,\n            updated_at: Date.now()\n        };\n    },\n    toBatch (aircraft) {\n        return aircraft.map(this.toTracking);\n    }\n};\nclass OpenSkyError extends Error {\n    constructor(message, status, code){\n        super(message), this.status = status, this.code = code;\n        this.name = 'OpenSkyError';\n    }\n}\nconst OpenSkyUtils = {\n    stateToPosition (state) {\n        if (!state.latitude || !state.longitude) return null;\n        return {\n            lat: state.latitude,\n            lng: state.longitude,\n            altitude: state.baro_altitude,\n            heading: state.true_track,\n            velocity: state.velocity,\n            on_ground: state.on_ground\n        };\n    },\n    hasValidPosition (state) {\n        return typeof state.latitude === 'number' && typeof state.longitude === 'number' && !isNaN(state.latitude) && !isNaN(state.longitude);\n    },\n    mergeWithAircraft (state, aircraft) {\n        const currentTime = Math.floor(Date.now() / 1000);\n        return {\n            ICAO24: state.ICAO24,\n            latitude: state.latitude ?? 0,\n            longitude: state.longitude ?? 0,\n            altitude: state.baro_altitude ?? 0,\n            heading: state.true_track ?? 0,\n            velocity: state.velocity ?? 0,\n            on_ground: Boolean(state.on_ground),\n            last_contact: state.last_contact ?? currentTime,\n            REGISTRATION: aircraft['REGISTRATION'] ?? '',\n            MANUFACTURER: aircraft.MANUFACTURER ?? '',\n            MODEL: aircraft.MODEL ?? '',\n            OPERATOR: aircraft.OPERATOR ?? '',\n            TYPE_REGISTRANT: aircraft.TYPE_REGISTRANT ?? 0,\n            TYPE_AIRCRAFT: aircraft.TYPE_AIRCRAFT ?? '',\n            NAME: aircraft.NAME ?? '',\n            CITY: aircraft.CITY ?? '',\n            STATE: aircraft.STATE ?? '',\n            isTracked: aircraft.isTracked ?? false\n        };\n    }\n};\nfunction isOpenSkyState(value) {\n    return typeof value === 'object' && value !== null && 'ICAO24' in value && typeof value.ICAO24 === 'string' && 'last_contact' in value && typeof value.last_contact === 'number' && 'on_ground' in value && typeof value.on_ground === 'boolean';\n}\nfunction isValidPositionData(data) {\n    return data !== null && typeof data === 'object' && 'ICAO24' in data && typeof data.ICAO24 === 'string' && 'latitude' in data && typeof data.latitude === 'number' && 'longitude' in data && typeof data.longitude === 'number' && 'on_ground' in data && typeof data.on_ground === 'boolean' && 'last_contact' in data && typeof data.last_contact === 'number' && !isNaN(data.latitude) && !isNaN(data.longitude) && !isNaN(data.last_contact) && data.latitude >= -90 && data.latitude <= 90 && data.longitude >= -180 && data.longitude <= 180;\n}\nfunction parsePositionData(rawData) {\n    if (!Array.isArray(rawData) || rawData.length < 17) return null;\n    const [ICAO24, _callsign, _origin_country, _time_position, last_contact, longitude, latitude, _baro_altitude, on_ground, velocity, heading, _vertical_rate, _sensors, altitude] = rawData;\n    if (typeof ICAO24 !== 'string' || typeof latitude !== 'number' || typeof longitude !== 'number' || isNaN(latitude) || isNaN(longitude) || latitude < -90 || latitude > 90 || longitude < -180 || longitude > 180) {\n        return null;\n    }\n    return {\n        ICAO24,\n        latitude,\n        longitude,\n        altitude: typeof altitude === 'number' && !isNaN(altitude) ? altitude : 0,\n        velocity: typeof velocity === 'number' && !isNaN(velocity) ? velocity : 0,\n        heading: typeof heading === 'number' && !isNaN(heading) ? heading : 0,\n        on_ground: Boolean(on_ground),\n        last_contact: Math.floor(Number(last_contact) || Date.now() / 1000)\n    };\n}\n/**\r\n * Convert Aircraft[] to ExtendedAircraft[]\r\n */ const transformToExtendedAircraft = (aircraft)=>{\n    return aircraft.map((a)=>({\n            ...a,\n            type: a.TYPE_AIRCRAFT || a.TYPE_AIRCRAFT || 'Unknown',\n            isGovernment: (a.TYPE_REGISTRANT || a.ownerType) === 5\n        }));\n};\n/**\r\n * Utility functions to clean and standardize data\r\n */ const DataCleanupUtils = {\n    /**\r\n   * Remove duplicate keys from an object\r\n   * When JSON is malformed or corrupted, sometimes keys can appear multiple times\r\n   */ cleanupDuplicateKeys (obj) {\n        if (!obj || typeof obj !== 'object') return obj;\n        // Create a new clean object\n        const cleanObj = {};\n        // Use a Set to track which keys we've seen\n        const seenKeys = new Set();\n        // Get all keys from the object\n        Object.keys(obj).forEach((key)=>{\n            // Only process each key once\n            if (!seenKeys.has(key)) {\n                seenKeys.add(key);\n                // If the value is an object, recursively clean it\n                if (obj[key] && typeof obj[key] === 'object' && !Array.isArray(obj[key])) {\n                    cleanObj[key] = this.cleanupDuplicateKeys(obj[key]);\n                } else {\n                    cleanObj[key] = obj[key];\n                }\n            }\n        });\n        return cleanObj;\n    },\n    /**\r\n   * Normalize all fields in an aircraft state object\r\n   */ normalizeStateFields (state) {\n        // First clean up any duplicate keys\n        const cleanState = this.cleanupDuplicateKeys(state);\n        // Ensure all required fields have proper types\n        return {\n            ...cleanState,\n            ICAO24: String(cleanState.ICAO24 || ''),\n            latitude: Number(cleanState.latitude) || 0,\n            longitude: Number(cleanState.longitude) || 0,\n            altitude: Number(cleanState.altitude) || 0,\n            heading: Number(cleanState.heading) || 0,\n            velocity: Number(cleanState.velocity) || 0,\n            on_ground: Boolean(cleanState.on_ground),\n            last_contact: Number(cleanState.last_contact) || Math.floor(Date.now() / 1000),\n            lastSeen: Number(cleanState.lastSeen) || Date.now()\n        };\n    }\n};\n// Convenience exports for backward compatibility\nconst { createBase: createBaseAircraft, normalize: normalizeAircraft } = BaseTransforms;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./utils/aircraft-transform1.ts\n");

/***/ }),

/***/ "(pages-dir-node)/./utils/getFlagImage.ts":
/*!*******************************!*\
  !*** ./utils/getFlagImage.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getFlagImageUrl: () => (/* binding */ getFlagImageUrl)\n/* harmony export */ });\n/* harmony import */ var _CountryCodes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CountryCodes */ \"(pages-dir-node)/./utils/CountryCodes.ts\");\n// utils/getFlagImage.ts\n\nconst getFlagImageUrl = (countryName, size = 24)=>{\n    const code = _CountryCodes__WEBPACK_IMPORTED_MODULE_0__.countryNameToCode[countryName];\n    return code ? `https://flagcdn.com/w${20}/${code.toLowerCase()}.png` : null;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL3V0aWxzL2dldEZsYWdJbWFnZS50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLHdCQUF3QjtBQUMyQjtBQUU1QyxNQUFNQyxrQkFBa0IsQ0FDN0JDLGFBQ0FDLE9BQWUsRUFBRTtJQUVqQixNQUFNQyxPQUFPSiw0REFBaUIsQ0FBQ0UsWUFBWTtJQUMzQyxPQUFPRSxPQUFPLENBQUMscUJBQXFCLEVBQUUsR0FBRyxDQUFDLEVBQUVBLEtBQUtDLFdBQVcsR0FBRyxJQUFJLENBQUMsR0FBRztBQUN6RSxFQUFFIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXHNhdGhvXFxEb2N1bWVudHNcXFByb2plY3RzXFxhaXJjcmFmdC10cmFja2luZ1xcdXRpbHNcXGdldEZsYWdJbWFnZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyB1dGlscy9nZXRGbGFnSW1hZ2UudHNcclxuaW1wb3J0IHsgY291bnRyeU5hbWVUb0NvZGUgfSBmcm9tICcuL0NvdW50cnlDb2Rlcyc7XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0RmxhZ0ltYWdlVXJsID0gKFxyXG4gIGNvdW50cnlOYW1lOiBzdHJpbmcsXHJcbiAgc2l6ZTogbnVtYmVyID0gMjRcclxuKTogc3RyaW5nIHwgbnVsbCA9PiB7XHJcbiAgY29uc3QgY29kZSA9IGNvdW50cnlOYW1lVG9Db2RlW2NvdW50cnlOYW1lXTtcclxuICByZXR1cm4gY29kZSA/IGBodHRwczovL2ZsYWdjZG4uY29tL3ckezIwfS8ke2NvZGUudG9Mb3dlckNhc2UoKX0ucG5nYCA6IG51bGw7XHJcbn07XHJcbiJdLCJuYW1lcyI6WyJjb3VudHJ5TmFtZVRvQ29kZSIsImdldEZsYWdJbWFnZVVybCIsImNvdW50cnlOYW1lIiwic2l6ZSIsImNvZGUiLCJ0b0xvd2VyQ2FzZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-node)/./utils/getFlagImage.ts\n");

/***/ }),

/***/ "(pages-dir-node)/__barrel_optimize__?names=Filter,Globe,Layers,MapPin,Users!=!./node_modules/lucide-react/dist/esm/lucide-react.js":
/*!*************************************************************************************************************************!*\
  !*** __barrel_optimize__?names=Filter,Globe,Layers,MapPin,Users!=!./node_modules/lucide-react/dist/esm/lucide-react.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Filter: () => (/* reexport safe */ _icons_filter_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   Globe: () => (/* reexport safe */ _icons_globe_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   Layers: () => (/* reexport safe */ _icons_layers_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   MapPin: () => (/* reexport safe */ _icons_map_pin_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]),\n/* harmony export */   Users: () => (/* reexport safe */ _icons_users_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _icons_filter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./icons/filter.js */ \"(pages-dir-node)/./node_modules/lucide-react/dist/esm/icons/filter.js\");\n/* harmony import */ var _icons_globe_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./icons/globe.js */ \"(pages-dir-node)/./node_modules/lucide-react/dist/esm/icons/globe.js\");\n/* harmony import */ var _icons_layers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./icons/layers.js */ \"(pages-dir-node)/./node_modules/lucide-react/dist/esm/icons/layers.js\");\n/* harmony import */ var _icons_map_pin_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./icons/map-pin.js */ \"(pages-dir-node)/./node_modules/lucide-react/dist/esm/icons/map-pin.js\");\n/* harmony import */ var _icons_users_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./icons/users.js */ \"(pages-dir-node)/./node_modules/lucide-react/dist/esm/icons/users.js\");\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS9fX2JhcnJlbF9vcHRpbWl6ZV9fP25hbWVzPUZpbHRlcixHbG9iZSxMYXllcnMsTWFwUGluLFVzZXJzIT0hLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2x1Y2lkZS1yZWFjdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUNxRDtBQUNGO0FBQ0U7QUFDQyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxzYXRob1xcRG9jdW1lbnRzXFxQcm9qZWN0c1xcYWlyY3JhZnQtdHJhY2tpbmdcXG5vZGVfbW9kdWxlc1xcbHVjaWRlLXJlYWN0XFxkaXN0XFxlc21cXGx1Y2lkZS1yZWFjdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcbmV4cG9ydCB7IGRlZmF1bHQgYXMgRmlsdGVyIH0gZnJvbSBcIi4vaWNvbnMvZmlsdGVyLmpzXCJcbmV4cG9ydCB7IGRlZmF1bHQgYXMgR2xvYmUgfSBmcm9tIFwiLi9pY29ucy9nbG9iZS5qc1wiXG5leHBvcnQgeyBkZWZhdWx0IGFzIExheWVycyB9IGZyb20gXCIuL2ljb25zL2xheWVycy5qc1wiXG5leHBvcnQgeyBkZWZhdWx0IGFzIE1hcFBpbiB9IGZyb20gXCIuL2ljb25zL21hcC1waW4uanNcIlxuZXhwb3J0IHsgZGVmYXVsdCBhcyBVc2VycyB9IGZyb20gXCIuL2ljb25zL3VzZXJzLmpzXCIiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-node)/__barrel_optimize__?names=Filter,Globe,Layers,MapPin,Users!=!./node_modules/lucide-react/dist/esm/lucide-react.js\n");

/***/ }),

/***/ "(pages-dir-node)/__barrel_optimize__?names=Globe!=!./node_modules/lucide-react/dist/esm/lucide-react.js":
/*!**********************************************************************************************!*\
  !*** __barrel_optimize__?names=Globe!=!./node_modules/lucide-react/dist/esm/lucide-react.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Globe: () => (/* reexport safe */ _icons_globe_js__WEBPACK_IMPORTED_MODULE_0__["default"])
/* harmony export */ });
/* harmony import */ var _icons_globe_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./icons/globe.js */ "(pages-dir-node)/./node_modules/lucide-react/dist/esm/icons/globe.js");



/***/ }),

/***/ "(pages-dir-node)/__barrel_optimize__?names=MapPin!=!./node_modules/lucide-react/dist/esm/lucide-react.js":
/*!***********************************************************************************************!*\
  !*** __barrel_optimize__?names=MapPin!=!./node_modules/lucide-react/dist/esm/lucide-react.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MapPin: () => (/* reexport safe */ _icons_map_pin_js__WEBPACK_IMPORTED_MODULE_0__["default"])
/* harmony export */ });
/* harmony import */ var _icons_map_pin_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./icons/map-pin.js */ "(pages-dir-node)/./node_modules/lucide-react/dist/esm/icons/map-pin.js");



/***/ }),

/***/ "(pages-dir-node)/__barrel_optimize__?names=RefreshCw!=!./node_modules/lucide-react/dist/esm/lucide-react.js":
/*!**************************************************************************************************!*\
  !*** __barrel_optimize__?names=RefreshCw!=!./node_modules/lucide-react/dist/esm/lucide-react.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RefreshCw: () => (/* reexport safe */ _icons_refresh_cw_js__WEBPACK_IMPORTED_MODULE_0__["default"])
/* harmony export */ });
/* harmony import */ var _icons_refresh_cw_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./icons/refresh-cw.js */ "(pages-dir-node)/./node_modules/lucide-react/dist/esm/icons/refresh-cw.js");



/***/ }),

/***/ "(pages-dir-node)/__barrel_optimize__?names=Search,X!=!./node_modules/lucide-react/dist/esm/lucide-react.js":
/*!*************************************************************************************************!*\
  !*** __barrel_optimize__?names=Search,X!=!./node_modules/lucide-react/dist/esm/lucide-react.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Search: () => (/* reexport safe */ _icons_search_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   X: () => (/* reexport safe */ _icons_x_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _icons_search_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./icons/search.js */ \"(pages-dir-node)/./node_modules/lucide-react/dist/esm/icons/search.js\");\n/* harmony import */ var _icons_x_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./icons/x.js */ \"(pages-dir-node)/./node_modules/lucide-react/dist/esm/icons/x.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS9fX2JhcnJlbF9vcHRpbWl6ZV9fP25hbWVzPVNlYXJjaCxYIT0hLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2x1Y2lkZS1yZWFjdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUNxRCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxzYXRob1xcRG9jdW1lbnRzXFxQcm9qZWN0c1xcYWlyY3JhZnQtdHJhY2tpbmdcXG5vZGVfbW9kdWxlc1xcbHVjaWRlLXJlYWN0XFxkaXN0XFxlc21cXGx1Y2lkZS1yZWFjdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcbmV4cG9ydCB7IGRlZmF1bHQgYXMgU2VhcmNoIH0gZnJvbSBcIi4vaWNvbnMvc2VhcmNoLmpzXCJcbmV4cG9ydCB7IGRlZmF1bHQgYXMgWCB9IGZyb20gXCIuL2ljb25zL3guanNcIiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-node)/__barrel_optimize__?names=Search,X!=!./node_modules/lucide-react/dist/esm/lucide-react.js\n");

/***/ }),

/***/ "(pages-dir-node)/__barrel_optimize__?names=Users!=!./node_modules/lucide-react/dist/esm/lucide-react.js":
/*!**********************************************************************************************!*\
  !*** __barrel_optimize__?names=Users!=!./node_modules/lucide-react/dist/esm/lucide-react.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Users: () => (/* reexport safe */ _icons_users_js__WEBPACK_IMPORTED_MODULE_0__["default"])
/* harmony export */ });
/* harmony import */ var _icons_users_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./icons/users.js */ "(pages-dir-node)/./node_modules/lucide-react/dist/esm/icons/users.js");



/***/ })

};
;