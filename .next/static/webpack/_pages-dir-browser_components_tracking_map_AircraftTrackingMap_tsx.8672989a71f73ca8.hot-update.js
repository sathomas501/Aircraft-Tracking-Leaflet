"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_pages-dir-browser_components_tracking_map_AircraftTrackingMap_tsx",{

/***/ "(pages-dir-browser)/./components/tracking/hooks/useGeofencePanel.ts":
/*!*******************************************************!*\
  !*** ./components/tracking/hooks/useGeofencePanel.ts ***!
  \*******************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useGeofencePanel: () => (/* binding */ useGeofencePanel)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_services_geofencing__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../lib/services/geofencing */ \"(pages-dir-browser)/./lib/services/geofencing.ts\");\n/* harmony import */ var _lib_services_MapboxService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../lib/services/MapboxService */ \"(pages-dir-browser)/./lib/services/MapboxService.ts\");\n// useGeofencePanel.ts - New hook for panel management\n\n\n\nfunction useGeofencePanel(filterLogic, mapInstance) {\n    // Panel UI state\n    const [showPanel, setShowPanel] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [tempCoordinates, setTempCoordinates] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [isSearching, setIsSearching] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    // Panel control methods\n    const openPanel = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useGeofencePanel.useCallback[openPanel]\": ()=>{\n            setShowPanel(true);\n            filterLogic.setActiveDropdown(null); // Close dropdown when opening panel\n            // Dispatch event to notify map that we're in geofence placement mode\n            const event = new CustomEvent('enable-geofence-placement', {\n                detail: {\n                    active: true\n                }\n            });\n            document.dispatchEvent(event);\n        }\n    }[\"useGeofencePanel.useCallback[openPanel]\"], [\n        filterLogic\n    ]);\n    const closePanel = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useGeofencePanel.useCallback[closePanel]\": ()=>{\n            setShowPanel(false);\n            setTempCoordinates(null);\n            // Dispatch event to notify map that we're exiting geofence placement mode\n            const event = new CustomEvent('enable-geofence-placement', {\n                detail: {\n                    active: false\n                }\n            });\n            document.dispatchEvent(event);\n        }\n    }[\"useGeofencePanel.useCallback[closePanel]\"], []);\n    const resetPanel = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useGeofencePanel.useCallback[resetPanel]\": ()=>{\n            setTempCoordinates(null);\n        }\n    }[\"useGeofencePanel.useCallback[resetPanel]\"], []);\n    // Handle search from panel\n    const handlePanelSearch = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useGeofencePanel.useCallback[handlePanelSearch]\": async (lat, lng)=>{\n            if (!lat || !lng || isSearching) return;\n            setIsSearching(true);\n            try {\n                // Get location name\n                const locationName = await _lib_services_MapboxService__WEBPACK_IMPORTED_MODULE_2__.MapboxService.getLocationNameFromCoordinates(lat, lng);\n                // Set location in filter logic\n                if (locationName) {\n                    filterLogic.setGeofenceLocation(locationName);\n                } else {\n                    // Fallback to coordinates if no name found\n                    filterLogic.setGeofenceLocation(\"\".concat(lat.toFixed(4), \", \").concat(lng.toFixed(4)));\n                }\n                // Update coordinates\n                filterLogic.setGeofenceCoordinates({\n                    lat,\n                    lng\n                });\n                filterLogic.setGeofenceCenter({\n                    lat,\n                    lng\n                });\n                // Get aircraft data near this location\n                const fetchedAircraft = await (0,_lib_services_geofencing__WEBPACK_IMPORTED_MODULE_1__.getAircraftNearLocation)(lat, lng, filterLogic.geofenceRadius || 25);\n                if (fetchedAircraft.length > 0) {\n                    // Update aircraft data\n                    filterLogic.updateGeofenceAircraft(fetchedAircraft);\n                    // Activate geofence if not already active\n                    if (!filterLogic.isGeofenceActive) {\n                        filterLogic.toggleGeofenceState(true);\n                    }\n                } else {\n                    console.log('No aircraft found near clicked location');\n                }\n                // Center the map on this location\n                if (mapInstance && typeof mapInstance.setView === 'function') {\n                    // Get current zoom level\n                    const currentZoom = mapInstance.getZoom();\n                    // Use appropriate zoom level based on current view\n                    const targetZoom = currentZoom <= 7 ? 9 : currentZoom;\n                    // Set view to the coordinates\n                    mapInstance.setView([\n                        lat,\n                        lng\n                    ], targetZoom);\n                    mapInstance.invalidateSize();\n                }\n            } catch (error) {\n                console.error('Error searching from panel:', error);\n            } finally{\n                setIsSearching(false);\n            }\n        }\n    }[\"useGeofencePanel.useCallback[handlePanelSearch]\"], [\n        isSearching,\n        filterLogic,\n        mapInstance\n    ]);\n    // Listen for map clicks when panel is open\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useGeofencePanel.useEffect\": ()=>{\n            if (!showPanel) return;\n            const handleMapClick = {\n                \"useGeofencePanel.useEffect.handleMapClick\": (e)=>{\n                    const { lat, lng } = e.detail;\n                    setTempCoordinates({\n                        lat,\n                        lng\n                    });\n                }\n            }[\"useGeofencePanel.useEffect.handleMapClick\"];\n            // Add event listener for map clicks\n            document.addEventListener('map-geofence-click', handleMapClick);\n            // Cleanup listener when component unmounts or panel closes\n            return ({\n                \"useGeofencePanel.useEffect\": ()=>{\n                    document.removeEventListener('map-geofence-click', handleMapClick);\n                }\n            })[\"useGeofencePanel.useEffect\"];\n        }\n    }[\"useGeofencePanel.useEffect\"], [\n        showPanel\n    ]);\n    // Listen for the clear all filters event\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useGeofencePanel.useEffect\": ()=>{\n            const handleClearAllFilters = {\n                \"useGeofencePanel.useEffect.handleClearAllFilters\": ()=>{\n                    // Close the floating panel when filters are cleared\n                    if (showPanel) {\n                        closePanel();\n                    }\n                }\n            }[\"useGeofencePanel.useEffect.handleClearAllFilters\"];\n            // Add event listener for the clear all filters event\n            document.addEventListener('ribbon-filters-cleared', handleClearAllFilters);\n            // Clean up\n            return ({\n                \"useGeofencePanel.useEffect\": ()=>{\n                    document.removeEventListener('ribbon-filters-cleared', handleClearAllFilters);\n                }\n            })[\"useGeofencePanel.useEffect\"];\n        }\n    }[\"useGeofencePanel.useEffect\"], [\n        showPanel,\n        closePanel\n    ]);\n    return {\n        showPanel,\n        tempCoordinates,\n        isSearching,\n        setTempCoordinates,\n        openPanel,\n        closePanel,\n        resetPanel,\n        handlePanelSearch\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./components/tracking/hooks/useGeofencePanel.ts\n"));

/***/ })

});