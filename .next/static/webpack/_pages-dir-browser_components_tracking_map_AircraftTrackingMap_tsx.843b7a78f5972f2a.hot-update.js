"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_pages-dir-browser_components_tracking_map_AircraftTrackingMap_tsx",{

/***/ "(pages-dir-browser)/./components/tracking/filters/FloatingGeofencePanel.tsx":
/*!***************************************************************!*\
  !*** ./components/tracking/filters/FloatingGeofencePanel.tsx ***!
  \***************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_Search_X_lucide_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! __barrel_optimize__?names=Search,X!=!lucide-react */ \"(pages-dir-browser)/__barrel_optimize__?names=Search,X!=!./node_modules/lucide-react/dist/esm/lucide-react.js\");\n/* harmony import */ var react_draggable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-draggable */ \"(pages-dir-browser)/./node_modules/react-draggable/build/cjs/cjs.js\");\n/* harmony import */ var react_draggable__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_draggable__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _lib_services_MapboxService__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../lib/services/MapboxService */ \"(pages-dir-browser)/./lib/services/MapboxService.ts\");\n\nvar _s = $RefreshSig$();\n\n\n\n\nconst FloatingGeofencePanel = (param)=>{\n    let { isOpen, onClose, geofenceRadius, setGeofenceRadius, initialPosition, onSearch, isSearching, coordinates, setCoordinates, isGeofenceActive, clearMarkers, clearSearchResults, setSearchTitle, setIsSearching, isGeofencePlacementMode } = param;\n    _s();\n    const [position, setPosition] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initialPosition);\n    const nodeRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [locationName, setLocationName] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isLoadingLocation, setIsLoadingLocation] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Fetch location name whenever coordinates change\n    // Add a reference to store the previous coordinates to avoid unnecessary API calls\n    const prevCoordinatesRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Modify your location name effect to use the ref\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"FloatingGeofencePanel.useEffect\": ()=>{\n            var _prevCoordinatesRef_current, _prevCoordinatesRef_current1;\n            // Only proceed if we have coordinates\n            if (!coordinates) return;\n            // Check if these are the same coordinates as before\n            const isSameCoordinates = ((_prevCoordinatesRef_current = prevCoordinatesRef.current) === null || _prevCoordinatesRef_current === void 0 ? void 0 : _prevCoordinatesRef_current.lat) === coordinates.lat && ((_prevCoordinatesRef_current1 = prevCoordinatesRef.current) === null || _prevCoordinatesRef_current1 === void 0 ? void 0 : _prevCoordinatesRef_current1.lng) === coordinates.lng;\n            // If these are the same coordinates and we already have a location name or are loading,\n            // don't make another API call\n            if (isSameCoordinates && (locationName || isLoadingLocation)) {\n                return;\n            }\n            // Near the top of your component\n            console.log('onSearch prop:', onSearch);\n            console.log('onSearch is function?', typeof onSearch === 'function');\n            // Update the reference with current coordinates\n            prevCoordinatesRef.current = coordinates;\n            // Proceed with API call\n            setIsLoadingLocation(true);\n            _lib_services_MapboxService__WEBPACK_IMPORTED_MODULE_3__.MapboxService.getLocationNameFromCoordinates(coordinates.lat, coordinates.lng).then({\n                \"FloatingGeofencePanel.useEffect\": (name)=>{\n                    setLocationName(name);\n                }\n            }[\"FloatingGeofencePanel.useEffect\"]).catch({\n                \"FloatingGeofencePanel.useEffect\": (error)=>{\n                    console.error('Error fetching location name:', error);\n                }\n            }[\"FloatingGeofencePanel.useEffect\"]).finally({\n                \"FloatingGeofencePanel.useEffect\": ()=>{\n                    setIsLoadingLocation(false);\n                }\n            }[\"FloatingGeofencePanel.useEffect\"]);\n        // Don't include locationName in dependencies to avoid loops\n        }\n    }[\"FloatingGeofencePanel.useEffect\"], [\n        coordinates\n    ]);\n    // Auto-search when coordinates change, with improved throttling and debouncing\n    // Use a reference for the last search coordinates\n    const lastSearchRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Auto-search when coordinates change\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"FloatingGeofencePanel.useEffect\": ()=>{\n            var _lastSearchRef_current, _lastSearchRef_current1;\n            let searchTimeout = null;\n            // Only proceed if we have coordinates, aren't searching, and panel is open\n            if (!coordinates || isSearching || !isOpen) return;\n            // Check if we've already searched these coordinates\n            const isSameCoordinates = ((_lastSearchRef_current = lastSearchRef.current) === null || _lastSearchRef_current === void 0 ? void 0 : _lastSearchRef_current.lat) === coordinates.lat && ((_lastSearchRef_current1 = lastSearchRef.current) === null || _lastSearchRef_current1 === void 0 ? void 0 : _lastSearchRef_current1.lng) === coordinates.lng;\n            // Skip if we've already searched these exact coordinates\n            if (isSameCoordinates) return;\n            // Schedule a search\n            searchTimeout = setTimeout({\n                \"FloatingGeofencePanel.useEffect\": ()=>{\n                    // Double-check that conditions are still valid when timeout fires\n                    if (isOpen && coordinates && !isSearching) {\n                        // Update reference before search\n                        lastSearchRef.current = coordinates;\n                        onSearch(coordinates.lat, coordinates.lng);\n                    }\n                }\n            }[\"FloatingGeofencePanel.useEffect\"], 1500);\n            // Cleanup function\n            return ({\n                \"FloatingGeofencePanel.useEffect\": ()=>{\n                    if (searchTimeout) {\n                        clearTimeout(searchTimeout);\n                    }\n                }\n            })[\"FloatingGeofencePanel.useEffect\"];\n        }\n    }[\"FloatingGeofencePanel.useEffect\"], [\n        coordinates,\n        isSearching,\n        isOpen,\n        onSearch\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"FloatingGeofencePanel.useEffect\": ()=>{\n            // Only fetch location name if we have coordinates and not in special states\n            if (coordinates && !isGeofenceActive && !isGeofencePlacementMode) {\n                setIsLoading(true);\n                const fetchLocationName = {\n                    \"FloatingGeofencePanel.useEffect.fetchLocationName\": async ()=>{\n                        try {\n                            const name = await _lib_services_MapboxService__WEBPACK_IMPORTED_MODULE_3__.MapboxService.getLocationNameFromCoordinates(coordinates.lat, coordinates.lng);\n                            setLocationName(name);\n                        } catch (error) {\n                            console.error('Error fetching location name:', error);\n                            setLocationName(null);\n                        } finally{\n                            setIsLoading(false);\n                        }\n                    }\n                }[\"FloatingGeofencePanel.useEffect.fetchLocationName\"];\n                fetchLocationName();\n            }\n        }\n    }[\"FloatingGeofencePanel.useEffect\"], [\n        coordinates,\n        isGeofenceActive,\n        isGeofencePlacementMode\n    ]);\n    // Enable map click mode when panel is opened\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"FloatingGeofencePanel.useEffect\": ()=>{\n            if (isOpen) {\n                // Dispatch event to notify map that we're in geofence placement mode\n                const event = new CustomEvent('enable-geofence-placement', {\n                    detail: {\n                        active: true\n                    }\n                });\n                document.dispatchEvent(event);\n                // Set up listener for map click events\n                const handleMapClick = {\n                    \"FloatingGeofencePanel.useEffect.handleMapClick\": (e)=>{\n                        const { lat, lng } = e.detail;\n                        setCoordinates({\n                            lat,\n                            lng\n                        });\n                    }\n                }[\"FloatingGeofencePanel.useEffect.handleMapClick\"];\n                document.addEventListener('map-geofence-click', handleMapClick);\n                return ({\n                    \"FloatingGeofencePanel.useEffect\": ()=>{\n                        // Clean up\n                        document.removeEventListener('map-geofence-click', handleMapClick);\n                        // Turn off placement mode when component unmounts\n                        const event = new CustomEvent('enable-geofence-placement', {\n                            detail: {\n                                active: false\n                            }\n                        });\n                        document.dispatchEvent(event);\n                    }\n                })[\"FloatingGeofencePanel.useEffect\"];\n            }\n        }\n    }[\"FloatingGeofencePanel.useEffect\"], [\n        isOpen,\n        setCoordinates\n    ]);\n    // Triggered when the user clicks the search button\n    const handleSearch = ()=>{\n        console.log('handleSearch function called');\n        console.log('coordinates:', coordinates);\n        console.log('isSearching:', isSearching);\n        // Guard clause: Coordinates must be present\n        if (!coordinates) {\n            console.warn('No coordinates available for search.');\n            return;\n        }\n        // Guard clause: Prevent duplicate search requests\n        if (isSearching) {\n            console.info('Search already in progress, skipping new request.');\n            return;\n        }\n        const { lat, lng } = coordinates;\n        console.log(\"Attempting search with lat: \".concat(lat, \", lng: \").concat(lng));\n        try {\n            onSearch(lat, lng); // Perform the search\n            console.log('Search function executed successfully.');\n        } catch (error) {\n            console.error('Search function failed:', error);\n        }\n    };\n    const handleSearchReset = ()=>{\n        console.log('Resetting search state');\n        // 1. Reset state variables\n        setCoordinates(null);\n        if (setIsSearching) {\n            setIsSearching(false);\n        }\n        // 2. Clear search results or markers from map/UI\n        if (typeof clearMarkers === 'function') clearMarkers();\n        if (typeof clearSearchResults === 'function') clearSearchResults();\n        // 3. Reset ribbon search title\n        if (typeof setSearchTitle === 'function') setSearchTitle('');\n        // Clear location name/title\n        setLocationName(null);\n        // Reset coordinates and search state\n        setCoordinates(null);\n        setIsLoading(false);\n        // 4. Log or notify user\n        console.log('Search state fully cleared. Awaiting new search input.');\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((react_draggable__WEBPACK_IMPORTED_MODULE_2___default()), {\n        nodeRef: nodeRef,\n        handle: \".handle\",\n        defaultPosition: position,\n        onStop: (e, data)=>setPosition({\n                x: data.x,\n                y: data.y\n            }),\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            ref: nodeRef,\n            className: \"absolute z-50 bg-white rounded-lg shadow-lg border border-gray-200 w-80 geofence-floating-panel\",\n            style: {\n                position: 'absolute',\n                top: 0,\n                left: 0\n            },\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"handle px-4 py-3 bg-indigo-600 text-white rounded-t-lg flex items-center justify-between cursor-move\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: onClose,\n                            className: \"text-white hover:bg-indigo-700 rounded-full p-1\",\n                            title: \"Close\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Search_X_lucide_react__WEBPACK_IMPORTED_MODULE_4__.X, {\n                                size: 16\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                lineNumber: 281,\n                                columnNumber: 13\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                            lineNumber: 276,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center justify-center flex-grow mx-auto\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"font-medium text-center\",\n                                children: \"Search Pin Placement\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                lineNumber: 284,\n                                columnNumber: 13\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                            lineNumber: 283,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"w-4\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                            lineNumber: 288,\n                            columnNumber: 11\n                        }, undefined),\n                        \" \"\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                    lineNumber: 275,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"p-4\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"mb-4\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"text-center text-sm font-medium text-gray-700 mb-1\",\n                                    children: \"Selected Location:\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                    lineNumber: 295,\n                                    columnNumber: 13\n                                }, undefined),\n                                coordinates && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"p-2 bg-gray-50 rounded border border-gray-200 text-center\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"text-gray-700 font-bold\",\n                                            children: isLoadingLocation ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                children: \"Loading location name...\"\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                                lineNumber: 302,\n                                                columnNumber: 21\n                                            }, undefined) : locationName ? _lib_services_MapboxService__WEBPACK_IMPORTED_MODULE_3__.MapboxService.formatCityCountry(locationName, true) : \"\".concat(coordinates.lat.toFixed(6), \", \").concat(coordinates.lng.toFixed(6))\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                            lineNumber: 300,\n                                            columnNumber: 17\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"text-xs text-gray-500 mt-1\",\n                                            children: [\n                                                coordinates.lat.toFixed(6),\n                                                \", \",\n                                                coordinates.lng.toFixed(6)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                            lineNumber: 309,\n                                            columnNumber: 17\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                    lineNumber: 299,\n                                    columnNumber: 15\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                            lineNumber: 294,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"mb-6\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                    className: \"text-sm font-medium text-gray-700 block mb-1\",\n                                    children: [\n                                        \"Radius: \",\n                                        geofenceRadius,\n                                        \" km\"\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                    lineNumber: 318,\n                                    columnNumber: 13\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    type: \"range\",\n                                    min: \"5\",\n                                    max: \"100\",\n                                    step: \"5\",\n                                    value: geofenceRadius,\n                                    onChange: (e)=>setGeofenceRadius(parseInt(e.target.value)),\n                                    className: \"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                    lineNumber: 321,\n                                    columnNumber: 13\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex justify-between text-xs text-gray-500 mt-1\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            children: \"5 km\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                            lineNumber: 331,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            children: \"50 km\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                            lineNumber: 332,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            children: \"100 km\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                            lineNumber: 333,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                    lineNumber: 330,\n                                    columnNumber: 13\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                            lineNumber: 317,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"mb-3 text-sm text-gray-600 text-center\",\n                            children: \"Click anywhere on the map to place a search pin\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                            lineNumber: 338,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex gap-2 w-full\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    type: \"button\",\n                                    onClick: handleSearch,\n                                    disabled: !coordinates || isSearching,\n                                    className: \"flex-1 py-2 px-4 flex items-center justify-center gap-2 rounded-md \".concat(!coordinates || isSearching ? 'bg-gray-300 text-gray-500 cursor-not-allowed' : 'bg-indigo-600 text-white hover:bg-indigo-700', \" transition-colors\"),\n                                    children: \"Search\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                    lineNumber: 345,\n                                    columnNumber: 13\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    type: \"button\",\n                                    onClick: handleSearchReset,\n                                    className: \"flex-1 py-2 px-4 flex items-center justify-center gap-2 rounded-md bg-red-500 text-white hover:bg-red-600 transition-colors\",\n                                    children: \"Reset\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                    lineNumber: 359,\n                                    columnNumber: 13\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex gap-2 w-full\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            type: \"button\",\n                                            onClick: handleSearch,\n                                            disabled: !coordinates || isSearching,\n                                            className: \"flex-1 py-2 px-4 flex items-center justify-center gap-2 rounded-md \".concat(!coordinates || isSearching ? 'bg-gray-300 text-gray-500 cursor-not-allowed' : 'bg-indigo-600 text-white hover:bg-indigo-700', \" transition-colors\"),\n                                            children: isSearching ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                        className: \"animate-spin h-5 w-5\",\n                                                        viewBox: \"0 0 24 24\",\n                                                        children: [\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                                                                className: \"opacity-25\",\n                                                                cx: \"12\",\n                                                                cy: \"12\",\n                                                                r: \"10\",\n                                                                stroke: \"currentColor\",\n                                                                strokeWidth: \"4\"\n                                                            }, void 0, false, {\n                                                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                                                lineNumber: 382,\n                                                                columnNumber: 23\n                                                            }, undefined),\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                                className: \"opacity-75\",\n                                                                fill: \"currentColor\",\n                                                                d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                                                            }, void 0, false, {\n                                                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                                                lineNumber: 390,\n                                                                columnNumber: 23\n                                                            }, undefined)\n                                                        ]\n                                                    }, void 0, true, {\n                                                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                                        lineNumber: 381,\n                                                        columnNumber: 21\n                                                    }, undefined),\n                                                    \"Searching...\"\n                                                ]\n                                            }, void 0, true) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Search_X_lucide_react__WEBPACK_IMPORTED_MODULE_4__.Search, {\n                                                        size: 16\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                                        lineNumber: 400,\n                                                        columnNumber: 21\n                                                    }, undefined),\n                                                    \"Search Aircraft\"\n                                                ]\n                                            }, void 0, true)\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                            lineNumber: 369,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            type: \"button\",\n                                            onClick: handleSearchReset,\n                                            className: \"flex-1 py-2 px-4 flex items-center justify-center gap-2 rounded-md bg-red-500 text-white hover:bg-red-600 transition-colors\",\n                                            children: \"Reset\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                            lineNumber: 407,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                    lineNumber: 367,\n                                    columnNumber: 13\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                            lineNumber: 343,\n                            columnNumber: 11\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                    lineNumber: 292,\n                    columnNumber: 9\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n            lineNumber: 265,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n        lineNumber: 259,\n        columnNumber: 5\n    }, undefined);\n};\n_s(FloatingGeofencePanel, \"j6mf0KOa+tc0x0TlzbyTxs0nswI=\");\n_c = FloatingGeofencePanel;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FloatingGeofencePanel);\nvar _c;\n$RefreshReg$(_c, \"FloatingGeofencePanel\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL2NvbXBvbmVudHMvdHJhY2tpbmcvZmlsdGVycy9GbG9hdGluZ0dlb2ZlbmNlUGFuZWwudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQTJEO0FBQ1Y7QUFDVDtBQUM0QjtBQThCcEUsTUFBTVEsd0JBQThEO1FBQUMsRUFDbkVDLE1BQU0sRUFDTkMsT0FBTyxFQUNQQyxjQUFjLEVBQ2RDLGlCQUFpQixFQUNqQkMsZUFBZSxFQUNmQyxRQUFRLEVBQ1JDLFdBQVcsRUFDWEMsV0FBVyxFQUNYQyxjQUFjLEVBQ2RDLGdCQUFnQixFQUNoQkMsWUFBWSxFQUNaQyxrQkFBa0IsRUFDbEJDLGNBQWMsRUFDZEMsY0FBYyxFQUNkQyx1QkFBdUIsRUFDeEI7O0lBQ0MsTUFBTSxDQUFDQyxVQUFVQyxZQUFZLEdBQUd4QiwrQ0FBUUEsQ0FBQ1k7SUFDekMsTUFBTWEsVUFBVXZCLDZDQUFNQSxDQUFDO0lBQ3ZCLE1BQU0sQ0FBQ3dCLGNBQWNDLGdCQUFnQixHQUFHM0IsK0NBQVFBLENBQWdCO0lBQ2hFLE1BQU0sQ0FBQzRCLG1CQUFtQkMscUJBQXFCLEdBQUc3QiwrQ0FBUUEsQ0FBQztJQUMzRCxNQUFNLENBQUM4QixXQUFXQyxhQUFhLEdBQUcvQiwrQ0FBUUEsQ0FBVTtJQUVwRCxrREFBa0Q7SUFFbEQsbUZBQW1GO0lBQ25GLE1BQU1nQyxxQkFBcUI5Qiw2Q0FBTUEsQ0FBc0M7SUFFdkUsa0RBQWtEO0lBQ2xERCxnREFBU0E7MkNBQUM7Z0JBTU4rQiw2QkFDQUE7WUFORixzQ0FBc0M7WUFDdEMsSUFBSSxDQUFDakIsYUFBYTtZQUVsQixvREFBb0Q7WUFDcEQsTUFBTWtCLG9CQUNKRCxFQUFBQSw4QkFBQUEsbUJBQW1CRSxPQUFPLGNBQTFCRixrREFBQUEsNEJBQTRCRyxHQUFHLE1BQUtwQixZQUFZb0IsR0FBRyxJQUNuREgsRUFBQUEsK0JBQUFBLG1CQUFtQkUsT0FBTyxjQUExQkYsbURBQUFBLDZCQUE0QkksR0FBRyxNQUFLckIs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QUViLDhEQUFDSTs0Q0FDQ1MsTUFBSzs0Q0FDTFIsU0FBU2pCOzRDQUNUaUMsVUFBVSxDQUFDOUUsZUFBZUQ7NENBQzFCMEQsV0FBVyxzRUFJVixPQUhDLENBQUN6RCxlQUFlRCxjQUNaLGlEQUNBLGdEQUNMO3NEQUVBQSw0QkFDQzs7a0VBQ0UsOERBQUNnRjt3REFBSXRCLFdBQVU7d0RBQXVCdUIsU0FBUTs7MEVBQzVDLDhEQUFDQztnRUFDQ3hCLFdBQVU7Z0VBQ1Z5QixJQUFHO2dFQUNIQyxJQUFHO2dFQUNIQyxHQUFFO2dFQUNGQyxRQUFPO2dFQUNQQyxhQUFZOzs7Ozs7MEVBRWQsOERBQUNDO2dFQUNDOUIsV0FBVTtnRUFDVitCLE1BQUs7Z0VBQ0xDLEdBQUU7Ozs7Ozs7Ozs7OztvREFFQTs7NkVBSVI7O2tFQUNFLDhEQUFDcEcsZ0ZBQU1BO3dEQUFDMkUsTUFBTTs7Ozs7O29EQUFNOzs7Ozs7OztzREFPMUIsOERBQUNIOzRDQUNDUyxNQUFLOzRDQUNMUixTQUFTZDs0Q0FDVFMsV0FBVTtzREFDWDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFTZjtHQWxZTWpFO0tBQUFBO0FBb1lOLGlFQUFlQSxxQkFBcUJBLEVBQUMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcc2F0aG9cXERvY3VtZW50c1xcUHJvamVjdHNcXGFpcmNyYWZ0LXRyYWNraW5nXFxjb21wb25lbnRzXFx0cmFja2luZ1xcZmlsdGVyc1xcRmxvYXRpbmdHZW9mZW5jZVBhbmVsLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCwgdXNlUmVmIH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyBYLCBTZWFyY2gsIE1hcFBpbiB9IGZyb20gJ2x1Y2lkZS1yZWFjdCc7XHJcbmltcG9ydCBEcmFnZ2FibGUgZnJvbSAncmVhY3QtZHJhZ2dhYmxlJztcclxuaW1wb3J0IHsgTWFwYm94U2VydmljZSB9IGZyb20gJy4uLy4uLy4uL2xpYi9zZXJ2aWNlcy9NYXBib3hTZXJ2aWNlJztcclxuXHJcbmludGVyZmFjZSBDb29yZGluYXRlcyB7XHJcbiAgbGF0OiBudW1iZXI7XHJcbiAgbG5nOiBudW1iZXI7XHJcbn1cclxuXHJcbmludGVyZmFjZSBGb3JtYXRDaXR5Q291bnRyeVJlc3VsdCB7XHJcbiAgY2l0eTogc3RyaW5nO1xyXG4gIGNvdW50cnk6IHN0cmluZztcclxufVxyXG5cclxuaW50ZXJmYWNlIEZsb2F0aW5nR2VvZmVuY2VQYW5lbFByb3BzIHtcclxuICBpc09wZW46IGJvb2xlYW47XHJcbiAgb25DbG9zZTogKCkgPT4gdm9pZDtcclxuICBnZW9mZW5jZVJhZGl1czogbnVtYmVyO1xyXG4gIHNldEdlb2ZlbmNlUmFkaXVzOiAocmFkaXVzOiBudW1iZXIpID0+IHZvaWQ7XHJcbiAgaW5pdGlhbFBvc2l0aW9uPzogeyB4OiBudW1iZXI7IHk6IG51bWJlciB9O1xyXG4gIG9uU2VhcmNoOiAobGF0OiBudW1iZXIsIGxuZzogbnVtYmVyKSA9PiB2b2lkO1xyXG4gIGlzU2VhcmNoaW5nOiBib29sZWFuO1xyXG4gIGNvb3JkaW5hdGVzOiBDb29yZGluYXRlcyB8IG51bGw7XHJcbiAgc2V0Q29vcmRpbmF0ZXM6IChjb29yZHM6IENvb3JkaW5hdGVzIHwgbnVsbCkgPT4gdm9pZDtcclxuICBpc0dlb2ZlbmNlQWN0aXZlOiBib29sZWFuO1xyXG4gIGlzR2VvZmVuY2VQbGFjZW1lbnRNb2RlOiBib29sZWFuO1xyXG4gIGNsZWFyU2VhcmNoUmVzdWx0cz86ICgpID0+IHZvaWQ7XHJcbiAgc2V0U2VhcmNoVGl0bGU/OiAodGl0bGU6IHN0cmluZykgPT4gdm9pZDtcclxuICBzZXRJc1NlYXJjaGluZz86IChpc1NlYXJjaGluZzogYm9vbGVhbikgPT4gdm9pZDtcclxuICBjbGVhck1hcmtlcnM/OiAoKSA9PiB2b2lkO1xyXG59XHJcblxyXG5jb25zdCBGbG9hdGluZ0dlb2ZlbmNlUGFuZWw6IFJlYWN0LkZDPEZsb2F0aW5nR2VvZmVuY2VQYW5lbFByb3BzPiA9ICh7XHJcbiAgaXNPcGVuLFxyXG4gIG9uQ2xvc2UsXHJcbiAgZ2VvZmVuY2VSYWRpdXMsXHJcbiAgc2V0R2VvZmVuY2VSYWRpdXMsXHJcbiAgaW5pdGlhbFBvc2l0aW9uLFxyXG4gIG9uU2VhcmNoLFxyXG4gIGlzU2VhcmNoaW5nLFxyXG4gIGNvb3JkaW5hdGVzLFxyXG4gIHNldENvb3JkaW5hdGVzLFxyXG4gIGlzR2VvZmVuY2VBY3RpdmUsXHJcbiAgY2xlYXJNYXJrZXJzLFxyXG4gIGNsZWFyU2VhcmNoUmVzdWx0cyxcclxuICBzZXRTZWFyY2hUaXRsZSxcclxuICBzZXRJc1NlYXJjaGluZyxcclxuICBpc0dlb2ZlbmNlUGxhY2VtZW50TW9kZSxcclxufSkgPT4ge1xyXG4gIGNvbnN0IFtwb3NpdGlvbiwgc2V0UG9zaXRpb25dID0gdXNlU3RhdGUoaW5pdGlhbFBvc2l0aW9uKTtcclxuICBjb25zdCBub2RlUmVmID0gdXNlUmVmKG51bGwpO1xyXG4gIGNvbnN0IFtsb2NhdGlvbk5hbWUsIHNldExvY2F0aW9uTmFtZV0gPSB1c2VTdGF0ZTxzdHJpbmcgfCBudWxsPihudWxsKTtcclxuICBjb25zdCBbaXNMb2FkaW5nTG9jYXRpb24sIHNldElzTG9hZGluZ0xvY2F0aW9uXSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuICBjb25zdCBbaXNMb2FkaW5nLCBzZXRJc0xvYWRpbmddID0gdXNlU3RhdGU8Ym9vbGVhbj4oZmFsc2UpO1xyXG5cclxuICAvLyBGZXRjaCBsb2NhdGlvbiBuYW1lIHdoZW5ldmVyIGNvb3JkaW5hdGVzIGNoYW5nZVxyXG5cclxuICAvLyBBZGQgYSByZWZlcmVuY2UgdG8gc3RvcmUgdGhlIHByZXZpb3VzIGNvb3JkaW5hdGVzIHRvIGF2b2lkIHVubmVjZXNzYXJ5IEFQSSBjYWxsc1xyXG4gIGNvbnN0IHByZXZDb29yZGluYXRlc1JlZiA9IHVzZVJlZjx7IGxhdDogbnVtYmVyOyBsbmc6IG51bWJlciB9IHwgbnVsbD4obnVsbCk7XHJcblxyXG4gIC8vIE1vZGlmeSB5b3VyIGxvY2F0aW9uIG5hbWUgZWZmZWN0IHRvIHVzZSB0aGUgcmVmXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIC8vIE9ubHkgcHJvY2VlZCBpZiB3ZSBoYXZlIGNvb3JkaW5hdGVzXHJcbiAgICBpZiAoIWNvb3JkaW5hdGVzKSByZXR1cm47XHJcblxyXG4gICAgLy8gQ2hlY2sgaWYgdGhlc2UgYXJlIHRoZSBzYW1lIGNvb3JkaW5hdGVzIGFzIGJlZm9yZVxyXG4gICAgY29uc3QgaXNTYW1lQ29vcmRpbmF0ZXMgPVxyXG4gICAgICBwcmV2Q29vcmRpbmF0ZXNSZWYuY3VycmVudD8ubGF0ID09PSBjb29yZGluYXRlcy5sYXQgJiZcclxuICAgICAgcHJldkNvb3JkaW5hdGVzUmVmLmN1cnJlbnQ/LmxuZyA9PT0gY29vcmRpbmF0ZXMubG5nO1xyXG5cclxuICAgIC8vIElmIHRoZXNlIGFyZSB0aGUgc2FtZSBjb29yZGluYXRlcyBhbmQgd2UgYWxyZWFkeSBoYXZlIGEgbG9jYXRpb24gbmFtZSBvciBhcmUgbG9hZGluZyxcclxuICAgIC8vIGRvbid0IG1ha2UgYW5vdGhlciBBUEkgY2FsbFxyXG4gICAgaWYgKGlzU2FtZUNvb3JkaW5hdGVzICYmIChsb2NhdGlvbk5hbWUgfHwgaXNMb2FkaW5nTG9jYXRpb24pKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICAvLyBOZWFyIHRoZSB0b3Agb2YgeW91ciBjb21wb25lbnRcclxuICAgIGNvbnNvbGUubG9nKCdvblNlYXJjaCBwcm9wOicsIG9uU2VhcmNoKTtcclxuICAgIGNvbnNvbGUubG9nKCdvblNlYXJjaCBpcyBmdW5jdGlvbj8nLCB0eXBlb2Ygb25TZWFyY2ggPT09ICdmdW5jdGlvbicpO1xyXG5cclxuICAgIC8vIFVwZGF0ZSB0aGUgcmVmZXJlbmNlIHdpdGggY3VycmVudCBjb29yZGluYXRlc1xyXG4gICAgcHJldkNvb3JkaW5hdGVzUmVmLmN1cnJlbnQgPSBjb29yZGluYXRlcztcclxuXHJcbiAgICAvLyBQcm9jZWVkIHdpdGggQVBJIGNhbGxcclxuICAgIHNldElzTG9hZGluZ0xvY2F0aW9uKHRydWUpO1xyXG5cclxuICAgIE1hcGJveFNlcnZpY2UuZ2V0TG9jYXRpb25OYW1lRnJvbUNvb3JkaW5hdGVzKFxyXG4gICAgICBjb29yZGluYXRlcy5sYXQsXHJcbiAgICAgIGNvb3JkaW5hdGVzLmxuZ1xyXG4gICAgKVxyXG4gICAgICAudGhlbigobmFtZSkgPT4ge1xyXG4gICAgICAgIHNldExvY2F0aW9uTmFtZShuYW1lKTtcclxuICAgICAgfSlcclxuICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIGxvY2F0aW9uIG5hbWU6JywgZXJyb3IpO1xyXG4gICAgICB9KVxyXG4gICAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgICAgc2V0SXNMb2FkaW5nTG9jYXRpb24oZmFsc2UpO1xyXG4gICAgICB9KTtcclxuXHJcbiAgICAvLyBEb24ndCBpbmNsdWRlIGxvY2F0aW9uTmFtZSBpbiBkZXBlbmRlbmNpZXMgdG8gYXZvaWQgbG9vcHNcclxuICB9LCBbY29vcmRpbmF0ZXNdKTtcclxuXHJcbiAgLy8gQXV0by1zZWFyY2ggd2hlbiBjb29yZGluYXRlcyBjaGFuZ2UsIHdpdGggaW1wcm92ZWQgdGhyb3R0bGluZyBhbmQgZGVib3VuY2luZ1xyXG5cclxuICAvLyBVc2UgYSByZWZlcmVuY2UgZm9yIHRoZSBsYXN0IHNlYXJjaCBjb29yZGluYXRlc1xyXG4gIGNvbnN0IGxhc3RTZWFyY2hSZWYgPSB1c2VSZWY8eyBsYXQ6IG51bWJlcjsgbG5nOiBudW1iZXIgfSB8IG51bGw+KG51bGwpO1xyXG5cclxuICAvLyBBdXRvLXNlYXJjaCB3aGVuIGNvb3JkaW5hdGVzIGNoYW5nZVxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBsZXQgc2VhcmNoVGltZW91dDogTm9kZUpTLlRpbWVvdXQgfCBudWxsID0gbnVsbDtcclxuXHJcbiAgICAvLyBPbmx5IHByb2NlZWQgaWYgd2UgaGF2ZSBjb29yZGluYXRlcywgYXJlbid0IHNlYXJjaGluZywgYW5kIHBhbmVsIGlzIG9wZW5cclxuICAgIGlmICghY29vcmRpbmF0ZXMgfHwgaXNTZWFyY2hpbmcgfHwgIWlzT3BlbikgcmV0dXJuO1xyXG5cclxuICAgIC8vIENoZWNrIGlmIHdlJ3ZlIGFscmVhZHkgc2VhcmNoZWQgdGhlc2UgY29vcmRpbmF0ZXNcclxuICAgIGNvbnN0IGlzU2FtZUNvb3JkaW5hdGVzID1cclxuICAgICAgbGFzdFNlYXJjaFJlZi5jdXJyZW50Py5sYXQgPT09IGNvb3JkaW5hdGVzLmxhdCAmJlxyXG4gICAgICBsYXN0U2VhcmNoUmVmLmN1cnJlbnQ/LmxuZyA9PT0gY29vcmRpbmF0ZXMubG5nO1xyXG5cclxuICAgIC8vIFNraXAgaWYgd2UndmUgYWxyZWFkeSBzZWFyY2hlZCB0aGVzZSBleGFjdCBjb29yZGluYXRlc1xyXG4gICAgaWYgKGlzU2FtZUNvb3JkaW5hdGVzKSByZXR1cm47XHJcblxyXG4gICAgLy8gU2NoZWR1bGUgYSBzZWFyY2hcclxuICAgIHNlYXJjaFRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgLy8gRG91YmxlLWNoZWNrIHRoYXQgY29uZGl0aW9ucyBhcmUgc3RpbGwgdmFsaWQgd2hlbiB0aW1lb3V0IGZpcmVzXHJcbiAgICAgIGlmIChpc09wZW4gJiYgY29vcmRpbmF0ZXMgJiYgIWlzU2VhcmNoaW5nKSB7XHJcbiAgICAgICAgLy8gVXBkYXRlIHJlZmVyZW5jZSBiZWZvcmUgc2VhcmNoXHJcbiAgICAgICAgbGFzdFNlYXJjaFJlZi5jdXJyZW50ID0gY29vcmRpbmF0ZXM7XHJcbiAgICAgICAgb25TZWFyY2goY29vcmRpbmF0ZXMubGF0LCBjb29yZGluYXRlcy5sbmcpO1xyXG4gICAgICB9XHJcbiAgICB9LCAxNTAwKTtcclxuXHJcbiAgICAvLyBDbGVhbnVwIGZ1bmN0aW9uXHJcbiAgICByZXR1cm4gKCkgPT4ge1xyXG4gICAgICBpZiAoc2VhcmNoVGltZW91dCkge1xyXG4gICAgICAgIGNsZWFyVGltZW91dChzZWFyY2hUaW1lb3V0KTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuICB9LCBbY29vcmRpbmF0ZXMsIGlzU2VhcmNoaW5nLCBpc09wZW4sIG9uU2VhcmNoXSk7XHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAvLyBPbmx5IGZldGNoIGxvY2F0aW9uIG5hbWUgaWYgd2UgaGF2ZSBjb29yZGluYXRlcyBhbmQgbm90IGluIHNwZWNpYWwgc3RhdGVzXHJcbiAgICBpZiAoY29vcmRpbmF0ZXMgJiYgIWlzR2VvZmVuY2VBY3RpdmUgJiYgIWlzR2VvZmVuY2VQbGFjZW1lbnRNb2RlKSB7XHJcbiAgICAgIHNldElzTG9hZGluZyh0cnVlKTtcclxuXHJcbiAgICAgIGNvbnN0IGZldGNoTG9jYXRpb25OYW1lID0gYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICBjb25zdCBuYW1lID0gYXdhaXQgTWFwYm94U2VydmljZS5nZXRMb2NhdGlvbk5hbWVGcm9tQ29vcmRpbmF0ZXMoXHJcbiAgICAgICAgICAgIGNvb3JkaW5hdGVzLmxhdCxcclxuICAgICAgICAgICAgY29vcmRpbmF0ZXMubG5nXHJcbiAgICAgICAgICApO1xyXG4gICAgICAgICAgc2V0TG9jYXRpb25OYW1lKG5hbWUpO1xyXG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyBsb2NhdGlvbiBuYW1lOicsIGVycm9yKTtcclxuICAgICAgICAgIHNldExvY2F0aW9uTmFtZShudWxsKTtcclxuICAgICAgICB9IGZpbmFsbHkge1xyXG4gICAgICAgICAgc2V0SXNMb2FkaW5nKGZhbHNlKTtcclxuICAgICAgICB9XHJcbiAgICAgIH07XHJcblxyXG4gICAgICBmZXRjaExvY2F0aW9uTmFtZSgpO1xyXG4gICAgfVxyXG4gIH0sIFtjb29yZGluYXRlcywgaXNHZW9mZW5jZUFjdGl2ZSwgaXNHZW9mZW5jZVBsYWNlbWVudE1vZGVdKTtcclxuXHJcbiAgLy8gRW5hYmxlIG1hcCBjbGljayBtb2RlIHdoZW4gcGFuZWwgaXMgb3BlbmVkXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGlmIChpc09wZW4pIHtcclxuICAgICAgLy8gRGlzcGF0Y2ggZXZlbnQgdG8gbm90aWZ5IG1hcCB0aGF0IHdlJ3JlIGluIGdlb2ZlbmNlIHBsYWNlbWVudCBtb2RlXHJcbiAgICAgIGNvbnN0IGV2ZW50ID0gbmV3IEN1c3RvbUV2ZW50KCdlbmFibGUtZ2VvZmVuY2UtcGxhY2VtZW50Jywge1xyXG4gICAgICAgIGRldGFpbDogeyBhY3RpdmU6IHRydWUgfSxcclxuICAgICAgfSk7XHJcbiAgICAgIGRvY3VtZW50LmRpc3BhdGNoRXZlbnQoZXZlbnQpO1xyXG5cclxuICAgICAgLy8gU2V0IHVwIGxpc3RlbmVyIGZvciBtYXAgY2xpY2sgZXZlbnRzXHJcbiAgICAgIGNvbnN0IGhhbmRsZU1hcENsaWNrID0gKGU6IEN1c3RvbUV2ZW50KSA9PiB7XHJcbiAgICAgICAgY29uc3QgeyBsYXQsIGxuZyB9ID0gZS5kZXRhaWw7XHJcbiAgICAgICAgc2V0Q29vcmRpbmF0ZXMoeyBsYXQsIGxuZyB9KTtcclxuICAgICAgfTtcclxuXHJcbiAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXHJcbiAgICAgICAgJ21hcC1nZW9mZW5jZS1jbGljaycsXHJcbiAgICAgICAgaGFuZGxlTWFwQ2xpY2sgYXMgRXZlbnRMaXN0ZW5lclxyXG4gICAgICApO1xyXG5cclxuICAgICAgcmV0dXJuICgpID0+IHtcclxuICAgICAgICAvLyBDbGVhbiB1cFxyXG4gICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXHJcbiAgICAgICAgICAnbWFwLWdlb2ZlbmNlLWNsaWNrJyxcclxuICAgICAgICAgIGhhbmRsZU1hcENsaWNrIGFzIEV2ZW50TGlzdGVuZXJcclxuICAgICAgICApO1xyXG4gICAgICAgIC8vIFR1cm4gb2ZmIHBsYWNlbWVudCBtb2RlIHdoZW4gY29tcG9uZW50IHVubW91bnRzXHJcbiAgICAgICAgY29uc3QgZXZlbnQgPSBuZXcgQ3VzdG9tRXZlbnQoJ2VuYWJsZS1nZW9mZW5jZS1wbGFjZW1lbnQnLCB7XHJcbiAgICAgICAgICBkZXRhaWw6IHsgYWN0aXZlOiBmYWxzZSB9LFxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGRvY3VtZW50LmRpc3BhdGNoRXZlbnQoZXZlbnQpO1xyXG4gICAgICB9O1xyXG4gICAgfVxyXG4gIH0sIFtpc09wZW4sIHNldENvb3JkaW5hdGVzXSk7XHJcblxyXG4gIC8vIFRyaWdnZXJlZCB3aGVuIHRoZSB1c2VyIGNsaWNrcyB0aGUgc2VhcmNoIGJ1dHRvblxyXG4gIGNvbnN0IGhhbmRsZVNlYXJjaCA9ICgpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKCdoYW5kbGVTZWFyY2ggZnVuY3Rpb24gY2FsbGVkJyk7XHJcbiAgICBjb25zb2xlLmxvZygnY29vcmRpbmF0ZXM6JywgY29vcmRpbmF0ZXMpO1xyXG4gICAgY29uc29sZS5sb2coJ2lzU2VhcmNoaW5nOicsIGlzU2VhcmNoaW5nKTtcclxuXHJcbiAgICAvLyBHdWFyZCBjbGF1c2U6IENvb3JkaW5hdGVzIG11c3QgYmUgcHJlc2VudFxyXG4gICAgaWYgKCFjb29yZGluYXRlcykge1xyXG4gICAgICBjb25zb2xlLndhcm4oJ05vIGNvb3JkaW5hdGVzIGF2YWlsYWJsZSBmb3Igc2VhcmNoLicpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgLy8gR3VhcmQgY2xhdXNlOiBQcmV2ZW50IGR1cGxpY2F0ZSBzZWFyY2ggcmVxdWVzdHNcclxuICAgIGlmIChpc1NlYXJjaGluZykge1xyXG4gICAgICBjb25zb2xlLmluZm8oJ1NlYXJjaCBhbHJlYWR5IGluIHByb2dyZXNzLCBza2lwcGluZyBuZXcgcmVxdWVzdC4nKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHsgbGF0LCBsbmcgfSA9IGNvb3JkaW5hdGVzO1xyXG4gICAgY29uc29sZS5sb2coYEF0dGVtcHRpbmcgc2VhcmNoIHdpdGggbGF0OiAke2xhdH0sIGxuZzogJHtsbmd9YCk7XHJcblxyXG4gICAgdHJ5IHtcclxuICAgICAgb25TZWFyY2gobGF0LCBsbmcpOyAvLyBQZXJmb3JtIHRoZSBzZWFyY2hcclxuICAgICAgY29uc29sZS5sb2coJ1NlYXJjaCBmdW5jdGlvbiBleGVjdXRlZCBzdWNjZXNzZnVsbHkuJyk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdTZWFyY2ggZnVuY3Rpb24gZmFpbGVkOicsIGVycm9yKTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICBjb25zdCBoYW5kbGVTZWFyY2hSZXNldCA9ICgpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKCdSZXNldHRpbmcgc2VhcmNoIHN0YXRlJyk7XHJcblxyXG4gICAgLy8gMS4gUmVzZXQgc3RhdGUgdmFyaWFibGVzXHJcbiAgICBzZXRDb29yZGluYXRlcyhudWxsKTtcclxuICAgIGlmIChzZXRJc1NlYXJjaGluZykge1xyXG4gICAgICBzZXRJc1NlYXJjaGluZyhmYWxzZSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gMi4gQ2xlYXIgc2VhcmNoIHJlc3VsdHMgb3IgbWFya2VycyBmcm9tIG1hcC9VSVxyXG4gICAgaWYgKHR5cGVvZiBjbGVhck1hcmtlcnMgPT09ICdmdW5jdGlvbicpIGNsZWFyTWFya2VycygpO1xyXG4gICAgaWYgKHR5cGVvZiBjbGVhclNlYXJjaFJlc3VsdHMgPT09ICdmdW5jdGlvbicpIGNsZWFyU2VhcmNoUmVzdWx0cygpO1xyXG5cclxuICAgIC8vIDMuIFJlc2V0IHJpYmJvbiBzZWFyY2ggdGl0bGVcclxuICAgIGlmICh0eXBlb2Ygc2V0U2VhcmNoVGl0bGUgPT09ICdmdW5jdGlvbicpIHNldFNlYXJjaFRpdGxlKCcnKTtcclxuXHJcbiAgICAvLyBDbGVhciBsb2NhdGlvbiBuYW1lL3RpdGxlXHJcbiAgICBzZXRMb2NhdGlvbk5hbWUobnVsbCk7XHJcblxyXG4gICAgLy8gUmVzZXQgY29vcmRpbmF0ZXMgYW5kIHNlYXJjaCBzdGF0ZVxyXG4gICAgc2V0Q29vcmRpbmF0ZXMobnVsbCk7XHJcbiAgICBzZXRJc0xvYWRpbmcoZmFsc2UpO1xyXG5cclxuICAgIC8vIDQuIExvZyBvciBub3RpZnkgdXNlclxyXG4gICAgY29uc29sZS5sb2coJ1NlYXJjaCBzdGF0ZSBmdWxseSBjbGVhcmVkLiBBd2FpdGluZyBuZXcgc2VhcmNoIGlucHV0LicpO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8RHJhZ2dhYmxlXHJcbiAgICAgIG5vZGVSZWY9e25vZGVSZWZ9XHJcbiAgICAgIGhhbmRsZT1cIi5oYW5kbGVcIlxyXG4gICAgICBkZWZhdWx0UG9zaXRpb249e3Bvc2l0aW9ufVxyXG4gICAgICBvblN0b3A9eyhlLCBkYXRhKSA9PiBzZXRQb3NpdGlvbih7IHg6IGRhdGEueCwgeTogZGF0YS55IH0pfVxyXG4gICAgPlxyXG4gICAgICA8ZGl2XHJcbiAgICAgICAgcmVmPXtub2RlUmVmfVxyXG4gICAgICAgIGNsYXNzTmFtZT1cImFic29sdXRlIHotNTAgYmctd2hpdGUgcm91bmRlZC1sZyBzaGFkb3ctbGcgYm9yZGVyIGJvcmRlci1ncmF5LTIwMCB3LTgwIGdlb2ZlbmNlLWZsb2F0aW5nLXBhbmVsXCJcclxuICAgICAgICBzdHlsZT17e1xyXG4gICAgICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXHJcbiAgICAgICAgICB0b3A6IDAsXHJcbiAgICAgICAgICBsZWZ0OiAwLFxyXG4gICAgICAgIH19XHJcbiAgICAgID5cclxuICAgICAgICB7LyogSGVhZGVyL0hhbmRsZSBmb3IgZHJhZ2dpbmcgLSB3aXRoIGNlbnRlcmVkIHRpdGxlICovfVxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaGFuZGxlIHB4LTQgcHktMyBiZy1pbmRpZ28tNjAwIHRleHQtd2hpdGUgcm91bmRlZC10LWxnIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiBjdXJzb3ItbW92ZVwiPlxyXG4gICAgICAgICAgPGJ1dHRvblxyXG4gICAgICAgICAgICBvbkNsaWNrPXtvbkNsb3NlfVxyXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJ0ZXh0LXdoaXRlIGhvdmVyOmJnLWluZGlnby03MDAgcm91bmRlZC1mdWxsIHAtMVwiXHJcbiAgICAgICAgICAgIHRpdGxlPVwiQ2xvc2VcIlxyXG4gICAgICAgICAgPlxyXG4gICAgICAgICAgICA8WCBzaXplPXsxNn0gLz5cclxuICAgICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBmbGV4LWdyb3cgbXgtYXV0b1wiPlxyXG4gICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJmb250LW1lZGl1bSB0ZXh0LWNlbnRlclwiPlxyXG4gICAgICAgICAgICAgIFNlYXJjaCBQaW4gUGxhY2VtZW50XHJcbiAgICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ3LTRcIj48L2Rpdj4gey8qIEVtcHR5IGRpdiBmb3IgYmFsYW5jaW5nIHRoZSBsYXlvdXQgKi99XHJcbiAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgIHsvKiBCb2R5ICovfVxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicC00XCI+XHJcbiAgICAgICAgICB7LyogTG9jYXRpb24gZGlzcGxheSBhdCB0aGUgdG9wICovfVxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYi00XCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1jZW50ZXIgdGV4dC1zbSBmb250LW1lZGl1bSB0ZXh0LWdyYXktNzAwIG1iLTFcIj5cclxuICAgICAgICAgICAgICBTZWxlY3RlZCBMb2NhdGlvbjpcclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIHtjb29yZGluYXRlcyAmJiAoXHJcbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwLTIgYmctZ3JheS01MCByb3VuZGVkIGJvcmRlciBib3JkZXItZ3JheS0yMDAgdGV4dC1jZW50ZXJcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1ncmF5LTcwMCBmb250LWJvbGRcIj5cclxuICAgICAgICAgICAgICAgICAge2lzTG9hZGluZ0xvY2F0aW9uID8gKFxyXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuPkxvYWRpbmcgbG9jYXRpb24gbmFtZS4uLjwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgKSA6IGxvY2F0aW9uTmFtZSA/IChcclxuICAgICAgICAgICAgICAgICAgICBNYXBib3hTZXJ2aWNlLmZvcm1hdENpdHlDb3VudHJ5KGxvY2F0aW9uTmFtZSwgdHJ1ZSlcclxuICAgICAgICAgICAgICAgICAgKSA6IChcclxuICAgICAgICAgICAgICAgICAgICBgJHtjb29yZGluYXRlcy5sYXQudG9GaXhlZCg2KX0sICR7Y29vcmRpbmF0ZXMubG5nLnRvRml4ZWQoNil9YFxyXG4gICAgICAgICAgICAgICAgICApfVxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQteHMgdGV4dC1ncmF5LTUwMCBtdC0xXCI+XHJcbiAgICAgICAgICAgICAgICAgIHtjb29yZGluYXRlcy5sYXQudG9GaXhlZCg2KX0sIHtjb29yZGluYXRlcy5sbmcudG9GaXhlZCg2KX1cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICApfVxyXG4gICAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgICAgey8qIFJhZGl1cyBzbGlkZXIgKi99XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1iLTZcIj5cclxuICAgICAgICAgICAgPGxhYmVsIGNsYXNzTmFtZT1cInRleHQtc20gZm9udC1tZWRpdW0gdGV4dC1ncmF5LTcwMCBibG9jayBtYi0xXCI+XHJcbiAgICAgICAgICAgICAgUmFkaXVzOiB7Z2VvZmVuY2VSYWRpdXN9IGttXHJcbiAgICAgICAgICAgIDwvbGFiZWw+XHJcbiAgICAgICAgICAgIDxpbnB1dFxyXG4gICAgICAgICAgICAgIHR5cGU9XCJyYW5nZVwiXHJcbiAgICAgICAgICAgICAgbWluPVwiNVwiXHJcbiAgICAgICAgICAgICAgbWF4PVwiMTAwXCJcclxuICAgICAgICAgICAgICBzdGVwPVwiNVwiXHJcbiAgICAgICAgICAgICAgdmFsdWU9e2dlb2ZlbmNlUmFkaXVzfVxyXG4gICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0R2VvZmVuY2VSYWRpdXMocGFyc2VJbnQoZS50YXJnZXQudmFsdWUpKX1cclxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ3LWZ1bGwgaC0yIGJnLWdyYXktMjAwIHJvdW5kZWQtbGcgYXBwZWFyYW5jZS1ub25lIGN1cnNvci1wb2ludGVyXCJcclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGp1c3RpZnktYmV0d2VlbiB0ZXh0LXhzIHRleHQtZ3JheS01MDAgbXQtMVwiPlxyXG4gICAgICAgICAgICAgIDxzcGFuPjUga208L3NwYW4+XHJcbiAgICAgICAgICAgICAgPHNwYW4+NTAga208L3NwYW4+XHJcbiAgICAgICAgICAgICAgPHNwYW4+MTAwIGttPC9zcGFuPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICAgIHsvKiBJbnN0cnVjdGlvbnMgbW92ZWQgZG93biBuZWFyIHRoZSBidXR0b24gKi99XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1iLTMgdGV4dC1zbSB0ZXh0LWdyYXktNjAwIHRleHQtY2VudGVyXCI+XHJcbiAgICAgICAgICAgIENsaWNrIGFueXdoZXJlIG9uIHRoZSBtYXAgdG8gcGxhY2UgYSBzZWFyY2ggcGluXHJcbiAgICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgICB7LyogU2VhcmNoIGJ1dHRvbiAqL31cclxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBnYXAtMiB3LWZ1bGxcIj5cclxuICAgICAgICAgICAgey8qIFNlYXJjaCBCdXR0b24gKi99XHJcbiAgICAgICAgICAgIDxidXR0b25cclxuICAgICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcclxuICAgICAgICAgICAgICBvbkNsaWNrPXtoYW5kbGVTZWFyY2h9XHJcbiAgICAgICAgICAgICAgZGlzYWJsZWQ9eyFjb29yZGluYXRlcyB8fCBpc1NlYXJjaGluZ31cclxuICAgICAgICAgICAgICBjbGFzc05hbWU9e2BmbGV4LTEgcHktMiBweC00IGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIGdhcC0yIHJvdW5kZWQtbWQgJHtcclxuICAgICAgICAgICAgICAgICFjb29yZGluYXRlcyB8fCBpc1NlYXJjaGluZ1xyXG4gICAgICAgICAgICAgICAgICA/ICdiZy1ncmF5LTMwMCB0ZXh0LWdyYXktNTAwIGN1cnNvci1ub3QtYWxsb3dlZCdcclxuICAgICAgICAgICAgICAgICAgOiAnYmctaW5kaWdvLTYwMCB0ZXh0LXdoaXRlIGhvdmVyOmJnLWluZGlnby03MDAnXHJcbiAgICAgICAgICAgICAgfSB0cmFuc2l0aW9uLWNvbG9yc2B9XHJcbiAgICAgICAgICAgID5cclxuICAgICAgICAgICAgICBTZWFyY2hcclxuICAgICAgICAgICAgPC9idXR0b24+XHJcblxyXG4gICAgICAgICAgICB7LyogUmVzZXQgQnV0dG9uICovfVxyXG4gICAgICAgICAgICA8YnV0dG9uXHJcbiAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXHJcbiAgICAgICAgICAgICAgb25DbGljaz17aGFuZGxlU2VhcmNoUmVzZXR9XHJcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZmxleC0xIHB5LTIgcHgtNCBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBnYXAtMiByb3VuZGVkLW1kIGJnLXJlZC01MDAgdGV4dC13aGl0ZSBob3ZlcjpiZy1yZWQtNjAwIHRyYW5zaXRpb24tY29sb3JzXCJcclxuICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgIFJlc2V0XHJcbiAgICAgICAgICAgIDwvYnV0dG9uPlxyXG5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGdhcC0yIHctZnVsbFwiPlxyXG4gICAgICAgICAgICAgIHsvKiBTZWFyY2ggQnV0dG9uICovfVxyXG4gICAgICAgICAgICAgIDxidXR0b25cclxuICAgICAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxyXG4gICAgICAgICAgICAgICAgb25DbGljaz17aGFuZGxlU2VhcmNofVxyXG4gICAgICAgICAgICAgICAgZGlzYWJsZWQ9eyFjb29yZGluYXRlcyB8fCBpc1NlYXJjaGluZ31cclxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17YGZsZXgtMSBweS0yIHB4LTQgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgZ2FwLTIgcm91bmRlZC1tZCAke1xyXG4gICAgICAgICAgICAgICAgICAhY29vcmRpbmF0ZXMgfHwgaXNTZWFyY2hpbmdcclxuICAgICAgICAgICAgICAgICAgICA/ICdiZy1ncmF5LTMwMCB0ZXh0LWdyYXktNTAwIGN1cnNvci1ub3QtYWxsb3dlZCdcclxuICAgICAgICAgICAgICAgICAgICA6ICdiZy1pbmRpZ28tNjAwIHRleHQtd2hpdGUgaG92ZXI6YmctaW5kaWdvLTcwMCdcclxuICAgICAgICAgICAgICAgIH0gdHJhbnNpdGlvbi1jb2xvcnNgfVxyXG4gICAgICAgICAgICAgID5cclxuICAgICAgICAgICAgICAgIHtpc1NlYXJjaGluZyA/IChcclxuICAgICAgICAgICAgICAgICAgPD5cclxuICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzTmFtZT1cImFuaW1hdGUtc3BpbiBoLTUgdy01XCIgdmlld0JveD1cIjAgMCAyNCAyNFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgPGNpcmNsZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJvcGFjaXR5LTI1XCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgY3g9XCIxMlwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGN5PVwiMTJcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICByPVwiMTBcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzdHJva2U9XCJjdXJyZW50Q29sb3JcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzdHJva2VXaWR0aD1cIjRcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgPjwvY2lyY2xlPlxyXG4gICAgICAgICAgICAgICAgICAgICAgPHBhdGhcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwib3BhY2l0eS03NVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpbGw9XCJjdXJyZW50Q29sb3JcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBkPVwiTTQgMTJhOCA4IDAgMDE4LThWMEM1LjM3MyAwIDAgNS4zNzMgMCAxMmg0em0yIDUuMjkxQTcuOTYyIDcuOTYyIDAgMDE0IDEySDBjMCAzLjA0MiAxLjEzNSA1LjgyNCAzIDcuOTM4bDMtMi42NDd6XCJcclxuICAgICAgICAgICAgICAgICAgICAgID48L3BhdGg+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9zdmc+XHJcbiAgICAgICAgICAgICAgICAgICAgU2VhcmNoaW5nLi4uXHJcbiAgICAgICAgICAgICAgICAgIDwvPlxyXG4gICAgICAgICAgICAgICAgKSA6IChcclxuICAgICAgICAgICAgICAgICAgPD5cclxuICAgICAgICAgICAgICAgICAgICA8U2VhcmNoIHNpemU9ezE2fSAvPlxyXG4gICAgICAgICAgICAgICAgICAgIFNlYXJjaCBBaXJjcmFmdFxyXG4gICAgICAgICAgICAgICAgICA8Lz5cclxuICAgICAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgICAgPC9idXR0b24+XHJcblxyXG4gICAgICAgICAgICAgIHsvKiBSZXNldCBCdXR0b24gKi99XHJcbiAgICAgICAgICAgICAgPGJ1dHRvblxyXG4gICAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXHJcbiAgICAgICAgICAgICAgICBvbkNsaWNrPXtoYW5kbGVTZWFyY2hSZXNldH1cclxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImZsZXgtMSBweS0yIHB4LTQgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgZ2FwLTIgcm91bmRlZC1tZCBiZy1yZWQtNTAwIHRleHQtd2hpdGUgaG92ZXI6YmctcmVkLTYwMCB0cmFuc2l0aW9uLWNvbG9yc1wiXHJcbiAgICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgICAgUmVzZXRcclxuICAgICAgICAgICAgICA8L2J1dHRvbj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9kaXY+XHJcbiAgICA8L0RyYWdnYWJsZT5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgRmxvYXRpbmdHZW9mZW5jZVBhbmVsO1xyXG4iXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsInVzZVJlZiIsIlgiLCJTZWFyY2giLCJEcmFnZ2FibGUiLCJNYXBib3hTZXJ2aWNlIiwiRmxvYXRpbmdHZW9mZW5jZVBhbmVsIiwiaXNPcGVuIiwib25DbG9zZSIsImdlb2ZlbmNlUmFkaXVzIiwic2V0R2VvZmVuY2VSYWRpdXMiLCJpbml0aWFsUG9zaXRpb24iLCJvblNlYXJjaCIsImlzU2VhcmNoaW5nIiwiY29vcmRpbmF0ZXMiLCJzZXRDb29yZGluYXRlcyIsImlzR2VvZmVuY2VBY3RpdmUiLCJjbGVhck1hcmtlcnMiLCJjbGVhclNlYXJjaFJlc3VsdHMiLCJzZXRTZWFyY2hUaXRsZSIsInNldElzU2VhcmNoaW5nIiwiaXNHZW9mZW5jZVBsYWNlbWVudE1vZGUiLCJwb3NpdGlvbiIsInNldFBvc2l0aW9uIiwibm9kZVJlZiIsImxvY2F0aW9uTmFtZSIsInNldExvY2F0aW9uTmFtZSIsImlzTG9hZGluZ0xvY2F0aW9uIiwic2V0SXNMb2FkaW5nTG9jYXRpb24iLCJpc0xvYWRpbmciLCJzZXRJc0xvYWRpbmciLCJwcmV2Q29vcmRpbmF0ZXNSZWYiLCJpc1NhbWVDb29yZGluYXRlcyIsImN1cnJlbnQiLCJsYXQiLCJsbmciLCJjb25zb2xlIiwibG9nIiwiZ2V0TG9jYXRpb25OYW1lRnJvbUNvb3JkaW5hdGVzIiwidGhlbiIsIm5hbWUiLCJjYXRjaCIsImVycm9yIiwiZmluYWxseSIsImxhc3RTZWFyY2hSZWYiLCJzZWFyY2hUaW1lb3V0Iiwic2V0VGltZW91dCIsImNsZWFyVGltZW91dCIsImZldGNoTG9jYXRpb25OYW1lIiwiZXZlbnQiLCJDdXN0b21FdmVudCIsImRldGFpbCIsImFjdGl2ZSIsImRvY3VtZW50IiwiZGlzcGF0Y2hFdmVudCIsImhhbmRsZU1hcENsaWNrIiwiZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiaGFuZGxlU2VhcmNoIiwid2FybiIsImluZm8iLCJoYW5kbGVTZWFyY2hSZXNldCIsImhhbmRsZSIsImRlZmF1bHRQb3NpdGlvbiIsIm9uU3RvcCIsImRhdGEiLCJ4IiwieSIsImRpdiIsInJlZiIsImNsYXNzTmFtZSIsInN0eWxlIiwidG9wIiwibGVmdCIsImJ1dHRvbiIsIm9uQ2xpY2siLCJ0aXRsZSIsInNpemUiLCJzcGFuIiwiZm9ybWF0Q2l0eUNvdW50cnkiLCJ0b0ZpeGVkIiwibGFiZWwiLCJpbnB1dCIsInR5cGUiLCJtaW4iLCJtYXgiLCJzdGVwIiwidmFsdWUiLCJvbkNoYW5nZSIsInBhcnNlSW50IiwidGFyZ2V0IiwiZGlzYWJsZWQiLCJzdmciLCJ2aWV3Qm94IiwiY2lyY2xlIiwiY3giLCJjeSIsInIiLCJzdHJva2UiLCJzdHJva2VXaWR0aCIsInBhdGgiLCJmaWxsIiwiZCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./components/tracking/filters/FloatingGeofencePanel.tsx\n"));

/***/ })

});