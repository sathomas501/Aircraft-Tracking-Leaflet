"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_pages-dir-browser_components_tracking_map_AircraftTrackingMap_tsx",{

/***/ "(pages-dir-browser)/./components/tracking/filters/GeofenceFilter.tsx":
/*!********************************************************!*\
  !*** ./components/tracking/filters/GeofenceFilter.tsx ***!
  \********************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_MapPin_lucide_react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! __barrel_optimize__?names=MapPin!=!lucide-react */ \"(pages-dir-browser)/__barrel_optimize__?names=MapPin!=!./node_modules/lucide-react/dist/esm/lucide-react.js\");\n/* harmony import */ var _context_EnhancedMapContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../context/EnhancedMapContext */ \"(pages-dir-browser)/./components/tracking/context/EnhancedMapContext.tsx\");\n/* harmony import */ var _FloatingGeofencePanel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./FloatingGeofencePanel */ \"(pages-dir-browser)/./components/tracking/filters/FloatingGeofencePanel.tsx\");\n/* harmony import */ var _lib_services_geofencing__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../lib/services/geofencing */ \"(pages-dir-browser)/./lib/services/geofencing.ts\");\n/* harmony import */ var _lib_services_MapboxService__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../lib/services/MapboxService */ \"(pages-dir-browser)/./lib/services/MapboxService.ts\");\n/* harmony import */ var _utils_getFlagImage__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../utils/getFlagImage */ \"(pages-dir-browser)/./utils/getFlagImage.ts\");\n// Description: This component handles the geofence filter functionality, including location search, radius adjustment, and aircraft data fetching.\n// It also manages the floating panel for geofence placement on the map.\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\nconst GeofenceFilter = (param)=>{\n    let { geofenceLocation, geofenceRadius, isGettingLocation, isGeofenceActive, geofenceCoordinates, getUserLocation, processGeofenceSearch, toggleGeofenceState, setGeofenceLocation, setGeofenceRadius, setGeofenceCoordinates, setGeofenceCenter, setActiveDropdown, combinedLoading, activeDropdown, toggleDropdown, dropdownRef, updateGeofenceAircraft, coordinates } = param;\n    _s();\n    // Get context and state\n    const { isGeofencePlacementMode, setIsGeofencePlacementMode, mapInstance } = (0,_context_EnhancedMapContext__WEBPACK_IMPORTED_MODULE_2__.useEnhancedMapContext)();\n    const [showFloatingPanel, setShowFloatingPanel] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [tempCoordinates, setTempCoordinates] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isSearching, setIsSearching] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [locationName, setLocationName] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const prevCoordinatesRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [isLoadingLocation, setIsLoadingLocation] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Handle opening the floating panel\n    const openFloatingPanel = ()=>{\n        setShowFloatingPanel(true);\n        setIsGeofencePlacementMode(true); // Enter placement mode\n        setActiveDropdown(null); // Close the dropdown\n    };\n    // Handle closing the floating panel\n    const closeFloatingPanel = ()=>{\n        setShowFloatingPanel(false);\n        setIsGeofencePlacementMode(false);\n        setTempCoordinates(null); // Clear temporary coordinates\n    };\n    // Handle panel search\n    const handlePanelSearch = async (lat, lng)=>{\n        setIsSearching(true);\n        try {\n            // Update the geofence location name\n            const locationName = await _lib_services_MapboxService__WEBPACK_IMPORTED_MODULE_5__.MapboxService.getLocationNameFromCoordinates(lat, lng);\n            // Set the location name\n            if (locationName) {\n                setGeofenceLocation(locationName);\n            } else {\n                // Fallback to coordinates if no name is found\n                setGeofenceLocation(\"\".concat(lat.toFixed(4), \", \").concat(lng.toFixed(4)));\n            }\n            // Set coordinates using the same functions from processGeofenceSearch\n            if (setGeofenceCoordinates) {\n                setGeofenceCoordinates({\n                    lat,\n                    lng\n                });\n            }\n            if (setGeofenceCenter) {\n                setGeofenceCenter({\n                    lat,\n                    lng\n                });\n            }\n            // Get aircraft data near this location\n            await fetchAircraftForClickLocation(lat, lng);\n            // Activate geofence if not already active\n            if (!isGeofenceActive) {\n                toggleGeofenceState(true);\n            }\n            // Center the map on this location\n            if (mapInstance && typeof mapInstance.setView === 'function') {\n                // Get current zoom level\n                const currentZoom = mapInstance.getZoom();\n                // Use appropriate zoom level based on current view\n                const targetZoom = currentZoom <= 7 ? 9 : currentZoom;\n                // Set view to the coordinates\n                mapInstance.setView([\n                    lat,\n                    lng\n                ], targetZoom);\n                // Ensure map is updated\n                mapInstance.invalidateSize();\n            }\n        } catch (error) {\n            console.error('Error searching from panel:', error);\n        } finally{\n            setIsSearching(false);\n        }\n    };\n    // Function to get and process aircraft data\n    const fetchAircraftForClickLocation = async (lat, lng)=>{\n        try {\n            console.log('Fetching aircraft near clicked location:', lat, lng);\n            // Call the existing function from your geofencing.ts\n            const fetchedAircraft = await (0,_lib_services_geofencing__WEBPACK_IMPORTED_MODULE_4__.getAircraftNearLocation)(lat, lng, geofenceRadius || 25);\n            // Process the aircraft data\n            if (fetchedAircraft.length === 0) {\n                console.log('No aircraft found near clicked location');\n                return;\n            }\n            // Update the context with the new aircraft - add null check\n            if (typeof updateGeofenceAircraft === 'function') {\n                updateGeofenceAircraft(fetchedAircraft);\n            } else {\n                console.warn('updateGeofenceAircraft is not available or not a function');\n            }\n            console.log(\"Found \".concat(fetchedAircraft.length, \" aircraft near clicked location\"));\n        } catch (error) {\n            console.error('Error fetching aircraft for clicked location:', error);\n        }\n    };\n    const formatCityCountry = function(locationString) {\n        let countryOnly = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n        if (!locationString) return '';\n        // Split by commas\n        const parts = locationString.split(',').map((part)=>part.trim());\n        // If we only want the country\n        if (countryOnly && parts.length >= 1) {\n            // Return the last part (usually the country)\n            return parts[parts.length - 1];\n        }\n        // For city, country format\n        if (parts.length >= 2) {\n            // Get country (usually the last part)\n            const country = parts[parts.length - 1];\n            // For city, use the first meaningful part\n            let city = parts[0];\n            // Skip redundant parts like province/city name duplication (Madrid, Madrid)\n            if (parts.length >= 3 && parts[0] === parts[1]) {\n                city = parts[0];\n            }\n            return \"\".concat(city, \", \").concat(country);\n        }\n        return locationString;\n    };\n    const country = formatCityCountry(locationName || '', true);\n    const flagUrl = (0,_utils_getFlagImage__WEBPACK_IMPORTED_MODULE_6__.getFlagImageUrl)(country);\n    const renderFlagAndName = (countryName)=>{\n        const flagUrl = (0,_utils_getFlagImage__WEBPACK_IMPORTED_MODULE_6__.getFlagImageUrl)(countryName);\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n            className: \"flex items-center gap-2\",\n            children: [\n                flagUrl && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                    src: flagUrl,\n                    alt: \"\".concat(countryName, \" flag\"),\n                    className: \"w-5 h-3 rounded-sm\"\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                    lineNumber: 216,\n                    columnNumber: 11\n                }, undefined),\n                countryName\n            ]\n        }, void 0, true, {\n            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n            lineNumber: 214,\n            columnNumber: 7\n        }, undefined);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"GeofenceFilter.useEffect\": ()=>{\n            if (coordinates && !isGeofenceActive && !isGeofencePlacementMode) {\n                const fetchLocationName = {\n                    \"GeofenceFilter.useEffect.fetchLocationName\": async ()=>{\n                        try {\n                            // Make sure to pass both lat and lng as separate arguments\n                            // or according to how your function is defined\n                            const name = await _lib_services_MapboxService__WEBPACK_IMPORTED_MODULE_5__.MapboxService.getLocationNameFromCoordinates(coordinates.lat, coordinates.lng);\n                            setLocationName(name);\n                        } catch (error) {\n                            console.error('Error fetching location name:', error);\n                            setLocationName(null);\n                        }\n                    }\n                }[\"GeofenceFilter.useEffect.fetchLocationName\"];\n                fetchLocationName();\n            }\n        }\n    }[\"GeofenceFilter.useEffect\"], [\n        coordinates,\n        isGeofenceActive,\n        isGeofencePlacementMode\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"GeofenceFilter.useEffect\": ()=>{\n            // Only fetch location name if we have coordinates and not in special states\n            if (coordinates && !isGeofenceActive && !isGeofencePlacementMode) {\n                setIsLoading(true);\n                const fetchLocationName = {\n                    \"GeofenceFilter.useEffect.fetchLocationName\": async ()=>{\n                        try {\n                            const name = await _lib_services_MapboxService__WEBPACK_IMPORTED_MODULE_5__.MapboxService.getLocationNameFromCoordinates(coordinates.lat, coordinates.lng);\n                            setLocationName(name);\n                        } catch (error) {\n                            console.error('Error fetching location name:', error);\n                            setLocationName(null);\n                        } finally{\n                            setIsLoading(false);\n                        }\n                    }\n                }[\"GeofenceFilter.useEffect.fetchLocationName\"];\n                fetchLocationName();\n            }\n        }\n    }[\"GeofenceFilter.useEffect\"], [\n        coordinates,\n        isGeofenceActive,\n        isGeofencePlacementMode\n    ]);\n    // In your location name effect\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"GeofenceFilter.useEffect\": ()=>{\n            var _prevCoordinatesRef_current, _prevCoordinatesRef_current1;\n            if (!coordinates) return;\n            const isSameCoordinates = ((_prevCoordinatesRef_current = prevCoordinatesRef.current) === null || _prevCoordinatesRef_current === void 0 ? void 0 : _prevCoordinatesRef_current.lat) === coordinates.lat && ((_prevCoordinatesRef_current1 = prevCoordinatesRef.current) === null || _prevCoordinatesRef_current1 === void 0 ? void 0 : _prevCoordinatesRef_current1.lng) === coordinates.lng;\n            if (isSameCoordinates && (locationName || isLoadingLocation)) {\n                return;\n            }\n            prevCoordinatesRef.current = coordinates;\n            setIsLoadingLocation(true);\n            MapboxServices.getLocationNameFromCoordinates(coordinates.lat, coordinates.lng).then({\n                \"GeofenceFilter.useEffect\": (name)=>{\n                    setLocationName(name);\n                }\n            }[\"GeofenceFilter.useEffect\"]).catch({\n                \"GeofenceFilter.useEffect\": (error)=>{\n                    console.error('Error fetching location name:', error);\n                }\n            }[\"GeofenceFilter.useEffect\"]).finally({\n                \"GeofenceFilter.useEffect\": ()=>{\n                    setIsLoadingLocation(false);\n                }\n            }[\"GeofenceFilter.useEffect\"]);\n        }\n    }[\"GeofenceFilter.useEffect\"], [\n        coordinates\n    ]);\n    // Listen for the clear all filters event\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"GeofenceFilter.useEffect\": ()=>{\n            const handleClearAllFilters = {\n                \"GeofenceFilter.useEffect.handleClearAllFilters\": ()=>{\n                    // Close the floating panel when filters are cleared\n                    if (showFloatingPanel) {\n                        closeFloatingPanel();\n                    }\n                }\n            }[\"GeofenceFilter.useEffect.handleClearAllFilters\"];\n            // Add event listener for the clear all filters event\n            document.addEventListener('ribbon-filters-cleared', handleClearAllFilters);\n            // Clean up\n            return ({\n                \"GeofenceFilter.useEffect\": ()=>{\n                    document.removeEventListener('ribbon-filters-cleared', handleClearAllFilters);\n                }\n            })[\"GeofenceFilter.useEffect\"];\n        }\n    }[\"GeofenceFilter.useEffect\"], [\n        showFloatingPanel,\n        closeFloatingPanel\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: dropdownRef,\n        className: \"relative\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                className: \"px-4 py-2 flex items-center justify-between gap-2 rounded-lg border \".concat(activeDropdown === 'location' ? 'bg-indigo-100 text-indigo-700 border-indigo-300 shadow-sm' : isGeofenceActive ? 'bg-indigo-50/70 text-indigo-600 border-indigo-200' : 'bg-gray-50/30 hover:bg-gray-50 border-gray-200 text-gray-700 hover:border-gray-300', \" transition-all duration-200\"),\n                onClick: (event)=>toggleDropdown('location', event),\n                disabled: combinedLoading || isGeofencePlacementMode,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"flex items-center gap-2 font-medium\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_MapPin_lucide_react__WEBPACK_IMPORTED_MODULE_7__.MapPin, {\n                                size: 16,\n                                className: isGeofenceActive ? 'text-indigo-500' : 'text-gray-500'\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                lineNumber: 338,\n                                columnNumber: 11\n                            }, undefined),\n                            isGeofenceActive && geofenceLocation ? renderFlagAndName(formatCityCountry(geofenceLocation, true)) : isGeofencePlacementMode ? 'Click on map...' : isLoading ? 'Loading location...' : locationName ? renderFlagAndName(formatCityCountry(locationName, true)) : 'Location'\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                        lineNumber: 337,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        className: \"h-4 w-4 transition-transform \".concat(activeDropdown === 'location' ? 'transform rotate-180' : ''),\n                        fill: \"none\",\n                        viewBox: \"0 0 24 24\",\n                        stroke: \"currentColor\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            strokeLinecap: \"round\",\n                            strokeLinejoin: \"round\",\n                            strokeWidth: 2,\n                            d: \"M19 9l-7 7-7-7\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                            lineNumber: 360,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                        lineNumber: 353,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                lineNumber: 326,\n                columnNumber: 7\n            }, undefined),\n            activeDropdown === 'location' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute left-0 top-full mt-1 w-72 bg-white shadow-lg rounded-md border border-gray-200 z-50\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"p-3 border-b\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex gap-2 mb-3\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                        type: \"text\",\n                                        className: \"flex-1 px-3 py-2 border border-gray-300 rounded-md\",\n                                        placeholder: \"ZIP code or coordinates...\",\n                                        value: geofenceLocation,\n                                        onChange: (e)=>setGeofenceLocation(e.target.value),\n                                        onKeyDown: (e)=>{\n                                            if (e.key === 'Enter' && !combinedLoading && geofenceLocation) {\n                                                processGeofenceSearch();\n                                            }\n                                        },\n                                        autoFocus: true\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                        lineNumber: 374,\n                                        columnNumber: 15\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        className: \"px-3 py-2 rounded-md text-white \".concat(combinedLoading || !geofenceLocation && !isGettingLocation ? 'bg-gray-400 cursor-not-allowed' : 'bg-indigo-600 hover:bg-indigo-700'),\n                                        onClick: processGeofenceSearch,\n                                        disabled: combinedLoading || !geofenceLocation && !isGettingLocation,\n                                        title: \"Search\",\n                                        children: combinedLoading ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                            className: \"animate-spin h-5 w-5\",\n                                            viewBox: \"0 0 24 24\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                                                    className: \"opacity-25\",\n                                                    cx: \"12\",\n                                                    cy: \"12\",\n                                                    r: \"10\",\n                                                    stroke: \"currentColor\",\n                                                    strokeWidth: \"4\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                                    lineNumber: 405,\n                                                    columnNumber: 21\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                    className: \"opacity-75\",\n                                                    fill: \"currentColor\",\n                                                    d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                                    lineNumber: 413,\n                                                    columnNumber: 21\n                                                }, undefined)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                            lineNumber: 404,\n                                            columnNumber: 19\n                                        }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                            xmlns: \"http://www.w3.org/2000/svg\",\n                                            className: \"h-5 w-5\",\n                                            fill: \"none\",\n                                            viewBox: \"0 0 24 24\",\n                                            stroke: \"currentColor\",\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                strokeLinecap: \"round\",\n                                                strokeLinejoin: \"round\",\n                                                strokeWidth: 2,\n                                                d: \"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                                lineNumber: 427,\n                                                columnNumber: 21\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                            lineNumber: 420,\n                                            columnNumber: 19\n                                        }, undefined)\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                        lineNumber: 391,\n                                        columnNumber: 15\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                lineNumber: 373,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: openFloatingPanel,\n                                className: \"w-full flex items-center justify-center py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_MapPin_lucide_react__WEBPACK_IMPORTED_MODULE_7__.MapPin, {\n                                        size: 16,\n                                        className: \"mr-2\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                        lineNumber: 443,\n                                        columnNumber: 15\n                                    }, undefined),\n                                    \"Click on Map to Set Location\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                lineNumber: 439,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"my-2\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                lineNumber: 448,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                className: \"w-full flex items-center justify-center py-2 border border-indigo-300 rounded-md text-indigo-700 bg-indigo-50 hover:bg-indigo-100 transition-colors \".concat(isGettingLocation ? 'opacity-75 cursor-not-allowed' : ''),\n                                onClick: getUserLocation,\n                                disabled: isGettingLocation || combinedLoading,\n                                children: isGettingLocation ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                            className: \"animate-spin h-4 w-4 mr-2\",\n                                            viewBox: \"0 0 24 24\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                                                    className: \"opacity-25\",\n                                                    cx: \"12\",\n                                                    cy: \"12\",\n                                                    r: \"10\",\n                                                    stroke: \"currentColor\",\n                                                    strokeWidth: \"4\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                                    lineNumber: 464,\n                                                    columnNumber: 21\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                    className: \"opacity-75\",\n                                                    fill: \"currentColor\",\n                                                    d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                                    lineNumber: 472,\n                                                    columnNumber: 21\n                                                }, undefined)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                            lineNumber: 460,\n                                            columnNumber: 19\n                                        }, undefined),\n                                        \"Getting location...\"\n                                    ]\n                                }, void 0, true) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_MapPin_lucide_react__WEBPACK_IMPORTED_MODULE_7__.MapPin, {\n                                            size: 16,\n                                            className: \"mr-2\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                            lineNumber: 482,\n                                            columnNumber: 19\n                                        }, undefined),\n                                        \"Use My Current Location\"\n                                    ]\n                                }, void 0, true)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                lineNumber: 451,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                        lineNumber: 372,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"p-3 border-b\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                className: \"text-sm font-medium text-gray-700 block mb-1\",\n                                children: [\n                                    \"Radius: \",\n                                    geofenceRadius,\n                                    \" km\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                lineNumber: 491,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                type: \"range\",\n                                min: \"5\",\n                                max: \"100\",\n                                step: \"5\",\n                                value: geofenceRadius,\n                                onChange: (e)=>setGeofenceRadius(parseInt(e.target.value)),\n                                className: \"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                lineNumber: 494,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex justify-between text-xs text-gray-500 mt-1\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        children: \"5 km\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                        lineNumber: 504,\n                                        columnNumber: 15\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        children: \"50 km\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                        lineNumber: 505,\n                                        columnNumber: 15\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        children: \"100 km\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                        lineNumber: 506,\n                                        columnNumber: 15\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                                lineNumber: 503,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                        lineNumber: 490,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                lineNumber: 370,\n                columnNumber: 9\n            }, undefined),\n            showFloatingPanel && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_FloatingGeofencePanel__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                isOpen: showFloatingPanel,\n                onClose: closeFloatingPanel,\n                geofenceRadius: geofenceRadius,\n                setGeofenceRadius: setGeofenceRadius,\n                onSearch: handlePanelSearch,\n                isSearching: isSearching,\n                coordinates: tempCoordinates,\n                setCoordinates: setTempCoordinates,\n                isGeofenceActive: isGeofenceActive,\n                isGeofencePlacementMode: isGeofencePlacementMode\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n                lineNumber: 514,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\GeofenceFilter.tsx\",\n        lineNumber: 325,\n        columnNumber: 5\n    }, undefined);\n};\n_s(GeofenceFilter, \"4sfJxYige8w6lkXXnMEtz1ivdSI=\", false, function() {\n    return [\n        _context_EnhancedMapContext__WEBPACK_IMPORTED_MODULE_2__.useEnhancedMapContext\n    ];\n});\n_c = GeofenceFilter;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (GeofenceFilter);\nvar _c;\n$RefreshReg$(_c, \"GeofenceFilter\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./components/tracking/filters/GeofenceFilter.tsx\n"));

/***/ })

});