"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_pages-dir-browser_components_tracking_map_AircraftTrackingMap_tsx",{

/***/ "(pages-dir-browser)/./components/tracking/filters/FloatingGeofencePanel.tsx":
/*!***************************************************************!*\
  !*** ./components/tracking/filters/FloatingGeofencePanel.tsx ***!
  \***************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_Search_X_lucide_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! __barrel_optimize__?names=Search,X!=!lucide-react */ \"(pages-dir-browser)/__barrel_optimize__?names=Search,X!=!./node_modules/lucide-react/dist/esm/lucide-react.js\");\n/* harmony import */ var react_draggable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-draggable */ \"(pages-dir-browser)/./node_modules/react-draggable/build/cjs/cjs.js\");\n/* harmony import */ var react_draggable__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_draggable__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _lib_services_MapboxService__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../lib/services/MapboxService */ \"(pages-dir-browser)/./lib/services/MapboxService.ts\");\n/* harmony import */ var _utils_getFlagImage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../utils/getFlagImage */ \"(pages-dir-browser)/./utils/getFlagImage.ts\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\nconst FloatingGeofencePanel = (param)=>{\n    let { isOpen, onClose, geofenceRadius, setGeofenceRadius, initialPosition, onSearch, isSearching, coordinates, setCoordinates, isGeofenceActive, isGeofencePlacementMode, setActiveDropdown } = param;\n    _s();\n    const [position, setPosition] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initialPosition);\n    const nodeRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [locationName, setLocationName] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isLoadingLocation, setIsLoadingLocation] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Fetch location name whenever coordinates change\n    // Add a reference to store the previous coordinates to avoid unnecessary API calls\n    const prevCoordinatesRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Modify your location name effect to use the ref\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"FloatingGeofencePanel.useEffect\": ()=>{\n            var _prevCoordinatesRef_current, _prevCoordinatesRef_current1;\n            // Only proceed if we have coordinates\n            if (!coordinates) return;\n            // Check if these are the same coordinates as before\n            const isSameCoordinates = ((_prevCoordinatesRef_current = prevCoordinatesRef.current) === null || _prevCoordinatesRef_current === void 0 ? void 0 : _prevCoordinatesRef_current.lat) === coordinates.lat && ((_prevCoordinatesRef_current1 = prevCoordinatesRef.current) === null || _prevCoordinatesRef_current1 === void 0 ? void 0 : _prevCoordinatesRef_current1.lng) === coordinates.lng;\n            // If these are the same coordinates and we already have a location name or are loading,\n            // don't make another API call\n            if (isSameCoordinates && (locationName || isLoadingLocation)) {\n                return;\n            }\n            // Near the top of your component\n            console.log('onSearch prop:', onSearch);\n            console.log('onSearch is function?', typeof onSearch === 'function');\n            // Update the reference with current coordinates\n            prevCoordinatesRef.current = coordinates;\n            // Proceed with API call\n            setIsLoadingLocation(true);\n            _lib_services_MapboxService__WEBPACK_IMPORTED_MODULE_3__.MapboxService.getLocationNameFromCoordinates(coordinates.lat, coordinates.lng).then({\n                \"FloatingGeofencePanel.useEffect\": (name)=>{\n                    setLocationName(name);\n                }\n            }[\"FloatingGeofencePanel.useEffect\"]).catch({\n                \"FloatingGeofencePanel.useEffect\": (error)=>{\n                    console.error('Error fetching location name:', error);\n                }\n            }[\"FloatingGeofencePanel.useEffect\"]).finally({\n                \"FloatingGeofencePanel.useEffect\": ()=>{\n                    setIsLoadingLocation(false);\n                }\n            }[\"FloatingGeofencePanel.useEffect\"]);\n        // Don't include locationName in dependencies to avoid loops\n        }\n    }[\"FloatingGeofencePanel.useEffect\"], [\n        coordinates\n    ]);\n    // Auto-search when coordinates change, with improved throttling and debouncing\n    // Use a reference for the last search coordinates\n    const lastSearchRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Auto-search when coordinates change\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"FloatingGeofencePanel.useEffect\": ()=>{\n            var _lastSearchRef_current, _lastSearchRef_current1;\n            let searchTimeout = null;\n            // Only proceed if we have coordinates, aren't searching, and panel is open\n            if (!coordinates || isSearching || !isOpen) return;\n            // Check if we've already searched these coordinates\n            const isSameCoordinates = ((_lastSearchRef_current = lastSearchRef.current) === null || _lastSearchRef_current === void 0 ? void 0 : _lastSearchRef_current.lat) === coordinates.lat && ((_lastSearchRef_current1 = lastSearchRef.current) === null || _lastSearchRef_current1 === void 0 ? void 0 : _lastSearchRef_current1.lng) === coordinates.lng;\n            // Skip if we've already searched these exact coordinates\n            if (isSameCoordinates) return;\n            // Schedule a search\n            searchTimeout = setTimeout({\n                \"FloatingGeofencePanel.useEffect\": ()=>{\n                    // Double-check that conditions are still valid when timeout fires\n                    if (isOpen && coordinates && !isSearching) {\n                        // Update reference before search\n                        lastSearchRef.current = coordinates;\n                        onSearch(coordinates.lat, coordinates.lng);\n                    }\n                }\n            }[\"FloatingGeofencePanel.useEffect\"], 1500);\n            // Cleanup function\n            return ({\n                \"FloatingGeofencePanel.useEffect\": ()=>{\n                    if (searchTimeout) {\n                        clearTimeout(searchTimeout);\n                    }\n                }\n            })[\"FloatingGeofencePanel.useEffect\"];\n        }\n    }[\"FloatingGeofencePanel.useEffect\"], [\n        coordinates,\n        isSearching,\n        isOpen,\n        onSearch\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"FloatingGeofencePanel.useEffect\": ()=>{\n            // Only fetch location name if we have coordinates and not in special states\n            if (coordinates && !isGeofenceActive && !isGeofencePlacementMode) {\n                setIsLoading(true);\n                const fetchLocationName = {\n                    \"FloatingGeofencePanel.useEffect.fetchLocationName\": async ()=>{\n                        try {\n                            const name = await _lib_services_MapboxService__WEBPACK_IMPORTED_MODULE_3__.MapboxService.getLocationNameFromCoordinates(coordinates.lat, coordinates.lng);\n                            setLocationName(name);\n                        } catch (error) {\n                            console.error('Error fetching location name:', error);\n                            setLocationName(null);\n                        } finally{\n                            setIsLoading(false);\n                        }\n                    }\n                }[\"FloatingGeofencePanel.useEffect.fetchLocationName\"];\n                fetchLocationName();\n            }\n        }\n    }[\"FloatingGeofencePanel.useEffect\"], [\n        coordinates,\n        isGeofenceActive,\n        isGeofencePlacementMode\n    ]);\n    // Helper function to extract just city and country\n    // Enable map click mode when panel is opened\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"FloatingGeofencePanel.useEffect\": ()=>{\n            if (isOpen) {\n                // Immediately close any active dropdown\n                setActiveDropdown(null);\n                // Dispatch event to notify map that we're in geofence placement mode\n                const event = new CustomEvent('enable-geofence-placement', {\n                    detail: {\n                        active: true\n                    }\n                });\n                document.dispatchEvent(event);\n                // Set up listener for map click events\n                const handleMapClick = {\n                    \"FloatingGeofencePanel.useEffect.handleMapClick\": (e)=>{\n                        const { lat, lng } = e.detail;\n                        setCoordinates({\n                            lat,\n                            lng\n                        });\n                    }\n                }[\"FloatingGeofencePanel.useEffect.handleMapClick\"];\n                document.addEventListener('map-geofence-click', handleMapClick);\n                return ({\n                    \"FloatingGeofencePanel.useEffect\": ()=>{\n                        // Clean up\n                        document.removeEventListener('map-geofence-click', handleMapClick);\n                        // Turn off placement mode when component unmounts\n                        const event = new CustomEvent('enable-geofence-placement', {\n                            detail: {\n                                active: false\n                            }\n                        });\n                        document.dispatchEvent(event);\n                    }\n                })[\"FloatingGeofencePanel.useEffect\"];\n            }\n        }\n    }[\"FloatingGeofencePanel.useEffect\"], [\n        isOpen,\n        setCoordinates\n    ]);\n    const country = _lib_services_MapboxService__WEBPACK_IMPORTED_MODULE_3__.MapboxService.formatCityCountry(locationName || '', true);\n    const flagUrl = (0,_utils_getFlagImage__WEBPACK_IMPORTED_MODULE_4__.getFlagImageUrl)(country);\n    // Add this function inside your FloatingGeofencePanel component\n    const renderFlagAndName = (countryName)=>{\n        const flagUrl = (0,_utils_getFlagImage__WEBPACK_IMPORTED_MODULE_4__.getFlagImageUrl)(countryName);\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n            className: \"flex items-center gap-2\",\n            children: [\n                flagUrl && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                    src: flagUrl,\n                    alt: \"\".concat(countryName, \" flag\"),\n                    className: \"w-5 h-3 rounded-sm\"\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                    lineNumber: 211,\n                    columnNumber: 11\n                }, undefined),\n                countryName\n            ]\n        }, void 0, true, {\n            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n            lineNumber: 209,\n            columnNumber: 7\n        }, undefined);\n    };\n    // Handle search button click\n    const handleSearch = ()=>{\n        console.log('handleSearch function called');\n        console.log('coordinates:', coordinates);\n        console.log('isSearching:', isSearching);\n        if (!coordinates) {\n            console.log('No coordinates available');\n            return;\n        }\n        if (isSearching) {\n            console.log('Already searching, skipping');\n            return;\n        }\n        console.log('About to call onSearch with:', coordinates.lat, coordinates.lng);\n        try {\n            onSearch(coordinates.lat, coordinates.lng);\n            console.log('onSearch called successfully');\n        } catch (error) {\n            console.error('Error calling onSearch:', error);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((react_draggable__WEBPACK_IMPORTED_MODULE_2___default()), {\n        nodeRef: nodeRef,\n        handle: \".handle\",\n        defaultPosition: position,\n        onStop: (e, data)=>setPosition({\n                x: data.x,\n                y: data.y\n            }),\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            ref: nodeRef,\n            className: \"absolute z-50 bg-white rounded-lg shadow-lg border border-gray-200 w-80 geofence-floating-panel\",\n            style: {\n                position: 'absolute',\n                top: 0,\n                left: 0\n            },\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"handle px-4 py-3 bg-indigo-600 text-white rounded-t-lg flex items-center justify-between cursor-move\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: onClose,\n                            className: \"text-white hover:bg-indigo-700 rounded-full p-1\",\n                            title: \"Close\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Search_X_lucide_react__WEBPACK_IMPORTED_MODULE_5__.X, {\n                                size: 16\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                lineNumber: 274,\n                                columnNumber: 13\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                            lineNumber: 269,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center justify-center flex-grow mx-auto\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"font-medium text-center\",\n                                children: \"Search Pin Placement\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                lineNumber: 277,\n                                columnNumber: 13\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                            lineNumber: 276,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"w-4\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                            lineNumber: 281,\n                            columnNumber: 11\n                        }, undefined),\n                        \" \"\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                    lineNumber: 268,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"p-4\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"p-4\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"mb-4\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"text-center text-sm font-medium text-gray-700 mb-1\",\n                                        children: \"Selected Location:\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                        lineNumber: 290,\n                                        columnNumber: 15\n                                    }, undefined),\n                                    coordinates && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"p-2 bg-gray-50 rounded border border-gray-200 text-center\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"text-gray-700 font-bold\",\n                                                children: isLoadingLocation ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    children: \"Loading location name...\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                                    lineNumber: 297,\n                                                    columnNumber: 23\n                                                }, undefined) : locationName ? renderFlagAndName(_lib_services_MapboxService__WEBPACK_IMPORTED_MODULE_3__.MapboxService.formatCityCountry(locationName)) : \"\".concat(coordinates.lat.toFixed(6), \", \").concat(coordinates.lng.toFixed(6))\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                                lineNumber: 295,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"text-xs text-gray-500 mt-1\",\n                                                children: [\n                                                    coordinates.lat.toFixed(6),\n                                                    \", \",\n                                                    coordinates.lng.toFixed(6)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                                lineNumber: 306,\n                                                columnNumber: 19\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                        lineNumber: 294,\n                                        columnNumber: 17\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                lineNumber: 289,\n                                columnNumber: 13\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                            lineNumber: 287,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"mb-6\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                    className: \"text-sm font-medium text-gray-700 block mb-1\",\n                                    children: [\n                                        \"Radius: \",\n                                        geofenceRadius,\n                                        \" km\"\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                    lineNumber: 316,\n                                    columnNumber: 13\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    type: \"range\",\n                                    min: \"5\",\n                                    max: \"100\",\n                                    step: \"5\",\n                                    value: geofenceRadius,\n                                    onChange: (e)=>setGeofenceRadius(parseInt(e.target.value)),\n                                    className: \"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                    lineNumber: 319,\n                                    columnNumber: 13\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex justify-between text-xs text-gray-500 mt-1\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            children: \"5 km\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                            lineNumber: 329,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            children: \"50 km\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                            lineNumber: 330,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            children: \"100 km\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                            lineNumber: 331,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                    lineNumber: 328,\n                                    columnNumber: 13\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                            lineNumber: 315,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"mb-3 text-sm text-gray-600 text-center\",\n                            children: \"Click anywhere on the map to place a search pin\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                            lineNumber: 336,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            type: \"button\",\n                            onClick: handleSearch,\n                            disabled: !coordinates || isSearching,\n                            className: \"w-full py-2 px-4 flex items-center justify-center gap-2 rounded-md \".concat(!coordinates || isSearching ? 'bg-gray-300 text-gray-500 cursor-not-allowed' : 'bg-indigo-600 text-white hover:bg-indigo-700', \" transition-colors\"),\n                            children: isSearching ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                        className: \"animate-spin h-5 w-5\",\n                                        viewBox: \"0 0 24 24\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                                                className: \"opacity-25\",\n                                                cx: \"12\",\n                                                cy: \"12\",\n                                                r: \"10\",\n                                                stroke: \"currentColor\",\n                                                strokeWidth: \"4\"\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                                lineNumber: 355,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                className: \"opacity-75\",\n                                                fill: \"currentColor\",\n                                                d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                                lineNumber: 363,\n                                                columnNumber: 19\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                        lineNumber: 354,\n                                        columnNumber: 17\n                                    }, undefined),\n                                    \"Searching...\"\n                                ]\n                            }, void 0, true) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Search_X_lucide_react__WEBPACK_IMPORTED_MODULE_5__.Search, {\n                                        size: 16\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                                        lineNumber: 373,\n                                        columnNumber: 17\n                                    }, undefined),\n                                    \"Search Aircraft\"\n                                ]\n                            }, void 0, true)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                            lineNumber: 342,\n                            columnNumber: 11\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n                    lineNumber: 285,\n                    columnNumber: 9\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n            lineNumber: 258,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\satho\\\\Documents\\\\Projects\\\\aircraft-tracking\\\\components\\\\tracking\\\\filters\\\\FloatingGeofencePanel.tsx\",\n        lineNumber: 252,\n        columnNumber: 5\n    }, undefined);\n};\n_s(FloatingGeofencePanel, \"j6mf0KOa+tc0x0TlzbyTxs0nswI=\");\n_c = FloatingGeofencePanel;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FloatingGeofencePanel);\nvar _c;\n$RefreshReg$(_c, \"FloatingGeofencePanel\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./components/tracking/filters/FloatingGeofencePanel.tsx\n"));

/***/ })

});